/* CODE GENERATED BY SPOCK 0 */
/* config.js - runtime-configuration for SPOCK */


var SPOCK = {
    STACKSIZE: 100,
    THREADSLICE: 10,
    TRACELENGTH: 32
};
/* runtime.js - SPOCK runtime (javascript part) */


SPOCK.modules = {};
SPOCK.symbolTable = {};
SPOCK.stack = 0;
SPOCK.limit = SPOCK.STACKSIZE;
SPOCK.debug = false;
SPOCK.running = false;
SPOCK.runHook = [];
SPOCK.inBrowser = "document" in this;
SPOCK.global = this;

SPOCK.Continuation = function(func, args) {
    this.k_callee = func;
    this.k_arguments = args;
};

SPOCK.Result = function(val) {
    this.value = val;
};

SPOCK.Symbol = function(name) {
    this.name = name;
    this.plist = {};
};

SPOCK.Pair = function(car, cdr) {
    this.car = car;
    this.cdr = cdr;
};

SPOCK.String = function(chars) {
    if(typeof chars === "string") {
	this.parts = [chars];
	this.length = chars.length;
    }
    else if(typeof chars === "number") this.parts = [chars.toString()];
    else this.parts = chars;	// assumes chars is array
};

SPOCK.Char = function(str) {
    this.character = str.charAt(0);
};

SPOCK.Port = function(direction, methods) {
    var port = this;
    var read = methods.read || function() {
	SPOCK.error("reading from non-input port", port);
    };

    function doread(n) {
	if(n === 0) return "";
	else if(this.peeked) {
	    var p = this.peeked;
	    this.peeked = false;

	    if(n === 1) return p;
	    else return p + read(n - 1);
	}
	else return read(n);
    }

    this.peeked = false;
    this.direction = direction;
    this.read = doread;
    this.write = methods.write || function() {
	SPOCK.error("writing to non-output port", port)
    };
    this.close = methods.close || function() {};
    this.flush = methods.flush || function() {};
    this.ready = methods.ready || function() { return true; };
    this.closed = false;
};

SPOCK.Promise = function(thunk) {
    this.thunk = thunk;
};

SPOCK.EndOfFile = function() {};
SPOCK.EOF = new SPOCK.EndOfFile();

SPOCK.check = function(val, type, loc) {
    if(typeof type === "function" && val instanceof type) return val;
    if(typeof val === type) return val;
    else SPOCK.error((loc ? "(" + loc + ") " : "") +
		     "bad argument type" +
		     (typeof type === "string" ? " - expected `" + type + "'" : ""),
		     val);
};

SPOCK.intern = function(str) {
    var old = SPOCK.symbolTable[ str ];

    if(old) return old;
    else return SPOCK.symbolTable[ str ] = new SPOCK.Symbol(str);
};

SPOCK.stringify = function(x, readable) {
    if(readable === undefined) readable = true;

    if(typeof x === "function") return "#<procedure>";
    else if(x === undefined) return "#<undefined>";
    else if(x === null) return "()";
    else if(x instanceof SPOCK.Continuation) return "#<continuation>";
    else if(x instanceof SPOCK.Symbol) return x.name;
    else if(x instanceof SPOCK.Pair) {
	var str = "(";
	var f = false;

	for(var p = x; p !== null && p instanceof SPOCK.Pair; p = p.cdr) {
	    if(f) str += " ";

	    str += SPOCK.stringify(p.car, readable);
	    f = true;
	}

	if(p !== null) str += " . " + SPOCK.stringify(p.cdr, readable);

	return str + ")";
    }
    else if(x instanceof Array) {
	var str = "#(";
	var f = false;

	for(var i in x) {
	    if(f) str += " ";

	    str += SPOCK.stringify(x[ i ], readable);
	    f = true;
	}

	return str + ")";
    }
    else if(x instanceof SPOCK.String) {
	if(readable)
	    return "\"" + x.normalize() + "\""; // XXX does not escape embedded characters
	else return x.normalize();
    }
    else if(x instanceof SPOCK.Char) {
	if(readable) return x.character;

	switch(x.character) {
	case "\n": return "#\\newline";
	case "\t": return "#\\tab";
	case "\r": return "#\\return";
	case " ": return "#\\space";
	default: return "#\\" + x.character;
	}
    }
    else if(x instanceof SPOCK.Port)
	return "#<" + x.direction + " port" +
	    (x.name ? (" \"" + x.name + "\">") : ">");
    else if(x instanceof SPOCK.Promise) return "#<promise>";
    else if(x instanceof SPOCK.EndOfFile) return "#<eof>";
    else return x.toString();
};

SPOCK.error = function(msg) {
    var args = Array.prototype.splice.call(arguments, 1);

    function argstr(x) {
	return SPOCK.stringify(x, true);
    }

    if(args.length > 0)
	msg = msg + ":\n  " + SPOCK.map(argstr, args).join("\n  ");

    throw new Error(msg);
};

if(this.quit) SPOCK.exit = quit;
else SPOCK.exit = function(code) {
	SPOCK.error("no suitable primitive available for `exit'");
    };

SPOCK.String.prototype.normalize = function() {
    if(this.parts.length === 0) return "";

    this.parts = [this.parts.join("")];
    return this.parts[ 0 ];
};

SPOCK.jstring = function(x) {
    if(typeof x === "string") return x;
    else if(x instanceof SPOCK.String) return x.normalize();
    else return x;
};

SPOCK.list = function() {
    var lst = null;
    var len = arguments.length;

    for(var i = len - 1; i >= 0; --i)
	lst = new SPOCK.Pair(arguments[ i ], lst);

    return lst;
};

SPOCK.length = function(lst) {
    for(var n = 0; lst instanceof SPOCK.Pair; ++n)
	lst = lst.cdr;

    return n;
};

SPOCK.map = function(func, array) {
    var len = array.length;
    var a2 = new Array(len);

    for(var i in array)
	a2[ i ] = func(array[ i ]);

    return a2;
};

SPOCK.eqvp = function(x, y) {
    if(x === y) return true;
    else if(x instanceof SPOCK.Char)
	return y instanceof SPOCK.Char && x.character === y.character;
    else return false;
};

SPOCK.equalp = function(x, y) {
    if(x === y) return true;
    else if(x instanceof SPOCK.Pair)
	return y instanceof SPOCK.Pair &&
	    SPOCK.equalp(x.car, y.car) &&
	    SPOCK.equalp(x.cdr, y.cdr);
    else if(x instanceof Array) {
	var len = x.length;
	if(!(y instanceof Array) || y.length != len) return false;
	for(var i = 0; i < len; ++i) {
	    if(!SPOCK.equalp(x[ i ], y[ i ])) return false;
	}
	return true;
    }
    else if(x instanceof SPOCK.Char)
	return y instanceof SPOCK.Char && x.characters === y.characters;
    else if(x instanceof SPOCK.String) {
	var s1 = x.normalize();

	if(y instanceof SPOCK.String) return s1 === y.normalize();
	else if(typeof y === 'string') return s1 === y;
	else return false;
    }
    else if(typeof x === 'string') {
	if(y instanceof SPOCK.String) return x === y.normalize();
	else if(typeof y === 'string') return x === y;
	else return false;
    }
    else return false;
};

SPOCK.count = function(args, loc) {
    if(--SPOCK.stack <= 0)
	return new SPOCK.Continuation(args.callee, Array.prototype.slice.call(args));
    else return false;
};

SPOCK.rest = function(args, count, loc) {
    var rest = null;

    // this will not unwind, but decrease the counter
    SPOCK.count(args, loc);

    for(var i = args.length - 1; i >= count; --i)
	rest = new SPOCK.Pair(args[ i ], rest);

    return rest;
};

SPOCK.statistics = function() {};

SPOCK.run = function(func) {	// optional arguments
    function terminate(result) {
	return new SPOCK.Result(result);
    }

    var k = terminate;
    var args = [k].concat(Array.prototype.slice.call(arguments, 1));
    var oldstack = SPOCK.stack;
    var oldlimit = SPOCK.limit;
    var oldrunning = SPOCK.running;
    SPOCK.limit = Math.max(10, oldlimit - oldstack);
    SPOCK.stack = SPOCK.limit;
    SPOCK.running = true;

    function restore() {
	SPOCK.stack = oldstack;
	SPOCK.limit = oldlimit;
	SPOCK.running = oldrunning;

	if(!oldrunning) {
	    for(var i in SPOCK.runHook)
		(SPOCK.runHook[ i ])(false);
	}
    }

    var result;

    if(!oldrunning) {
	for(var i in SPOCK.runHook)
	    (SPOCK.runHook[ i ])(true);
    }

    while(true) {
	result = func.apply(SPOCK.global, args);

	if(result instanceof SPOCK.Continuation) {
	    SPOCK.stack = SPOCK.STACKSIZE;
	    func = result.k_callee;
	    args = result.k_arguments;
	}
	else if(result instanceof SPOCK.Result) {
	    restore();
	    return result.value;
	}
	else {
	    restore();
	    SPOCK.error("unexpected return of non-continuation", result);
	}
    }

    return result;
};

SPOCK.callback = function(proc) {
    return function() {
	var args = Array.prototype.slice.call(arguments);
	args.unshift(proc);
	return SPOCK.run.apply(this, args);
    };
};

SPOCK.callbackMethod = function(proc) {
    var g = this;
    return function() {
	var args = Array.prototype.slice.call(arguments);
	args.unshift(this);
	args.unshift(proc);
	return SPOCK.run.apply(g, args);
    };
};

SPOCK.go = function(proc) {
    (SPOCK.callback(proc))();
};

if("java" in this) {				    // rhino
    SPOCK.makeJavaInputPort = function(jp) {
	return new SPOCK.Port("input", {
		read: function(n) {
		    var buffer = "";

		    while(n--) {
			var b = jp.read();

			if(b === -1) break;
			else buffer += String.fromCharCode(b);
		    }

		    return buffer === "" ? SPOCK.EOF : buffer;
		},

		close: function() { jp.close(); }
	    });
    };

    SPOCK.makeJavaOutputPort = function(jp) {
	return new SPOCK.Port("output", {
		write: function(s) {
		    var len = s.length;

		    for(var i = 0; i < len; ++i)
			jp.write(s.charCodeAt(i));
		},

		flush: function() { jp.flush(); },
		close: function() { jp.close(); }
	    });
    };

    SPOCK.log = function() {
	java.lang.System.err.println(Array.prototype.slice.call(arguments).join(""));
    };

    SPOCK.stdin = SPOCK.makeJavaInputPort(java.lang.System[ "in" ]);
    SPOCK.stdout = SPOCK.makeJavaOutputPort(java.lang.System.out);
    SPOCK.stderr = SPOCK.makeJavaOutputPort(java.lang.System.err);
    SPOCK.stderr.name = "[stderr]";
}
else {
    if("console" in this) SPOCK.log = console.log; // firebug
    else if(SPOCK.inBrowser)       // inside browser
	SPOCK.log = function() {
	    var msg = arguments.join(" ");

	    if(msg.charAt(msg.length - 1) == "\n")
		msg = msg.substring(0, msg.length - 1);

	    this.defaultStatus = msg;
	};
    else if("print" in this) SPOCK.log = print; // spidermonkey/v8
    else if(typeof process !== undefined) SPOCK.log = console.log; // Node.JS
    else SPOCK.error("no suitable output primitive available");

    (function() {
	var buffer = [];

	function flush() {
	    if(buffer.length > 0) {
		SPOCK.log(buffer.join(""));
		buffer = [];
	    }
	}

	function write(s) {
	    var parts = SPOCK.stringify(s, false).split("\n");
	    var len = parts.length - 1;

	    if(len > 0) {		// contains newline?
		buffer.push(parts[ 0 ]);
		flush();

		if(len > 1) {
		    for(var i = 1; i < len; ++i)
			SPOCK.log(parts[ i ]);
		}

		buffer.push(parts[ len ]);
	    }
	    else buffer.push(parts[ 0 ]);
	}

	SPOCK.stdout = new SPOCK.Port("output", { write: write, flush: flush });
	var inp;
	var ibuffer = "";

	if(this.prompt) {
	    inp = function(n) {
		while(true) {
		    if(ibuffer.length <= n) {
			var part = ibuffer.slice(0, n);
			ibuffer = ibuffer.slice(n);
			return part;
		    }

		    var input = prompt("Expecting input for " + this.toString());

		    if(input === null) return SPOCK.EOF;
		    else ibuffer += input;
		}
	    };
	}
	else {
	    inp = function(n) {
		SPOCK.error("no input possible for standard input port");
	    };
	}

	SPOCK.stdin = new SPOCK.Port("input", { read: inp });
	SPOCK.stderr = SPOCK.stdout;
    })();
}

SPOCK.stdin.name = "[stdin]";
SPOCK.stdout.name = "[stdout]";

SPOCK.flush = function() {
    // note that this always prints a newline when console.log or print is used
    SPOCK.stdout.flush();

    if(SPOCK.stderr !== SPOCK.stdout)
	SPOCK.stderr.flush();

    SPOCK.statistics();
};

if(this.gc) SPOCK.gc = gc;
else SPOCK.gc = function() {};

SPOCK.openInputUrlHook = function(url) {
    SPOCK.error("can not open", url);
};

SPOCK.openOutputUrlHook = function(url) {
    SPOCK.error("can not open", url);
};

if("java" in this) {
    SPOCK.openInputFile = function(filename) {
	var stream;

	try {
	    stream = new java.io.FileInputStream(filename);
	}
	catch(e) {
	    SPOCK.error(e.message);
	}

	var port = SPOCK.makeJavaInputPort(stream);
	port.name = filename;
	return port;
    };

    SPOCK.openOutputFile = function(filename) {
	var stream;

	try {
	    stream = new java.io.FileOutputStream(filename);
	}
	catch(e) {
	    SPOCK.error(e.message);
	}

	var port = SPOCK.makeJavaOutputPort(stream);
	port.name = filename;
	return port;
    };

    SPOCK.fileExists = function(filename) {
	return (new java.io.File(filename)).exists();
    };
}
else {
    if(SPOCK.inBrowser) {
	SPOCK.openInputFile = function(filename) {
	    if(filename.match(/^[a-z0-9]+:/))
		return SPOCK.openInputUrlHook(filename);

	    var cookies = document.cookie.split("; ");
	    var buffer = null;

	    for(var i = 0; i < cookies.length; ++i) {
		var c = cookies[ i ];
		var p = c.indexOf("=");

		if(filename === c.substring(0, p)) {
		    buffer = c.substring(p + 1);
		    break;
		}
	    }

	    if(!buffer) SPOCK.error("can not open file", filename);

	    var pos = 0;

	    return new SPOCK.Port("input", {
		    read: function(n) {
			if(pos >= buffer.length) return SPOCK.EOF;
			else if(pos + len >= buffer.length)
			    return buffer.substring(pos);

			var p1 = pos;
			pos += n;
			return buffer.substring(p1, p1 + n);
		    },

			ready: function() { return pos < buffer.length; }
	    });
	};

	SPOCK.openOutputFile = function(filename, expiry) {
	    if(filename.match(/^[a-z0-9]+:/))
		return SPOCK.openOutputUrlHook(filename);

	    return new SPOCK.Port("output", {
		    write: function(s) { buffer += s; },
			close: function() {
			var now = (new Date()).getTime();
			var exp = now + (expiry || (1000 * 60 * 60 * 24 * 365));
			document.cookie = filename + "=" + encodeURIComponent(buffer) +
			    "; expires=" + (new Date(exp)).toGMTString();
		    }
	    });
	};
    }
    else {
	SPOCK.openInputFile = function(filename) {
	    SPOCK.error("file-I/O not available");
	}

	SPOCK.openOutputFile = function(filename) {
	    SPOCK.error("file-I/O not available");
	}
    }

    SPOCK.fileExists = function(filename) {
	SPOCK.error("`file-exists?' not available");
    };
}

if("document" in this) {	// browser?
    SPOCK.load = function(url, k) {
	// http://www.nczonline.net/blog/2009/07/28/the-best-way-to-load-external-javascript/
	var script = document.createElement("script")

	script.type = "text/javascript";
	k = k || function() {};

	if (script.readyState){  //IE
	    script.onreadystatechange = function(){
		if (script.readyState == "loaded" || script.readyState == "complete"){
		    script.onreadystatechange = null;
		    k(url);
		}
	    };
	}
	else {  //Others
	    script.onload = function(){
		k(url);
	    };
	}

	script.src = url;
	document.getElementsByTagName("head")[0].appendChild(script);
    };
}
else if("load" in this) {	// rhino/SM
    SPOCK.load = function(filename, k) {
	load(filename);

	if(k) k(filename);
    };
}
/* CODE GENERATED BY SPOCK 0 */
var t1350 = function (k1097) {
 var t1351 = function (k1098, t1) {	// %list
  var t1 = SPOCK.rest(arguments, 1);
  loop: while(true) {
   return k1098(t1);
  }
 };
 ____25list = t1351;	// set! %list
 var t1353 = function(K) {
  SPOCK.count(arguments, 'values');
  return K.apply(SPOCK.global, Array.prototype.slice.call(arguments, 1));
 };
 ___values = t1353;	// set! values
 var t1354 = function(K) {
  SPOCK.count(arguments, 'call-with-values');
  var thunk = arguments[ 1 ];
  var proc = arguments[ 2 ];
  function k2() {
   var args = Array.prototype.slice.call(arguments);
   args.unshift(K);
   return proc.apply(SPOCK.global, args);}
  return thunk(k2);
 };
 ___call_2dwith_2dvalues = t1354;	// set! call-with-values
 var t1355 = function(K) {
  SPOCK.count(arguments, '%call-with-saved-values');
  var t1 = arguments[ 1 ];
  var t2 = arguments[ 2 ];
  var args;
  function k2() { return K.apply(SPOCK.global, args); }
  function k1() {
   args = Array.prototype.slice.call(arguments);
   return t2(k2);}
  return t1(k1);
 };
 ____25call_2dwith_2dsaved_2dvalues = t1355;	// set! %call-with-saved-values
 var t1356 = function (k1099, t2) {	// list?
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t3 = undefined;
  var t1357 = function (k1100, t4, t5) {	// t3
   var r = SPOCK.count(arguments);
   if(r) return r;
   loop: while(true) {
    var t1359 = null;
    var t1358 = (t4) === (t1359);
    var t6 = t1358;
    var t1360;
    if(t6 !== false) {
     return k1100(t6);
     t1360 = undefined;
    }
    else {
     var t1362 = (t4) instanceof SPOCK.Pair ;
     var t975 = t1362;
     var t1363;
     if(t975 !== false) {
      var t1364 = t4.cdr;
      var t11 = t1364;
      var t1366 = null;
      var t1365 = (t11) === (t1366);
      var t13 = t1365;
      var t1367;
      if(t13 !== false) {
       return k1100(t13);
       t1367 = undefined;
      }
      else {
       var t1369 = (t11) instanceof SPOCK.Pair ;
       var t976 = t1369;
       var t1370;
       if(t976 !== false) {
        var t1371 = t11.cdr;
        var t18 = t1371;
        var t1372 = t5.cdr;
        var t19 = t1372;
        var t1373 = (t18) === (t19);
        var t22 = t1373;
        var t1374;
        if(t22 !== false) {
         t1374 = false;
        }
        else {
         t1374 = true;
        }
        var t977 = t1374;
        var t1375;
        if(t977 !== false) {
         var t1376 = t18;
         var t1377 = t19;
         t4 = t1376;
         t5 = t1377;
         continue loop;
         t1375 = undefined;
        }
        else {
         return k1100(false);
         t1375 = undefined;
        }
        t1370 = t1375;
       }
       else {
        return k1100(false);
        t1370 = undefined;
       }
       t1367 = t1370;
      }
      t1363 = t1367;
     }
     else {
      return k1100(false);
      t1363 = undefined;
     }
     t1360 = t1363;
    }
   }
  };
  t3 = t1357;	// set! t3
  return t3(k1099, t2, t2);
 };
 ___list_3f = t1356;	// set! list?
 var t1382 = function (k1101, t25) {	// caaar
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1383 = t25.car;
   var t27 = t1383;
   var t1384 = t27.car;
   var t26 = t1384;
   var t1385 = t26.car;
   return k1101(t1385);
  }
 };
 ___caaar = t1382;	// set! caaar
 var t1387 = function (k1102, t32) {	// caadr
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1388 = t32.cdr;
   var t34 = t1388;
   var t1389 = t34.car;
   var t33 = t1389;
   var t1390 = t33.car;
   return k1102(t1390);
  }
 };
 ___caadr = t1387;	// set! caadr
 var t1392 = function (k1103, t39) {	// cadar
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1393 = t39.car;
   var t41 = t1393;
   var t1394 = t41.cdr;
   var t40 = t1394;
   var t1395 = t40.car;
   return k1103(t1395);
  }
 };
 ___cadar = t1392;	// set! cadar
 var t1397 = function (k1104, t46) {	// caddr
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1398 = t46.cdr;
   var t48 = t1398;
   var t1399 = t48.cdr;
   var t47 = t1399;
   var t1400 = t47.car;
   return k1104(t1400);
  }
 };
 ___caddr = t1397;	// set! caddr
 var t1402 = function (k1105, t53) {	// cdaar
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1403 = t53.car;
   var t55 = t1403;
   var t1404 = t55.car;
   var t54 = t1404;
   var t1405 = t54.cdr;
   return k1105(t1405);
  }
 };
 ___cdaar = t1402;	// set! cdaar
 var t1407 = function (k1106, t60) {	// cdadr
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1408 = t60.cdr;
   var t62 = t1408;
   var t1409 = t62.car;
   var t61 = t1409;
   var t1410 = t61.cdr;
   return k1106(t1410);
  }
 };
 ___cdadr = t1407;	// set! cdadr
 var t1412 = function (k1107, t67) {	// cddar
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1413 = t67.car;
   var t69 = t1413;
   var t1414 = t69.cdr;
   var t68 = t1414;
   var t1415 = t68.cdr;
   return k1107(t1415);
  }
 };
 ___cddar = t1412;	// set! cddar
 var t1417 = function (k1108, t74) {	// cdddr
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1418 = t74.cdr;
   var t76 = t1418;
   var t1419 = t76.cdr;
   var t75 = t1419;
   var t1420 = t75.cdr;
   return k1108(t1420);
  }
 };
 ___cdddr = t1417;	// set! cdddr
 var t1422 = function (k1109, t81) {	// caaaar
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1423 = t81.car;
   var t84 = t1423;
   var t1424 = t84.car;
   var t83 = t1424;
   var t1425 = t83.car;
   var t82 = t1425;
   var t1426 = t82.car;
   return k1109(t1426);
  }
 };
 ___caaaar = t1422;	// set! caaaar
 var t1428 = function (k1110, t90) {	// caaadr
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1429 = t90.cdr;
   var t93 = t1429;
   var t1430 = t93.car;
   var t92 = t1430;
   var t1431 = t92.car;
   var t91 = t1431;
   var t1432 = t91.car;
   return k1110(t1432);
  }
 };
 ___caaadr = t1428;	// set! caaadr
 var t1434 = function (k1111, t99) {	// caadar
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1435 = t99.car;
   var t102 = t1435;
   var t1436 = t102.cdr;
   var t101 = t1436;
   var t1437 = t101.car;
   var t100 = t1437;
   var t1438 = t100.car;
   return k1111(t1438);
  }
 };
 ___caadar = t1434;	// set! caadar
 var t1440 = function (k1112, t108) {	// caaddr
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1441 = t108.cdr;
   var t111 = t1441;
   var t1442 = t111.cdr;
   var t110 = t1442;
   var t1443 = t110.car;
   var t109 = t1443;
   var t1444 = t109.car;
   return k1112(t1444);
  }
 };
 ___caaddr = t1440;	// set! caaddr
 var t1446 = function (k1113, t117) {	// cadaar
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1447 = t117.car;
   var t120 = t1447;
   var t1448 = t120.car;
   var t119 = t1448;
   var t1449 = t119.cdr;
   var t118 = t1449;
   var t1450 = t118.car;
   return k1113(t1450);
  }
 };
 ___cadaar = t1446;	// set! cadaar
 var t1452 = function (k1114, t126) {	// cadadr
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1453 = t126.cdr;
   var t129 = t1453;
   var t1454 = t129.car;
   var t128 = t1454;
   var t1455 = t128.car;
   var t127 = t1455;
   var t1456 = t127.car;
   return k1114(t1456);
  }
 };
 ___cadadr = t1452;	// set! cadadr
 var t1458 = function (k1115, t135) {	// caddar
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1459 = t135.car;
   var t138 = t1459;
   var t1460 = t138.cdr;
   var t137 = t1460;
   var t1461 = t137.car;
   var t136 = t1461;
   var t1462 = t136.car;
   return k1115(t1462);
  }
 };
 ___caddar = t1458;	// set! caddar
 var t1464 = function (k1116, t144) {	// cadddr
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1465 = t144.cdr;
   var t147 = t1465;
   var t1466 = t147.cdr;
   var t146 = t1466;
   var t1467 = t146.car;
   var t145 = t1467;
   var t1468 = t145.car;
   return k1116(t1468);
  }
 };
 ___cadddr = t1464;	// set! cadddr
 var t1470 = function (k1117, t153) {	// cdaaar
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1471 = t153.car;
   var t156 = t1471;
   var t1472 = t156.car;
   var t155 = t1472;
   var t1473 = t155.car;
   var t154 = t1473;
   var t1474 = t154.cdr;
   return k1117(t1474);
  }
 };
 ___cdaaar = t1470;	// set! cdaaar
 var t1476 = function (k1118, t162) {	// cdaadr
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1477 = t162.cdr;
   var t165 = t1477;
   var t1478 = t165.car;
   var t164 = t1478;
   var t1479 = t164.car;
   var t163 = t1479;
   var t1480 = t163.cdr;
   return k1118(t1480);
  }
 };
 ___cdaadr = t1476;	// set! cdaadr
 var t1482 = function (k1119, t171) {	// cdadar
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1483 = t171.car;
   var t174 = t1483;
   var t1484 = t174.cdr;
   var t173 = t1484;
   var t1485 = t173.car;
   var t172 = t1485;
   var t1486 = t172.cdr;
   return k1119(t1486);
  }
 };
 ___cdadar = t1482;	// set! cdadar
 var t1488 = function (k1120, t180) {	// cdaddr
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1489 = t180.cdr;
   var t183 = t1489;
   var t1490 = t183.cdr;
   var t182 = t1490;
   var t1491 = t182.car;
   var t181 = t1491;
   var t1492 = t181.cdr;
   return k1120(t1492);
  }
 };
 ___cdaddr = t1488;	// set! cdaddr
 var t1494 = function (k1121, t189) {	// cddaar
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1495 = t189.car;
   var t192 = t1495;
   var t1496 = t192.car;
   var t191 = t1496;
   var t1497 = t191.cdr;
   var t190 = t1497;
   var t1498 = t190.cdr;
   return k1121(t1498);
  }
 };
 ___cddaar = t1494;	// set! cddaar
 var t1500 = function (k1122, t198) {	// cddadr
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1501 = t198.cdr;
   var t201 = t1501;
   var t1502 = t201.car;
   var t200 = t1502;
   var t1503 = t200.cdr;
   var t199 = t1503;
   var t1504 = t199.cdr;
   return k1122(t1504);
  }
 };
 ___cddadr = t1500;	// set! cddadr
 var t1506 = function (k1123, t207) {	// cdddar
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1507 = t207.car;
   var t210 = t1507;
   var t1508 = t210.cdr;
   var t209 = t1508;
   var t1509 = t209.cdr;
   var t208 = t1509;
   var t1510 = t208.cdr;
   return k1123(t1510);
  }
 };
 ___cdddar = t1506;	// set! cdddar
 var t1512 = function (k1124, t216) {	// cddddr
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1513 = t216.cdr;
   var t219 = t1513;
   var t1514 = t219.cdr;
   var t218 = t1514;
   var t1515 = t218.cdr;
   var t217 = t1515;
   var t1516 = t217.cdr;
   return k1124(t1516);
  }
 };
 ___cddddr = t1512;	// set! cddddr
 var t1518 = function (k1125, t225) {	// append
  var t225 = SPOCK.rest(arguments, 1);
  var t1520 = null;
  var t1519 = (t225) === (t1520);
  var t978 = t1519;
  var t1521;
  if(t978 !== false) {
   var t1522 = null;
   return k1125(t1522);
   t1521 = undefined;
  }
  else {
   var t229 = undefined;
   var t1524 = function (k1126, t230) {	// t229
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t1525 = t230.cdr;
    var t231 = t1525;
    var t1527 = null;
    var t1526 = (t231) === (t1527);
    var t979 = t1526;
    var t1528;
    if(t979 !== false) {
     var t1529 = t230.car;
     return k1126(t1529);
     t1528 = undefined;
    }
    else {
     var t236 = undefined;
     var t1531 = function (k1127, t237) {	// t236
      var r = SPOCK.count(arguments);
      if(r) return r;
      var t1532 = (t237) instanceof SPOCK.Pair ;
      var t980 = t1532;
      var t1533;
      if(t980 !== false) {
       var t1534 = t237.car;
       var t239 = t1534;
       var t1535 = function (t1128) {
        var t240 = t1128;
        var t1536 = new SPOCK.Pair(t239, t240);
        return k1127(t1536);
       };
       var t1538 = t237.cdr;
       return t236(t1535, t1538);
       t1533 = undefined;
      }
      else {
       var t243 = t230;
       var t1540 = t243.cdr;
       return t229(k1127, t1540);
       t1533 = undefined;
      }
     };
     t236 = t1531;	// set! t236
     var t1542 = t230.car;
     return t236(k1126, t1542);
     t1528 = undefined;
    }
   };
   t229 = t1524;	// set! t229
   return t229(k1125, t225);
   t1521 = undefined;
  }
 };
 ___append = t1518;	// set! append
 var t1545 = function (k1129, t245) {	// reverse
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t246 = undefined;
  var t1546 = function (k1130, t247, t248) {	// t246
   var r = SPOCK.count(arguments);
   if(r) return r;
   loop: while(true) {
    var t1547 = (t247) instanceof SPOCK.Pair ;
    var t981 = t1547;
    var t1548;
    if(t981 !== false) {
     var t1551 = t247.cdr;
     var t1549 = t1551;
     var t1552 = t247.car;
     var t251 = t1552;
     var t1553 = new SPOCK.Pair(t251, t248);
     var t1550 = t1553;
     t247 = t1549;
     t248 = t1550;
     continue loop;
     t1548 = undefined;
    }
    else {
     return k1130(t248);
     t1548 = undefined;
    }
   }
  };
  t246 = t1546;	// set! t246
  var t1555 = null;
  return t246(k1129, t245, t1555);
 };
 ___reverse = t1545;	// set! reverse
 var t1557 = function (k1131, t254, t255) {	// list-tail
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t256 = undefined;
  var t1558 = function (k1132, t257, t258) {	// t256
   var r = SPOCK.count(arguments);
   if(r) return r;
   loop: while(true) {
    var t1560 = (t257)  <= 0 ;
    var t1559;
    if(t1560 !== false) {
     return k1132(t258);
     t1559 = undefined;
    }
    else {
     var t1564 = (t257)  - 1 ;
     var t1562 = t1564;
     var t1565 = t258.cdr;
     var t1563 = t1565;
     t257 = t1562;
     t258 = t1563;
     continue loop;
     t1559 = undefined;
    }
   }
  };
  t256 = t1558;	// set! t256
  return t256(k1131, t255, t254);
 };
 ___list_2dtail = t1557;	// set! list-tail
 var t260 = ___list_2dtail;
 var t1567 = function (k1133, t261, t262) {	// t260
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1568 = function (t1134) {
   var t263 = t1134;
   var t1569 = t263.car;
   return k1133(t1569);
  };
  return t260(t1568, t261, t262);
 };
 ___list_2dref = t1567;	// set! list-ref
 var t1572 = function(K) {
  SPOCK.count(arguments, 'memq');
  var x = arguments[ 1 ];
  for(var n = arguments[ 2 ]; n instanceof SPOCK.Pair; n = n.cdr) {
    if(n.car === x) return K(n);
  }
  return K(false);
 };
 ___memq = t1572;	// set! memq
 var t1573 = function(K) {
  SPOCK.count(arguments, 'memv');
  var x = arguments[ 1 ];
  for(var n = arguments[ 2 ]; n instanceof SPOCK.Pair; n = n.cdr) {
    if(SPOCK.eqvp(n.car, x)) return K(n);
  }
  return K(false);
 };
 ___memv = t1573;	// set! memv
 var t1574 = function(K) {
  SPOCK.count(arguments, 'member');
  var x = arguments[ 1 ];
  for(var n = arguments[ 2 ]; n instanceof SPOCK.Pair; n = n.cdr) {
    if(SPOCK.equalp(n.car, x)) return K(n);
  }
  return K(false);
 };
 ___member = t1574;	// set! member
 var t1575 = function(K) {
  SPOCK.count(arguments, 'assq');
  var x = arguments[ 1 ];
  for(var n = arguments[ 2 ]; n instanceof SPOCK.Pair; n = n.cdr) {
    var p = n.car;
    if(p instanceof SPOCK.Pair && p.car === x) return K(p);
  }
  return K(false);
 };
 ___assq = t1575;	// set! assq
 var t1576 = function(K) {
  SPOCK.count(arguments, 'assv');
  var x = arguments[ 1 ];
  for(var n = arguments[ 2 ]; n instanceof SPOCK.Pair; n = n.cdr) {
    var p = n.car;
    if(p instanceof SPOCK.Pair && SPOCK.eqvp(p.car, x)) return K(p);
  }
  return K(false);
 };
 ___assv = t1576;	// set! assv
 var t1577 = function(K) {
  SPOCK.count(arguments, 'assoc');
  var x = arguments[ 1 ];
  for(var n = arguments[ 2 ]; n instanceof SPOCK.Pair; n = n.cdr) {
    var p = n.car;
    if(p instanceof SPOCK.Pair && SPOCK.equalp(p.car, x)) return K(p);
  }
  return K(false);
 };
 ___assoc = t1577;	// set! assoc
 var t1578 = function(K) {
  SPOCK.count(arguments, '%+');
  var len = arguments.length;
  switch(len) {
  case 1: return K(0);
  case 2: return K(arguments[ 1 ]);
  default:
   var p = arguments[ 1 ];
   for(var i = 2; i < len; ++i) {
    p += arguments[ i ];
   }
   return K(p);}
 };
 ____25_2b = t1578;	// set! %+
 var t1579 = function(K) {
  SPOCK.count(arguments, '%-');
  var len = arguments.length;
  switch(len) {
  case 2: return K(-arguments[ 1 ]);
  default:
   var p = arguments[ 1 ];
   for(var i = 2; i < len; ++i) {
    p -= arguments[ i ];
   }
   return K(p);}
 };
 ____25_2d = t1579;	// set! %-
 var t1580 = function(K) {
  SPOCK.count(arguments, '%*');
  var len = arguments.length;
  switch(len) {
  case 1: return K(1);
  case 2: return K(arguments[ 1 ]);
  default:
   var p = arguments[ 1 ];
   for(var i = 2; i < len; ++i) {
    p *= arguments[ i ];
   }
   return K(p);}
 };
 ____25_2a = t1580;	// set! %*
 var t1581 = function(K) {
  SPOCK.count(arguments, '%/');
  var len = arguments.length;
  switch(len) {
  case 2: return K(1/arguments[ 1 ]);
  default:
   var p = arguments[ 1 ];
   for(var i = 2; i < len; ++i) {
    p /= arguments[ i ];
   }
   return K(p);}
 };
 ____25_2f = t1581;	// set! %/
 var t1582 = function(K) {
  SPOCK.count(arguments, '%=');
  var argc = arguments.length;
  var last = SPOCK.check(arguments[ 1 ], 'number', '=');
  for(var i = 2; i < argc; ++i) {
   var x = SPOCK.check(arguments[ i ], 'number', '=');
   if(last !== x) return K(false);
   else last = x;}
  return K(true);
 };
 ____25_3d = t1582;	// set! %=
 var t1583 = function(K) {
  SPOCK.count(arguments, '%>');
  var argc = arguments.length;
  var last = SPOCK.check(arguments[ 1 ], 'number', '>');
  for(var i = 2; i < argc; ++i) {
   var x = SPOCK.check(arguments[ i ], 'number', '>');
   if(last <= x) return K(false);
   else last = x;}
  return K(true);
 };
 ____25_3e = t1583;	// set! %>
 var t1584 = function(K) {
  SPOCK.count(arguments, '%<');
  var argc = arguments.length;
  var last = SPOCK.check(arguments[ 1 ], 'number', '<');
  for(var i = 2; i < argc; ++i) {
   var x = SPOCK.check(arguments[ i ], 'number', '<');
   if(last >= x) return K(false);
   else last = x;}
  return K(true);
 };
 ____25_3c = t1584;	// set! %<
 var t1585 = function(K) {
  SPOCK.count(arguments, '%>=');
  var argc = arguments.length;
  var last = SPOCK.check(arguments[ 1 ], 'number', '>=');
  for(var i = 2; i < argc; ++i) {
   var x = SPOCK.check(arguments[ i ], 'number', '>=');
   if(last < x) return K(false);
   else last = x;}
  return K(true);
 };
 ____25_3e_3d = t1585;	// set! %>=
 var t1586 = function(K) {
  SPOCK.count(arguments, '%<=');
  var argc = arguments.length;
  var last = SPOCK.check(arguments[ 1 ], 'number', '<=');
  for(var i = 2; i < argc; ++i) {
   var x = SPOCK.check(arguments[ i ], 'number', '<=');
   if(last > x) return K(false);
   else last = x;}
  return K(true);
 };
 ____25_3c_3d = t1586;	// set! %<=
 var t1587 = function(K) {
  SPOCK.count(arguments, '%max');
  return K(Math.max.apply(SPOCK.global, arguments));
 };
 ____25max = t1587;	// set! %max
 var t1588 = function(K) {
  SPOCK.count(arguments, '%max');
  return K(Math.min.apply(SPOCK.global, arguments));
 };
 ____25max = t1588;	// set! %max
 var t1589 = function (k1135, t264, t265) {	// modulo
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1590 = (t264)  /  (t265);
   var t275 = t1590;
   var t1592 = (t275)  < 0 ;
   var t1591;
   if(t1592 !== false) {
    var t1593 = Math.ceil(t275);
    t1591 = t1593;
   }
   else {
    var t1594 = Math.floor(t275);
    t1591 = t1594;
   }
   var t271 = t1591;
   var t1595 = (t271)  *  (t265);
   var t270 = t1595;
   var t1596 = (t264)  -  (t270);
   var t266 = t1596;
   var t1597 = (t265)  <  (0);
   var t982 = t1597;
   var t1598;
   if(t982 !== false) {
    var t1599 = (t266)  <=  (0);
    var t983 = t1599;
    var t1600;
    if(t983 !== false) {
     t1600 = t266;
    }
    else {
     var t1601 = (t266)  +  (t265);
     t1600 = t1601;
    }
    t1598 = t1600;
   }
   else {
    var t1602 = (t266)  >=  (0);
    var t984 = t1602;
    var t1603;
    if(t984 !== false) {
     t1603 = t266;
    }
    else {
     var t1604 = (t266)  +  (t265);
     t1603 = t1604;
    }
    t1598 = t1603;
   }
   return k1135(t1598);
  }
 };
 ___modulo = t1589;	// set! modulo
 var t1606 = function (k1136, t289, t290) {	// t288
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1607 = (t289)  /  (t290);
   var t297 = t1607;
   var t1609 = (t297)  < 0 ;
   var t1608;
   if(t1609 !== false) {
    var t1610 = Math.ceil(t297);
    t1608 = t1610;
   }
   else {
    var t1611 = Math.floor(t297);
    t1608 = t1611;
   }
   var t293 = t1608;
   var t1612 = (t293)  *  (t290);
   var t292 = t1612;
   var t1613 = (t289)  -  (t292);
   return k1136(t1613);
  }
 };
 var t288 = t1606;
 var t1615 = function (k1137, t300, t301) {	// t288
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t302 = undefined;
  var t1616 = function (k1138, t303, t304) {	// t302
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t1617 = (0) === (t304);
   var t985 = t1617;
   var t1618;
   if(t985 !== false) {
    var t1619 = Math.abs(t303);
    return k1138(t1619);
    t1618 = undefined;
   }
   else {
    var t1621 = function (t1139) {
     return t302(k1138, t304, t1139);
    };
    return t288(t1621, t303, t304);
    t1618 = undefined;
   }
  };
  t302 = t1616;	// set! t302
  return t302(k1137, t300, t301);
 };
 ____25gcd = t1615;	// set! %gcd
 var t1625 = function (k1140, t309) {	// gcd
  var t309 = SPOCK.rest(arguments, 1);
  var t1627 = null;
  var t1626 = (t309) === (t1627);
  var t986 = t1626;
  var t1628;
  if(t986 !== false) {
   return k1140(0);
   t1628 = undefined;
  }
  else {
   var t313 = undefined;
   var t1630 = function (k1141, t314, t315) {	// t313
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t1631 = t314.car;
    var t316 = t1631;
    var t1632 = t314.cdr;
    var t317 = t1632;
    var t1634 = null;
    var t1633 = (t317) === (t1634);
    var t987 = t1633;
    var t1635;
    if(t987 !== false) {
     var t1636 = Math.abs(t316);
     return k1141(t1636);
     t1635 = undefined;
    }
    else {
     var t1638 = t317.car;
     var t324 = t1638;
     var t1639 = function (t1143) {
      var t326 = t1143;
      var t1640 = t317.cdr;
      var t327 = t1640;
      var t1641 = new SPOCK.Pair(t326, t327);
      var t1142 = t1641;
      return t313(k1141, t1142, false);
     };
     return ____25gcd(t1639, t316, t324);
     t1635 = undefined;
    }
   };
   t313 = t1630;	// set! t313
   return t313(k1140, t309, true);
   t1628 = undefined;
  }
 };
 ___gcd = t1625;	// set! gcd
 var t1645 = function (k1144, t329, t330) {	// %lcm
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1646 = (t329)  *  (t330);
  var t331 = t1646;
  var t1647 = function (t1145) {
   var t332 = t1145;
   var t1648 = (t331)  /  (t332);
   var t335 = t1648;
   var t1650 = (t335)  < 0 ;
   var t1649;
   if(t1650 !== false) {
    var t1651 = Math.ceil(t335);
    t1649 = t1651;
   }
   else {
    var t1652 = Math.floor(t335);
    t1649 = t1652;
   }
   return k1144(t1649);
  };
  return ____25gcd(t1647, t329, t330);
 };
 ____25lcm = t1645;	// set! %lcm
 var t1655 = function (k1146, t338) {	// lcm
  var t338 = SPOCK.rest(arguments, 1);
  var t1657 = null;
  var t1656 = (t338) === (t1657);
  var t988 = t1656;
  var t1658;
  if(t988 !== false) {
   return k1146(1);
   t1658 = undefined;
  }
  else {
   var t342 = undefined;
   var t1660 = function (k1147, t343, t344) {	// t342
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t1661 = t343.car;
    var t345 = t1661;
    var t1662 = t343.cdr;
    var t346 = t1662;
    var t1664 = null;
    var t1663 = (t346) === (t1664);
    var t989 = t1663;
    var t1665;
    if(t989 !== false) {
     var t1666 = Math.abs(t345);
     return k1147(t1666);
     t1665 = undefined;
    }
    else {
     var t1668 = t346.car;
     var t353 = t1668;
     var t1669 = function (t1149) {
      var t355 = t1149;
      var t1670 = t346.cdr;
      var t356 = t1670;
      var t1671 = new SPOCK.Pair(t355, t356);
      var t1148 = t1671;
      return t342(k1147, t1148, false);
     };
     return ____25lcm(t1669, t345, t353);
     t1665 = undefined;
    }
   };
   t342 = t1660;	// set! t342
   return t342(k1146, t338, true);
   t1658 = undefined;
  }
 };
 ___lcm = t1655;	// set! lcm
 var t1675 = function(K) {
  SPOCK.count(arguments, 'string->symbol');
  var str = SPOCK.jstring(arguments[ 1 ]);
  return K(SPOCK.intern(str));
 };
 ___string_2d_3esymbol = t1675;	// set! string->symbol
 var t1676 = function (k1150, t358, t359) {	// get
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1678 = t359.name;
   var t1677 = (t358) .plist[ (t1678) ] ;
   var t360 = t1677;
   var t1679 = t360 === undefined;
   var t361 = t1679;
   var t1680;
   if(t361 !== false) {
    t1680 = false;
   }
   else {
    t1680 = true;
   }
   var t990 = t1680;
   var t1681;
   if(t990 !== false) {
    t1681 = t360;
   }
   else {
    t1681 = false;
   }
   return k1150(t1681);
  }
 };
 ___get = t1676;	// set! get
 var t1683 = function (k1151, t363, t364, t365) {	// put!
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1685 = t364.name;
   var t1684 = (t363) .plist[ (t1685) ] =  (t365);
   return k1151(t1684);
  }
 };
 ___put_21 = t1683;	// set! put!
 var t1687 = function(K) {
  SPOCK.count(arguments, 'string-append');
  var args = Array.prototype.slice.call(arguments, 1);
  var strs = SPOCK.map(function(x) { return SPOCK.jstring(x); }, args);
  return K(new SPOCK.String(strs));
 };
 ___string_2dappend = t1687;	// set! string-append
 var t1688 = function(K) {
  SPOCK.count(arguments, 'string');
  var str = [];
  var len = arguments.length - 1;
  for(var i = 1; i <= len; ++i) {
   var x = arguments[ i ];
   if(x instanceof SPOCK.Char) str.push(x.character);
   else SPOCK.error('bad argument type - not a character', x);}
  return K(new SPOCK.String(str.join('')));
 };
 ___string = t1688;	// set! string
 var t1689 = function(K) {
  SPOCK.count(arguments, 'string->list');
  var str = SPOCK.jstring(arguments[ 1 ]);
  var lst = null;
  var len = str.length;
  for(var i = len - 1; i >= 0; --i)
   lst = new SPOCK.Pair(new SPOCK.Char(str.charAt(i)), lst);
  return K(lst);
 };
 ___string_2d_3elist = t1689;	// set! string->list
 var t1690 = function(K) {
  SPOCK.count(arguments, 'list->string');
  var lst = arguments[ 1 ];
  var str = [];
  while(lst instanceof SPOCK.Pair) {
   str.push(SPOCK.check(lst.car, SPOCK.Char).character);
   lst = lst.cdr;}
  return K(new SPOCK.String(str.join('')));
 };
 ___list_2d_3estring = t1690;	// set! list->string
 var t1691 = function(K) {
  SPOCK.count(arguments, 'make-string');
  var n = SPOCK.check(arguments[ 1 ], 'number', 'make-string');
  var c = arguments[ 2 ];
  var a = new Array(n);
  if(c !== undefined)
   c = SPOCK.check(c, SPOCK.Char, 'make-string').character;
  else c = ' ';
  for(var i = 0; i < n; ++i) a[ i ] = c;
  return K(new SPOCK.String(a.join('')));
 };
 ___make_2dstring = t1691;	// set! make-string
 var t1692 = function(K) {
  SPOCK.count(arguments, 'string-ref');
  var str = arguments[ 1 ];
  var i = SPOCK.check(arguments[ 2 ], 'number', 'string-ref');
  if(typeof str === 'string')
   return K(new SPOCK.Char(str.charAt(i)));
  else if(str instanceof SPOCK.String) {
   var parts = str.parts;
   for(var p in parts) {
    var l = parts[ p ].length;
    if(i <= l) return K(new SPOCK.Char(parts[ p ].charAt(i)));
    else i -= l;}
   SPOCK.error('`string-ref\' out of range', str, i);}
 };
 ___string_2dref = t1692;	// set! string-ref
 var t1693 = function(K) {
  SPOCK.count(arguments, 'string-set!');
  var str = arguments[ 1 ];
  var i = SPOCK.check(arguments[ 2 ], 'number', 'string-set!');
  var c = SPOCK.check(arguments[ 3 ], SPOCK.Char, 'string-set!');
  if(typeof str === 'string')
   SPOCK.error('argument to `string-set!\' is not a mutable string', str);
  else if(str instanceof SPOCK.String) {
   var parts = str.parts;
   for(var p in parts) {
    var part = parts[ p ];
    var l = part.length;
    if(i <= l) {
     parts[ p ] = part.substring(0, i) + c.character + part.substring(i + 1);
     return K(undefined);
    } else i -= l;}
   SPOCK.error('`string-set!\' out of range', str, i);}
 };
 ___string_2dset_21 = t1693;	// set! string-set!
 var t1694 = function (k1152, t366, t367, t368) {	// string-copy
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1695 = SPOCK.jstring(t366);
   var t369 = t1695;
   var t1696 = t367 === undefined;
   var t991 = t1696;
   var t1697;
   if(t991 !== false) {
    t1697 = 0;
   }
   else {
    t1697 = t367;
   }
   var t371 = t1697;
   var t1698 = t368 === undefined;
   var t992 = t1698;
   var t1699;
   if(t992 !== false) {
    var t1700 = t369.length;
    t1699 = t1700;
   }
   else {
    t1699 = t368;
   }
   var t373 = t1699;
   var t1701 = t369.slice(t371, t373);
   var t375 = t1701;
   var t1702 = new SPOCK.String(t375);
   return k1152(t1702);
  }
 };
 ___string_2dcopy = t1694;	// set! string-copy
 var t1704 = function (k1153, t376, t377, t378, t379) {	// string-fill!
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1705;
  if(true !== false) {
   t1705 = false;
  }
  else {
   t1705 = true;
  }
  var t993 = t1705;
  var t1706 = function (t1154) {	// t1155
   var t1707 = t376.normalize();
   var t381 = t1707;
   var t382 = t377;
   var t1708 = t378 === undefined;
   var t994 = t1708;
   var t1709;
   if(t994 !== false) {
    t1709 = 0;
   }
   else {
    t1709 = t378;
   }
   var t383 = t1709;
   var t1710 = t379 === undefined;
   var t995 = t1710;
   var t1711;
   if(t995 !== false) {
    var t1712 = t381.length;
    t1711 = t1712;
   }
   else {
    t1711 = t379;
   }
   var t385 = t1711;
   var t1713 = function(K) {
    SPOCK.count(arguments);
    var str = arguments[ 1 ];
    var from = arguments[ 2 ];
    var to = arguments[ 3 ];
    var c = arguments[ 4 ];
    var snew = new Array(to - from);
    for(var i in snew) snew[ i ] = c;
    str.parts = [str.parts[ 0 ].substring(0, from), snew.join(''),
     str.parts[ 0 ].substring(to)];
    return K(str);
   };
   return t1713(k1153, t376, t383, t385, t382);
  };
  var t1155 = t1706;
  var t1715;
  if(t993 !== false) {
   return ____25error(t1155, "bad argument type - not a mutable string", t376);
   t1715 = undefined;
  }
  else {
   return t1155(undefined);
   t1715 = undefined;
  }
 };
 ___string_2dfill_21 = t1704;	// set! string-fill!
 var t1718 = function(K) {
  SPOCK.count(arguments, 'vector');
  return K(Array.prototype.slice.call(arguments, 1));
 };
 ___vector = t1718;	// set! vector
 var t1719 = function(K) {
  SPOCK.count(arguments, 'make-vector');
  var n = SPOCK.check(arguments[ 1 ], 'number', 'make-vector');
  var x = arguments[ 2 ];
  var a = new Array(n);
  if(x !== undefined) {
   for(var i = 0; i < n; ++i) a[ i ] = x;}
  return K(a);
 };
 ___make_2dvector = t1719;	// set! make-vector
 var t1720 = function(K) {
  SPOCK.count(arguments, 'vector->list');
  var vec = SPOCK.check(arguments[ 1 ], Array, 'vector->list');
  var lst = null;
  var len = vec.length;
  for(var i = len - 1; i >= 0; --i)
   lst = new SPOCK.Pair(vec[ i ], lst);
  return K(lst);
 };
 ___vector_2d_3elist = t1720;	// set! vector->list
 var t1721 = function(K) {
  SPOCK.count(arguments, 'list->vector');
  var lst = arguments[ 1 ];
  var vec = [];
  while(lst instanceof SPOCK.Pair) {
   vec.push(lst.car);
   lst = lst.cdr;}
  return K(vec);
 };
 ___list_2d_3evector = t1721;	// set! list->vector
 var t1722 = function(K) {
  SPOCK.count(arguments, 'vector-fill!');
  var vec = SPOCK.check(arguments[ 1 ], Array, 'vector-fill!');
  var x = arguments[ 2 ];
  var from = arguments[ 3 ];
  var to = arguments[ 4 ];
  if(from === undefined) from = 0;
  if(to === undefined) to = vec.length;
  for(var i = from; i < to; ++i)
   vec[ i ] = x;
  return K(undefined);
 };
 ___vector_2dfill_21 = t1722;	// set! vector-fill!
 var t1723 = function(K) {
  SPOCK.count(arguments, 'string->number');
  var str = SPOCK.jstring(arguments[ 1 ]);
  var base = arguments[ 2 ];
  if(!base) base = 10;
  else base = SPOCK.check(base, 'number', 'string->number');
  var m = true, neg = 1;
  while(m) {
   m = str.match(/^#[eboxid]/);
   if(m) {
    switch(str[ 1 ]) {
    case 'e':
    case 'i': break;
    case 'd': base = 10; break;
    case 'o': base = 8; break;
    case 'x': base = 16; break;
    case 'b': base = 2; break;
    default: return K(false);}
    str = str.substring(2);}}
  switch(str[ 0 ]) {
  case '-': neg = -1; str = str.substring(1); break;
  case '+': str = str.substring(1);}
  var num, den = false;
  if((m = str.match(/^([^\/]+)\/(.+)$/))) {
    str = m[ 1 ];
    den = m[ 2 ];}
  function num3(s) {
   var tr = null;
   switch(base) {
   case 2: tr = /^[0-1]+$/; break;
   case 8: tr = /^[0-7]+$/; break;
   case 10: tr = /^[#0-9]*\.?[#0-9]+([esdfl][-+]?[0-9]+)?$/; break;
   case 16: tr = /^[0-9a-fA-F]+$/;}
   if(tr && !s.match(tr)) return false;
   var s2 = s.replace(/#/g, '0');
   if(base === 10) s2 = parseFloat(s2.replace(/[esdfl]/g, 'e'));
   else if(s2 !== s) return false;
   else s2 = parseInt(s2, base);
   return isNaN(s2) ? false : s2;}
  if((num = num3(str)) === false) return K(false);
  if(den && !(den = num3(den))) return K(false);
  return K(neg * num / (den || 1));
 };
 ___string_2d_3enumber = t1723;	// set! string->number
 var t1724 = function(K) {
  SPOCK.count(arguments, '%show');
  arguments[ 2 ].write(arguments[ 1 ]);
  return K(undefined);
 };
 ____25show = t1724;	// set! %show
 var t1725 = function(K) {
  SPOCK.count(arguments, '%fetch');
  return K(arguments[ 2 ].read(arguments[ 1 ]));
 };
 ____25fetch = t1725;	// set! %fetch
 var t1726 = function (k1156, t387) {	// newline
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1727 = t387 === undefined;
  var t996 = t1727;
  var t1728;
  if(t996 !== false) {
   t1728 = SPOCK.stdout;
  }
  else {
   t1728 = t387;
  }
  return ____25show(k1156, "\n", t1728);
 };
 ___newline = t1726;	// set! newline
 var t1730 = function (k1157, t392) {	// read-char
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1731 = function (t1158) {
   var t393 = t1158;
   var t400 = SPOCK.EOF;
   var t1732 = (t393) === (t400);
   var t998 = t1732;
   var t1733;
   if(t998 !== false) {
    t1733 = t393;
   }
   else {
    var t1734 = new SPOCK.Char(t393);
    t1733 = t1734;
   }
   return k1157(t1733);
  };
  var t1736 = t392 === undefined;
  var t997 = t1736;
  var t1737;
  if(t997 !== false) {
   t1737 = SPOCK.stdin;
  }
  else {
   t1737 = t392;
  }
  return ____25fetch(t1731, 1, t1737);
 };
 ___read_2dchar = t1730;	// set! read-char
 var t1739 = function (k1159, t401, t402) {	// write-char
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1740 = t401.character;
  var t1741 = t402 === undefined;
  var t999 = t1741;
  var t1742;
  if(t999 !== false) {
   t1742 = SPOCK.stdout;
  }
  else {
   t1742 = t402;
  }
  return ____25show(k1159, t1740, t1742);
 };
 ___write_2dchar = t1739;	// set! write-char
 var t407 = ___read_2dchar;
 var t1744 = function (k1160, t408) {	// t407
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1745 = function (t1161) {
   var t409 = t1161;
   var t413 = SPOCK.EOF;
   var t1746 = (t409) === (t413);
   var t410 = t1746;
   var t1747;
   if(t410 !== false) {
    t1747 = false;
   }
   else {
    t1747 = true;
   }
   var t1000 = t1747;
   var t1748;
   if(t1000 !== false) {
    var t1750 = t409.character;
    var t1749 = (t408) .peeked =  (t1750);
    t1748 = t1749;
   }
   else {
    t1748 = undefined;
   }
   return k1160(t409);
  };
  return t407(t1745, t408);
 };
 ___peek_2dchar = t1744;	// set! peek-char
 var t1753 = function (k1162, t414) {	// char-ready?
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1754 = t414.ready();
   return k1162(t1754);
  }
 };
 ___char_2dready_3f = t1753;	// set! char-ready?
 var t1756 = function (k1163, t418, t419, t420) {	// %print-hook
  var r = SPOCK.count(arguments);
  if(r) return r;
  return ____25show(k1163, "#<unknown object>", t419);
 };
 ____25print_2dhook = t1756;	// set! %print-hook
 var t1758 = function (k1164, t421, t422) {	// display
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1759 = t422 === undefined;
  var t1001 = t1759;
  var t1760;
  if(t1001 !== false) {
   t1760 = SPOCK.stdout;
  }
  else {
   t1760 = t422;
  }
  var t423 = t1760;
  var t428 = undefined;
  var t1761 = function (k1165, t429) {	// t428
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t1763 = null;
   var t1762 = (t429) === (t1763);
   var t1002 = t1762;
   var t1764;
   if(t1002 !== false) {
    return ____25show(k1165, "()", t423);
    t1764 = undefined;
   }
   else {
    var t1766 = typeof(t429);
    var t434 = t1766;
    var t1767 = (t434) === ("number");
    var t1003 = t1767;
    var t1768;
    if(t1003 !== false) {
     var t1771 = undefined === undefined;
     var t1004 = t1771;
     var t1772;
     if(t1004 !== false) {
      t1772 = 10;
     }
     else {
      t1772 = undefined;
     }
     var t1770 = t429.toString(t1772);
     var t1769 = new SPOCK.String(t1770);
     var t436 = t1769;
     var t1773 = SPOCK.jstring(t436);
     return ____25show(k1165, t1773, t423);
     t1768 = undefined;
    }
    else {
     var t1775 = typeof(t429);
     var t442 = t1775;
     var t1776 = (t442) === ("string");
     var t441 = t1776;
     var t1777;
     if(t441 !== false) {
      t1777 = t441;
     }
     else {
      var t1778 = (t429) instanceof SPOCK.String ;
      t1777 = t1778;
     }
     var t1005 = t1777;
     var t1779;
     if(t1005 !== false) {
      var t1780 = SPOCK.jstring(t429);
      return ____25show(k1165, t1780, t423);
      t1779 = undefined;
     }
     else {
      var t1782 = (t429) instanceof SPOCK.Symbol ;
      var t1006 = t1782;
      var t1783;
      if(t1006 !== false) {
       var t1784 = t429.name;
       return ____25show(k1165, t1784, t423);
       t1783 = undefined;
      }
      else {
       var t1786 = (t429) instanceof SPOCK.Char ;
       var t1007 = t1786;
       var t1787;
       if(t1007 !== false) {
        var t1788 = t429.character;
        return ____25show(k1165, t1788, t423);
        t1787 = undefined;
       }
       else {
        var t448 = SPOCK.EOF;
        var t1790 = (t429) === (t448);
        var t1008 = t1790;
        var t1791;
        if(t1008 !== false) {
         return ____25show(k1165, "#<eof>", t423);
         t1791 = undefined;
        }
        else {
         var t1793 = typeof(t429);
         var t450 = t1793;
         var t1794 = (t450) === ("function");
         var t1009 = t1794;
         var t1795;
         if(t1009 !== false) {
          return ____25show(k1165, "#<procedure>", t423);
          t1795 = undefined;
         }
         else {
          var t1797 = (t429) === (true);
          var t453 = t1797;
          var t1798;
          if(t453 !== false) {
           t1798 = t453;
          }
          else {
           var t1799 = (t429) === (false);
           t1798 = t1799;
          }
          var t1010 = t1798;
          var t1800;
          if(t1010 !== false) {
           var t1801;
           if(t429 !== false) {
            t1801 = "#t";
           }
           else {
            t1801 = "#f";
           }
           return ____25show(k1165, t1801, t423);
           t1800 = undefined;
          }
          else {
           var t1803 = (t429) instanceof SPOCK.Pair ;
           var t1011 = t1803;
           var t1804;
           if(t1011 !== false) {
            var t1805 = function (t1166) {
             var t459 = undefined;
             var t1806 = function (k1167, t460) {	// t459
              var r = SPOCK.count(arguments);
              if(r) return r;
              var t1808 = null;
              var t1807 = (t460) === (t1808);
              var t1012 = t1807;
              var t1809;
              if(t1012 !== false) {
               return ____25show(k1167, ")", t423);
               t1809 = undefined;
              }
              else {
               var t1811 = (t460) instanceof SPOCK.Pair ;
               var t464 = t1811;
               var t1812;
               if(t464 !== false) {
                t1812 = false;
               }
               else {
                t1812 = true;
               }
               var t1013 = t1812;
               var t1813;
               if(t1013 !== false) {
                var t1814 = function (t1168) {
                 var t1815 = function (t1169) {
                  return ____25show(k1167, ")", t423);
                 };
                 return t428(t1815, t460);
                };
                return ____25show(t1814, " . ", t423);
                t1813 = undefined;
               }
               else {
                var t467 = t429;
                var t1819 = (t467) === (t460);
                var t466 = t1819;
                var t1820;
                if(t466 !== false) {
                 t1820 = false;
                }
                else {
                 t1820 = true;
                }
                var t1014 = t1820;
                var t1821 = function (t1170) {	// t1172
                 var t1822 = function (t1171) {
                  var t1823 = t460.cdr;
                  return t459(k1167, t1823);
                 };
                 var t1825 = t460.car;
                 return t428(t1822, t1825);
                };
                var t1172 = t1821;
                var t1827;
                if(t1014 !== false) {
                 return ____25show(t1172, " ", t423);
                 t1827 = undefined;
                }
                else {
                 return t1172(undefined);
                 t1827 = undefined;
                }
                t1813 = t1827;
               }
               t1809 = t1813;
              }
             };
             t459 = t1806;	// set! t459
             return t459(k1165, t429);
            };
            return ____25show(t1805, "(", t423);
            t1804 = undefined;
           }
           else {
            var t1832 = t429 === undefined;
            var t1015 = t1832;
            var t1833;
            if(t1015 !== false) {
             return ____25show(k1165, "#<undefined>", t423);
             t1833 = undefined;
            }
            else {
             var t1835 = (t429) instanceof Array ;
             var t1016 = t1835;
             var t1836;
             if(t1016 !== false) {
              var t1837 = t429.length;
              var t474 = t1837;
              var t1838 = function (t1173) {
               var t475 = undefined;
               var t1839 = function (k1174, t476) {	// t475
                var r = SPOCK.count(arguments);
                if(r) return r;
                var t1841 = (t476) >= (t474);
                var t1840;
                if(t1841 !== false) {
                 return ____25show(k1174, ")", t423);
                 t1840 = undefined;
                }
                else {
                 var t1843 = (t476) === (0);
                 var t477 = t1843;
                 var t1844;
                 if(t477 !== false) {
                  t1844 = false;
                 }
                 else {
                  t1844 = true;
                 }
                 var t1017 = t1844;
                 var t1845 = function (t1175) {	// t1177
                  var t1846 = function (t1176) {
                   var t1847 =  1+ (t476);
                   return t475(k1174, t1847);
                  };
                  var t1849 = (t429) [ (t476) ] ;
                  return t428(t1846, t1849);
                 };
                 var t1177 = t1845;
                 var t1851;
                 if(t1017 !== false) {
                  return ____25show(t1177, " ", t423);
                  t1851 = undefined;
                 }
                 else {
                  return t1177(undefined);
                  t1851 = undefined;
                 }
                 t1840 = t1851;
                }
               };
               t475 = t1839;	// set! t475
               return t475(k1165, 0);
              };
              return ____25show(t1838, "#(", t423);
              t1836 = undefined;
             }
             else {
              var t1857 = (t429) instanceof SPOCK.Port ;
              var t1856;
              if(t1857 !== false) {
               var t1858 = SPOCK.stringify(t429);
               return ____25show(k1165, t1858, t423);
               t1856 = undefined;
              }
              else {
               var t1861 = (t429) instanceof SPOCK.Promise ;
               var t1860;
               if(t1861 !== false) {
                return ____25show(k1165, "#<promise>", t423);
                t1860 = undefined;
               }
               else {
                var t1863 = typeof(t429);
                var t481 = t1863;
                var t1864 = ("object") === (t481);
                var t1018 = t1864;
                var t1865;
                if(t1018 !== false) {
                 return ____25print_2dhook(k1165, t429, t423, false);
                 t1865 = undefined;
                }
                else {
                 return ____25show(k1165, "#<unknown object>", t423);
                 t1865 = undefined;
                }
                t1860 = t1865;
               }
               t1856 = t1860;
              }
              t1836 = t1856;
             }
             t1833 = t1836;
            }
            t1804 = t1833;
           }
           t1800 = t1804;
          }
          t1795 = t1800;
         }
         t1791 = t1795;
        }
        t1787 = t1791;
       }
       t1783 = t1787;
      }
      t1779 = t1783;
     }
     t1768 = t1779;
    }
    t1764 = t1768;
   }
  };
  t428 = t1761;	// set! t428
  return t428(k1164, t421);
 };
 ___display = t1758;	// set! display
 var t482 = ___display;
 var t483 = undefined;
 var t1869 = function(K) {
  SPOCK.count(arguments, 't483');
  var str = arguments[ 1 ];
  var a = [];
  var len = str.length;
  for(var i = 0; i < len; ++i) {
   var c = str.charAt(i);
   switch(c) {
   case '\n': a.push('\n'); break;
   case '\t': a.push('\t'); break;
   case '\r': a.push('\r'); break;
   case '\"': a.push('\"'); break;
   case '\\': a.push('\\'); break;
   default: a.push(c);}}
  return K(a.join(''));
 };
 t483 = t1869;	// set! t483
 var t1870 = function (k1178, t484, t485) {
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1871 = t485 === undefined;
  var t1019 = t1871;
  var t1872;
  if(t1019 !== false) {
   t1872 = SPOCK.stdout;
  }
  else {
   t1872 = t485;
  }
  var t486 = t1872;
  var t491 = undefined;
  var t1873 = function (k1179, t492) {	// t491
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t1874 = typeof(t492);
   var t495 = t1874;
   var t1875 = (t495) === ("string");
   var t494 = t1875;
   var t1876;
   if(t494 !== false) {
    t1876 = t494;
   }
   else {
    var t1877 = (t492) instanceof SPOCK.String ;
    t1876 = t1877;
   }
   var t1020 = t1876;
   var t1878;
   if(t1020 !== false) {
    var t1879 = function (t1180) {
     var t1880 = function (t1182) {
      var t1881 = function (t1181) {
       return ____25show(k1179, "\"", t486);
      };
      return ____25show(t1881, t1182, t486);
     };
     var t1884 = SPOCK.jstring(t492);
     return t483(t1880, t1884);
    };
    return ____25show(t1879, "\"", t486);
    t1878 = undefined;
   }
   else {
    var t1887 = (t492) instanceof SPOCK.Char ;
    var t1021 = t1887;
    var t1888;
    if(t1021 !== false) {
     var t1889 = function (t1183) {
      var t1890 = t492.character;
      var t498 = t1890;
      var t1892 = SPOCK.eqvp(t498, "\n");
      var t1022 = t1892;
      var t1893;
      if(t1022 !== false) {
       t1893 = true;
      }
      else {
       t1893 = false;
      }
      var t1891;
      if(t1893 !== false) {
       t1891 = "newline";
      }
      else {
       var t1895 = SPOCK.eqvp(t498, "\r");
       var t1023 = t1895;
       var t1896;
       if(t1023 !== false) {
        t1896 = true;
       }
       else {
        t1896 = false;
       }
       var t1894;
       if(t1896 !== false) {
        t1894 = "return";
       }
       else {
        var t1898 = SPOCK.eqvp(t498, "\t");
        var t1024 = t1898;
        var t1899;
        if(t1024 !== false) {
         t1899 = true;
        }
        else {
         t1899 = false;
        }
        var t1897;
        if(t1899 !== false) {
         t1897 = "tab";
        }
        else {
         var t1901 = SPOCK.eqvp(t498, " ");
         var t1025 = t1901;
         var t1902;
         if(t1025 !== false) {
          t1902 = true;
         }
         else {
          t1902 = false;
         }
         var t1900;
         if(t1902 !== false) {
          t1900 = "space";
         }
         else {
          t1900 = t498;
         }
         t1897 = t1900;
        }
        t1894 = t1897;
       }
       t1891 = t1894;
      }
      return ____25show(k1179, t1891, t486);
     };
     return ____25show(t1889, "#\\", t486);
     t1888 = undefined;
    }
    else {
     var t1905 = (t492) instanceof SPOCK.Pair ;
     var t1026 = t1905;
     var t1906;
     if(t1026 !== false) {
      var t1907 = function (t1184) {
       var t509 = undefined;
       var t1908 = function (k1185, t510) {	// t509
        var r = SPOCK.count(arguments);
        if(r) return r;
        var t1910 = null;
        var t1909 = (t510) === (t1910);
        var t1027 = t1909;
        var t1911;
        if(t1027 !== false) {
         return ____25show(k1185, ")", t486);
         t1911 = undefined;
        }
        else {
         var t1913 = (t510) instanceof SPOCK.Pair ;
         var t514 = t1913;
         var t1914;
         if(t514 !== false) {
          t1914 = false;
         }
         else {
          t1914 = true;
         }
         var t1028 = t1914;
         var t1915;
         if(t1028 !== false) {
          var t1916 = function (t1186) {
           var t1917 = function (t1187) {
            return ____25show(k1185, ")", t486);
           };
           return t491(t1917, t510);
          };
          return ____25show(t1916, " . ", t486);
          t1915 = undefined;
         }
         else {
          var t517 = t492;
          var t1921 = (t517) === (t510);
          var t516 = t1921;
          var t1922;
          if(t516 !== false) {
           t1922 = false;
          }
          else {
           t1922 = true;
          }
          var t1029 = t1922;
          var t1923 = function (t1188) {	// t1190
           var t1924 = function (t1189) {
            var t1925 = t510.cdr;
            return t509(k1185, t1925);
           };
           var t1927 = t510.car;
           return t491(t1924, t1927);
          };
          var t1190 = t1923;
          var t1929;
          if(t1029 !== false) {
           return ____25show(t1190, " ", t486);
           t1929 = undefined;
          }
          else {
           return t1190(undefined);
           t1929 = undefined;
          }
          t1915 = t1929;
         }
         t1911 = t1915;
        }
       };
       t509 = t1908;	// set! t509
       return t509(k1179, t492);
      };
      return ____25show(t1907, "(", t486);
      t1906 = undefined;
     }
     else {
      var t1934 = (t492) instanceof Array ;
      var t1030 = t1934;
      var t1935;
      if(t1030 !== false) {
       var t1936 = t492.length;
       var t523 = t1936;
       var t1937 = function (t1191) {
        var t524 = undefined;
        var t1938 = function (k1192, t525) {	// t524
         var r = SPOCK.count(arguments);
         if(r) return r;
         var t1940 = (t525) >= (t523);
         var t1939;
         if(t1940 !== false) {
          return ____25show(k1192, ")", t486);
          t1939 = undefined;
         }
         else {
          var t1942 = (t525) === (0);
          var t526 = t1942;
          var t1943;
          if(t526 !== false) {
           t1943 = false;
          }
          else {
           t1943 = true;
          }
          var t1031 = t1943;
          var t1944 = function (t1193) {	// t1195
           var t1945 = function (t1194) {
            var t1946 =  1+ (t525);
            return t524(k1192, t1946);
           };
           var t1948 = (t492) [ (t525) ] ;
           return t491(t1945, t1948);
          };
          var t1195 = t1944;
          var t1950;
          if(t1031 !== false) {
           return ____25show(t1195, " ", t486);
           t1950 = undefined;
          }
          else {
           return t1195(undefined);
           t1950 = undefined;
          }
          t1939 = t1950;
         }
        };
        t524 = t1938;	// set! t524
        return t524(k1179, 0);
       };
       return ____25show(t1937, "#(", t486);
       t1935 = undefined;
      }
      else {
       return t482(k1179, t492, t486);
       t1935 = undefined;
      }
      t1906 = t1935;
     }
     t1888 = t1906;
    }
    t1878 = t1888;
   }
  };
  t491 = t1873;	// set! t491
  return t491(k1178, t484);
 };
 ___write = t1870;	// set! write
 var t1957 = function(K) {
  SPOCK.count(arguments, 'apply');
  var proc = arguments[ 1 ];
  var argc = arguments.length;
  var lst = arguments[ argc - 1 ];
  var vec = [K].concat(Array.prototype.slice.call(arguments, 2, argc - 1));
  if(lst instanceof Array) vec = vec.concat(lst);
  else{
   var len = SPOCK.length(lst);
   var vec2 = new Array(len);
   for(var i = 0; lst instanceof SPOCK.Pair; lst = lst.cdr)
    vec2[ i++ ] = lst.car;
   vec = vec.concat(vec2);}
  return proc.apply(SPOCK.global, vec);
 };
 ___apply = t1957;	// set! apply
 var t1958 = function (k1196, t529, t530, t531) {	// for-each
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t531 = SPOCK.rest(arguments, 3);
  var t1960 = null;
  var t1959 = (t531) === (t1960);
  var t1032 = t1959;
  var t1961;
  if(t1032 !== false) {
   var t1962 = (t530) instanceof Array ;
   var t1033 = t1962;
   var t1963;
   if(t1033 !== false) {
    var t1964 = t530.length;
    var t536 = t1964;
    var t538 = undefined;
    var t1965 = function (k1197, t539) {	// t538
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t541 = t536;
     var t1966 = (t539)  >=  (t541);
     var t1034 = t1966;
     var t1967;
     if(t1034 !== false) {
      return k1197(false);
      t1967 = undefined;
     }
     else {
      var t1969 = function (t1198) {
       var t1970 = (t539)  +  (1);
       return t538(k1197, t1970);
      };
      var t542 = t530;
      var t1972 = (t542) [ (t539) ] ;
      return t529(t1969, t1972);
      t1967 = undefined;
     }
    };
    t538 = t1965;	// set! t538
    return t538(k1196, 0);
    t1963 = undefined;
   }
   else {
    var t546 = undefined;
    var t1975 = function (k1199, t547) {	// t546
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t1976 = (t547) instanceof SPOCK.Pair ;
     var t1035 = t1976;
     var t1977;
     if(t1035 !== false) {
      var t1978 = function (t1200) {
       var t1979 = t547.cdr;
       return t546(k1199, t1979);
      };
      var t1981 = t547.car;
      return t529(t1978, t1981);
      t1977 = undefined;
     }
     else {
      return k1199(undefined);
      t1977 = undefined;
     }
    };
    t546 = t1975;	// set! t546
    return t546(k1196, t530);
    t1963 = undefined;
   }
   t1961 = t1963;
  }
  else {
   var t551 = undefined;
   var t1985 = function (k1201, t552) {	// t551
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t554 = undefined;
    var t1986 = function (k1207, t555) {	// t554
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t1988 = null;
     var t1987 = (t555) === (t1988);
     var t1036 = t1987;
     var t1989;
     if(t1036 !== false) {
      var t1990 = null;
      return k1207(t1990);
      t1989 = undefined;
     }
     else {
      var t1992 = t555.car;
      var t559 = t1992;
      var t1993 = (t559) instanceof SPOCK.Pair ;
      var t1037 = t1993;
      var t1994;
      if(t1037 !== false) {
       var t1995 = t559.car;
       var t562 = t1995;
       var t1996 = function (t1208) {
        var t563 = t1208;
        var t1997 = new SPOCK.Pair(t562, t563);
        return k1207(t1997);
       };
       var t1999 = t555.cdr;
       return t554(t1996, t1999);
       t1994 = undefined;
      }
      else {
       return k1207(false);
       t1994 = undefined;
      }
      t1989 = t1994;
     }
    };
    t554 = t1986;	// set! t554
    var t2002 = function (t1202) {
     var t553 = t1202;
     var t2003;
     if(t553 !== false) {
      var t2004 = function (t1203) {
       var t566 = undefined;
       var t2005 = function (k1205, t567) {	// t566
        var r = SPOCK.count(arguments);
        if(r) return r;
        var t2007 = null;
        var t2006 = (t567) === (t2007);
        var t1038 = t2006;
        var t2008;
        if(t1038 !== false) {
         var t2009 = null;
         return k1205(t2009);
         t2008 = undefined;
        }
        else {
         var t2011 = t567.car;
         var t573 = t2011;
         var t2012 = t573.cdr;
         var t571 = t2012;
         var t2013 = function (t1206) {
          var t572 = t1206;
          var t2014 = new SPOCK.Pair(t571, t572);
          return k1205(t2014);
         };
         var t2016 = t567.cdr;
         return t566(t2013, t2016);
         t2008 = undefined;
        }
       };
       t566 = t2005;	// set! t566
       var t2018 = function (t1204) {
        return t551(k1201, t1204);
       };
       return t566(t2018, t552);
      };
      return ___apply(t2004, t529, t553);
      t2003 = undefined;
     }
     else {
      return k1201(undefined);
      t2003 = undefined;
     }
    };
    return t554(t2002, t552);
   };
   t551 = t1985;	// set! t551
   var t2024 = new SPOCK.Pair(t530, t531);
   return t551(k1196, t2024);
   t1961 = undefined;
  }
 };
 ___for_2deach = t1958;	// set! for-each
 var t2026 = function (k1209, t578, t579, t580) {	// map
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t580 = SPOCK.rest(arguments, 3);
  var t2028 = null;
  var t2027 = (t580) === (t2028);
  var t1039 = t2027;
  var t2029;
  if(t1039 !== false) {
   var t2030 = (t579) instanceof Array ;
   var t1040 = t2030;
   var t2031;
   if(t1040 !== false) {
    var t2032 = t579.length;
    var t585 = t2032;
    var t2033 = function (t1210) {
     var t587 = t1210;
     var t588 = undefined;
     var t2034 = function (k1211, t589) {	// t588
      var r = SPOCK.count(arguments);
      if(r) return r;
      var t591 = t585;
      var t2035 = (t589)  >=  (t591);
      var t1041 = t2035;
      var t2036;
      if(t1041 !== false) {
       return k1211(t587);
       t2036 = undefined;
      }
      else {
       var t592 = t587;
       var t593 = t589;
       var t2038 = function (t1213) {
        var t594 = t1213;
        var t2039 = (t592) [ (t593) ] =  (t594);
        var t1212 = t2039;
        var t2040 = (t589)  +  (1);
        return t588(k1211, t2040);
       };
       var t595 = t579;
       var t2042 = (t595) [ (t589) ] ;
       return t578(t2038, t2042);
       t2036 = undefined;
      }
     };
     t588 = t2034;	// set! t588
     return t588(k1209, 0);
    };
    return ___make_2dvector(t2033, t585);
    t2031 = undefined;
   }
   else {
    var t599 = undefined;
    var t2046 = function (k1214, t600) {	// t599
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t2047 = (t600) instanceof SPOCK.Pair ;
     var t1042 = t2047;
     var t2048;
     if(t1042 !== false) {
      var t2049 = function (t1215) {
       var t602 = t1215;
       var t2050 = function (t1216) {
        var t603 = t1216;
        var t2051 = new SPOCK.Pair(t602, t603);
        return k1214(t2051);
       };
       var t2053 = t600.cdr;
       return t599(t2050, t2053);
      };
      var t2055 = t600.car;
      return t578(t2049, t2055);
      t2048 = undefined;
     }
     else {
      var t2057 = null;
      return k1214(t2057);
      t2048 = undefined;
     }
    };
    t599 = t2046;	// set! t599
    return t599(k1209, t579);
    t2031 = undefined;
   }
   t2029 = t2031;
  }
  else {
   var t606 = undefined;
   var t2060 = function (k1217, t607) {	// t606
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t609 = undefined;
    var t2061 = function (k1224, t610) {	// t609
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t2063 = null;
     var t2062 = (t610) === (t2063);
     var t1043 = t2062;
     var t2064;
     if(t1043 !== false) {
      var t2065 = null;
      return k1224(t2065);
      t2064 = undefined;
     }
     else {
      var t2067 = t610.car;
      var t614 = t2067;
      var t2068 = (t614) instanceof SPOCK.Pair ;
      var t1044 = t2068;
      var t2069;
      if(t1044 !== false) {
       var t2070 = t614.car;
       var t617 = t2070;
       var t2071 = function (t1225) {
        var t618 = t1225;
        var t2072 = new SPOCK.Pair(t617, t618);
        return k1224(t2072);
       };
       var t2074 = t610.cdr;
       return t609(t2071, t2074);
       t2069 = undefined;
      }
      else {
       return k1224(false);
       t2069 = undefined;
      }
      t2064 = t2069;
     }
    };
    t609 = t2061;	// set! t609
    var t2077 = function (t1218) {
     var t608 = t1218;
     var t2078;
     if(t608 !== false) {
      var t2079 = function (t1219) {
       var t621 = t1219;
       var t623 = undefined;
       var t2080 = function (k1222, t624) {	// t623
        var r = SPOCK.count(arguments);
        if(r) return r;
        var t2082 = null;
        var t2081 = (t624) === (t2082);
        var t1045 = t2081;
        var t2083;
        if(t1045 !== false) {
         var t2084 = null;
         return k1222(t2084);
         t2083 = undefined;
        }
        else {
         var t2086 = t624.car;
         var t630 = t2086;
         var t2087 = t630.cdr;
         var t628 = t2087;
         var t2088 = function (t1223) {
          var t629 = t1223;
          var t2089 = new SPOCK.Pair(t628, t629);
          return k1222(t2089);
         };
         var t2091 = t624.cdr;
         return t623(t2088, t2091);
         t2083 = undefined;
        }
       };
       t623 = t2080;	// set! t623
       var t2093 = function (t1221) {
        var t2094 = function (t1220) {
         var t622 = t1220;
         var t2095 = new SPOCK.Pair(t621, t622);
         return k1217(t2095);
        };
        return t606(t2094, t1221);
       };
       return t623(t2093, t607);
      };
      return ___apply(t2079, t578, t608);
      t2078 = undefined;
     }
     else {
      var t2100 = null;
      return k1217(t2100);
      t2078 = undefined;
     }
    };
    return t609(t2077, t607);
   };
   t606 = t2060;	// set! t606
   var t2103 = new SPOCK.Pair(t579, t580);
   return t606(k1209, t2103);
   t2029 = undefined;
  }
 };
 ___map = t2026;	// set! map
 var t2105 = function (k1226, t637, t638, t639) {	// dynamic-wind
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t2106 = function (t1227) {
   var t2107 = new SPOCK.Pair(t637, t639);
   var t640 = t2107;
   var t641 = SPOCK.dynwinds;
   var t2108 = new SPOCK.Pair(t640, t641);
   SPOCK.dynwinds = t2108
   var t2109 = function (k1228) {
    var t644 = SPOCK.dynwinds;
    var t2110 = t644.cdr;
    SPOCK.dynwinds = t2110
    return t639(k1228);
   };
   return ____25call_2dwith_2dsaved_2dvalues(k1226, t638, t2109);
  };
  return t637(t2106);
 };
 ___dynamic_2dwind = t2105;	// set! dynamic-wind
 var t2114 = function(K) {
  SPOCK.count(arguments, '%call-with-current-continuation');
  var proc = arguments[ 1 ];
  function cont() {
   return K.apply(SPOCK.global, Array.prototype.slice.call(arguments, 1));}
  return proc(K, cont);
 };
 ____25call_2dwith_2dcurrent_2dcontinuation = t2114;	// set! %call-with-current-continuation
 var t645 = undefined;
 var t2115 = function (k1229, t646, t647) {	// t645
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t649 = SPOCK.dynwinds;
  var t2116 = (t649) === (t646);
  var t648 = t2116;
  var t2117;
  if(t648 !== false) {
   return k1229(t648);
   t2117 = undefined;
  }
  else {
   var t2119 = (t647)  <  (0);
   var t1046 = t2119;
   var t2120;
   if(t1046 !== false) {
    var t2121 = function (t1230) {
     var t2122 = t646.car;
     var t654 = t2122;
     var t2123 = t654.car;
     var t2124 = function (t1231) {
      SPOCK.dynwinds = t646
      return k1229(undefined);
     };
     return t2123(t2124);
    };
    var t2127 = t646.cdr;
    var t2128 = (t647)  + 1 ;
    return t645(t2121, t2127, t2128);
    t2120 = undefined;
   }
   else {
    var t658 = SPOCK.dynwinds;
    var t2130 = t658.car;
    var t657 = t2130;
    var t2131 = t657.cdr;
    var t656 = t2131;
    var t659 = SPOCK.dynwinds;
    var t2132 = t659.cdr;
    SPOCK.dynwinds = t2132
    var t2133 = function (t1232) {
     var t2134 = (t647)  - 1 ;
     return t645(k1229, t646, t2134);
    };
    return t656(t2133);
    t2120 = undefined;
   }
   t2117 = t2120;
  }
 };
 t645 = t2115;	// set! t645
 var t2137 = function (k1233, t660) {
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t661 = SPOCK.dynwinds;
  var t2138 = function (k1234, t662) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t2139 = function (k1235, t663) {
    var t663 = SPOCK.rest(arguments, 1);
    var t664 = SPOCK.dynwinds;
    var t667 = t661;
    var t2140 = (t664) === (t667);
    var t665 = t2140;
    var t2141;
    if(t665 !== false) {
     t2141 = false;
    }
    else {
     t2141 = true;
    }
    var t1047 = t2141;
    var t2142 = function (t1236) {	// t1237
     return ___apply(k1235, t662, t663);
    };
    var t1237 = t2142;
    var t2144;
    if(t1047 !== false) {
     var t2145 = SPOCK.length(t664);
     var t668 = t2145;
     var t671 = t661;
     var t2146 = SPOCK.length(t671);
     var t669 = t2146;
     var t2147 = (t668)  -  (t669);
     return t645(t1237, t661, t2147);
     t2144 = undefined;
    }
    else {
     return t1237(undefined);
     t2144 = undefined;
    }
   };
   return t660(k1234, t2139);
  };
  return ____25call_2dwith_2dcurrent_2dcontinuation(k1233, t2138);
 };
 ___call_2dwith_2dcurrent_2dcontinuation = t2137;	// set! call-with-current-continuation
 var t2152 = function (k1238, t672) {	// %get-context
  var r = SPOCK.count(arguments);
  if(r) return r;
  return ___vector(k1238, t672, SPOCK.dynwinds, SPOCK.stdin, SPOCK.stdout, SPOCK.stderr);
 };
 ____25get_2dcontext = t2152;	// set! %get-context
 var t2154 = function(K) {
  SPOCK.count(arguments, '%restore-context');
  var state = arguments[ 1 ];
  SPOCK.dynwinds = state[ 1 ];
  SPOCK.stdin = state[ 2 ];
  SPOCK.stdout = state[ 3 ];
  SPOCK.stderr = state[ 4 ];
  return (state[ 0 ])(undefined);
 };
 ____25restore_2dcontext = t2154;	// set! %restore-context
 var t2155 = function (k1239, t673) {	// suspend
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t2156 = function (k1240, t674) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t2157 = function (t1242) {
    var t2158 = function (t1241) {
     var t2159 = function(K) {
      SPOCK.count(arguments);
      return new SPOCK.Result(undefined);
     };
     return t2159(k1240);
    };
    return t673(t2158, t1242);
   };
   return ____25get_2dcontext(t2157, t674);
  };
  return ____25call_2dwith_2dcurrent_2dcontinuation(k1239, t2156);
 };
 ___suspend = t2155;	// set! suspend
 var t2164 = function (k1243, t675) {	// %make-promise
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t676 = false;
  var t677 = false;
  var t2166 = function (k1244) {	// t677
   var t2167;
   if(t676 !== false) {
    return ___apply(k1244, ___values, t677);
    t2167 = undefined;
   }
   else {
    var t2169 = function (k1245, t678) {
     var t678 = SPOCK.rest(arguments, 1);
     var t2170;
     if(t676 !== false) {
      return ___apply(k1245, ___values, t677);
      t2170 = undefined;
     }
     else {
      t676 = true;	// set! t676
      t677 = t678;	// set! t677
      return ___apply(k1245, ___values, t677);
      t2170 = undefined;
     }
    };
    return ___call_2dwith_2dvalues(k1244, t675, t2169);
    t2167 = undefined;
   }
  };
  var t2165 = new SPOCK.Promise(t2166);
  return k1243(t2165);
 };
 ____25make_2dpromise = t2164;	// set! %make-promise
 var t2175 = function (k1246, t679) {	// force
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t2177 = (t679)  instanceof SPOCK.Promise ;
  var t2176;
  if(t2177 !== false) {
   var t2178 = t679.thunk;
   return t2178(k1246);
   t2176 = undefined;
  }
  else {
   return k1246(t679);
   t2176 = undefined;
  }
 };
 ___force = t2175;	// set! force
 var t680 = ___dynamic_2dwind;
 var t2181 = function (k1247, t681, t682) {	// t680
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t686 = false;
  var t2182 = function (k1248) {
   loop: while(true) {
    t686 = SPOCK.stdin;	// set! t686
    SPOCK.stdin = t681
    return k1248(undefined);
   }
  };
  var t2184 = function (k1249) {
   loop: while(true) {
    SPOCK.stdin = t686
    return k1249(undefined);
   }
  };
  return t680(k1247, t2182, t682, t2184);
 };
 ___with_2dinput_2dfrom_2dport = t2181;	// set! with-input-from-port
 var t687 = ___dynamic_2dwind;
 var t2187 = function (k1250, t688, t689) {	// t687
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t693 = false;
  var t2188 = function (k1251) {
   loop: while(true) {
    t693 = SPOCK.stdout;	// set! t693
    SPOCK.stdout = t688
    return k1251(undefined);
   }
  };
  var t2190 = function (k1252) {
   loop: while(true) {
    SPOCK.stdout = t693
    return k1252(undefined);
   }
  };
  return t687(k1250, t2188, t689, t2190);
 };
 ___with_2doutput_2dto_2dport = t2187;	// set! with-output-to-port
 var t2193 = function(K) {
  SPOCK.count(arguments, '%close-port');
  var port = arguments[ 1 ];
  port.close();
  port.closed = true;
  return K(port);
 };
 ____25close_2dport = t2193;	// set! %close-port
 var t2194 = function(K) {
  SPOCK.count(arguments, 'open-input-file');
  var fn = SPOCK.check(arguments[ 1 ], 'string', 'open-input-file');
  return K(SPOCK.openInputFile(fn));
 };
 ___open_2dinput_2dfile = t2194;	// set! open-input-file
 var t2195 = function(K) {
  SPOCK.count(arguments, 'open-output-file');
  var fn = SPOCK.check(arguments[ 1 ], 'string', 'open-input-file');
  var exp = null;
  if(arguments.length === 3)
   exp = SPOCK.check(arguments[ 2 ], 'number', 'open-input-file');
  return K(SPOCK.openOutputFile(fn, exp));
 };
 ___open_2doutput_2dfile = t2195;	// set! open-output-file
 var t2196 = function (k1253, t694) {	// close-input-port
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t695 = t694;
  return ____25close_2dport(k1253, t695);
 };
 ___close_2dinput_2dport = t2196;	// set! close-input-port
 var t2198 = function (k1254, t699) {	// close-output-port
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t700 = t699;
  return ____25close_2dport(k1254, t700);
 };
 ___close_2doutput_2dport = t2198;	// set! close-output-port
 var t705 = ___open_2dinput_2dfile;
 var t2200 = function (k1255, t708, t709) {	// t705
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t2201 = function (t1256) {
   var t710 = t1256;
   var t2202 = function (k1257) {
    return t709(k1257, t710);
   };
   var t2204 = function (k1258) {
    return ___close_2dinput_2dport(k1258, t710);
   };
   return ____25call_2dwith_2dsaved_2dvalues(k1255, t2202, t2204);
  };
  return t705(t2201, t708);
 };
 ___call_2dwith_2dinput_2dfile = t2200;	// set! call-with-input-file
 var t712 = ___open_2doutput_2dfile;
 var t2208 = function (k1259, t715, t716) {	// t712
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t2209 = function (t1260) {
   var t717 = t1260;
   var t2210 = function (k1261) {
    return t716(k1261, t717);
   };
   var t2212 = function (k1262) {
    return ___close_2doutput_2dport(k1262, t717);
   };
   return ____25call_2dwith_2dsaved_2dvalues(k1259, t2210, t2212);
  };
  return t712(t2209, t715);
 };
 ___call_2dwith_2doutput_2dfile = t2208;	// set! call-with-output-file
 var t718 = ___with_2dinput_2dfrom_2dport;
 var t719 = ___open_2dinput_2dfile;
 var t723 = ___close_2dinput_2dport;
 var t2216 = function (k1263, t724, t725) {	// t723
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t2217 = function (t1264) {
   var t726 = t1264;
   var t2218 = function (k1265) {
    var t2219 = function (k1266) {
     return t723(k1266, t726);
    };
    return ____25call_2dwith_2dsaved_2dvalues(k1265, t725, t2219);
   };
   return t718(k1263, t726, t2218);
  };
  return t719(t2217, t724);
 };
 ___with_2dinput_2dfrom_2dfile = t2216;	// set! with-input-from-file
 var t727 = ___with_2doutput_2dto_2dport;
 var t728 = ___open_2doutput_2dfile;
 var t732 = ___close_2doutput_2dport;
 var t2224 = function (k1267, t733, t734) {	// t732
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t2225 = function (t1268) {
   var t735 = t1268;
   var t2226 = function (k1269) {
    var t2227 = function (k1270) {
     return t732(k1270, t735);
    };
    return ____25call_2dwith_2dsaved_2dvalues(k1269, t734, t2227);
   };
   return t727(k1267, t735, t2226);
  };
  return t728(t2225, t733);
 };
 ___with_2doutput_2dto_2dfile = t2224;	// set! with-output-to-file
 var t2232 = function (k1271, t736) {	// open-input-string
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t737 = undefined;
  var t2233 = function(K) {
   SPOCK.count(arguments, 't737');
   var buffer = arguments[ 1 ];
   var pos = 0;
   var len = buffer.length;
   function read(n) {
    if(pos >= len) return SPOCK.EOF;
    var str = buffer.substring(pos, pos + n);
    pos += n;
    return str;}
   return K(new SPOCK.Port('input', { read: read }));
  };
  t737 = t2233;	// set! t737
  var t2234 = SPOCK.jstring(t736);
  return t737(k1271, t2234);
 };
 ___open_2dinput_2dstring = t2232;	// set! open-input-string
 var t2236 = function(K) {
  SPOCK.count(arguments, 'open-output-string');
  var buffer = [];
  function write(s) { buffer.push(s); }
  var port = new SPOCK.Port('output', { write: write });
  port.buffer = buffer;
  port.isStringPort = true;
  return K(port);
 };
 ___open_2doutput_2dstring = t2236;	// set! open-output-string
 var t2237 = function (k1272, t739) {	// get-output-string
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2238 = t739.isStringPort;
   var t742 = t2238;
   var t2239 = t742 === undefined;
   var t741 = t2239;
   var t2240;
   if(t741 !== false) {
    t2240 = false;
   }
   else {
    t2240 = true;
   }
   var t1048 = t2240;
   var t2241;
   if(t1048 !== false) {
    var t2243 = t739.buffer;
    var t2242 = t2243.join("");
    var t744 = t2242;
    var t2244 = new SPOCK.String(t744);
    var t743 = t2244;
    var t2245 = (t739) .buffer = [] ;
    t2241 = t743;
   }
   else {
    var t2246 = SPOCK.error("bad argument type - not a string port", t739);
    t2241 = t2246;
   }
   return k1272(t2241);
  }
 };
 ___get_2doutput_2dstring = t2237;	// set! get-output-string
 var t2248 = function (k1273, t745, t746) {	// with-input-from-string
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t2249 = function (t1274) {
   var t747 = t1274;
   return ___with_2dinput_2dfrom_2dport(k1273, t747, t746);
  };
  return ___open_2dinput_2dstring(t2249, t745);
 };
 ___with_2dinput_2dfrom_2dstring = t2248;	// set! with-input-from-string
 var t2252 = function (k1275, t748) {	// with-output-to-string
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t2253 = function (t1276) {
   var t749 = t1276;
   var t2254 = function (t1277) {
    return ___get_2doutput_2dstring(k1275, t749);
   };
   return ___with_2doutput_2dto_2dport(t2254, t749, t748);
  };
  return ___open_2doutput_2dstring(t2253);
 };
 ___with_2doutput_2dto_2dstring = t2252;	// set! with-output-to-string
 var t750 = ___read_2dchar;
 var t751 = ___reverse;
 var t752 = ___peek_2dchar;
 var t753 = ___list_2d_3evector;
 var t754 = ___list_2d_3estring;
 var t2258 = function (k1278) {	// t755
  loop: while(true) {
   return k1278(SPOCK.stdin);
  }
 };
 var t755 = t2258;
 var t756 = ___string_2d_3enumber;
 var t2260 = function (k1279, t757) {	// t756
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t2261 = t757 === undefined;
  var t1049 = t2261;
  var t2262 = function (t1280) {	// t1337
   var t758 = t1280;
   var t760 = undefined;
   var t761 = undefined;
   var t762 = undefined;
   var t763 = undefined;
   var t764 = undefined;
   var t765 = undefined;
   var t766 = undefined;
   var t767 = undefined;
   var t2263 = function (k1281, t768) {	// t760
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t2264 = function (t1282) {
     var t769 = t1282;
     var t2265;
     if(t769 !== false) {
      return k1281(t769);
      t2265 = undefined;
     }
     else {
      return ___string_2d_3esymbol(k1281, t768);
      t2265 = undefined;
     }
    };
    return t756(t2264, t768);
   };
   t760 = t2263;	// set! t760
   var t2269 = function (k1283) {	// t761
    var t2270 = function (t1284) {
     var t770 = t1284;
     var t773 = SPOCK.EOF;
     var t2271 = (t770) === (t773);
     var t1050 = t2271;
     var t2272;
     if(t1050 !== false) {
      return k1283(t770);
      t2272 = undefined;
     }
     else {
      var t774 = t770;
      var t2276 = new SPOCK.Char("#");
      var t2275 = SPOCK.eqvp(t770, t2276);
      var t1051 = t2275;
      var t2277;
      if(t1051 !== false) {
       t2277 = true;
      }
      else {
       t2277 = false;
      }
      var t2274;
      if(t2277 !== false) {
       return t764(k1283);
       t2274 = undefined;
      }
      else {
       var t2281 = new SPOCK.Char("(");
       var t2280 = SPOCK.eqvp(t774, t2281);
       var t1052 = t2280;
       var t2282;
       if(t1052 !== false) {
        t2282 = true;
       }
       else {
        t2282 = false;
       }
       var t2279;
       if(t2282 !== false) {
        var t2283 = new SPOCK.Char(")");
        return t765(k1283, t2283);
        t2279 = undefined;
       }
       else {
        var t2287 = new SPOCK.Char("[");
        var t2286 = SPOCK.eqvp(t774, t2287);
        var t1053 = t2286;
        var t2288;
        if(t1053 !== false) {
         t2288 = true;
        }
        else {
         t2288 = false;
        }
        var t2285;
        if(t2288 !== false) {
         var t2289 = new SPOCK.Char("]");
         return t765(k1283, t2289);
         t2285 = undefined;
        }
        else {
         var t2293 = new SPOCK.Char("{");
         var t2292 = SPOCK.eqvp(t774, t2293);
         var t1054 = t2292;
         var t2294;
         if(t1054 !== false) {
          t2294 = true;
         }
         else {
          t2294 = false;
         }
         var t2291;
         if(t2294 !== false) {
          var t2295 = new SPOCK.Char("}");
          return t765(k1283, t2295);
          t2291 = undefined;
         }
         else {
          var t2299 = new SPOCK.Char(",");
          var t2298 = SPOCK.eqvp(t774, t2299);
          var t1055 = t2298;
          var t2300;
          if(t1055 !== false) {
           t2300 = true;
          }
          else {
           t2300 = false;
          }
          var t2297;
          if(t2300 !== false) {
           var t2301 = function (t1285) {
            var t785 = t1285;
            var t2303 = new SPOCK.Char("@");
            var t2302 = SPOCK.eqvp(t785, t2303);
            var t1056 = t2302;
            var t2304;
            if(t1056 !== false) {
             var t2305 = function (t1287) {
              var t2306 = function (t1286) {
               var t787 = t1286;
               return k1283(t787);
              };
              var t2308 = SPOCK.intern("unquote-splicing");
              return ____25list(t2306, t2308, t1287);
             };
             return t761(t2305);
             t2304 = undefined;
            }
            else {
             var t2311 = function (t1289) {
              var t2312 = function (t1288) {
               var t788 = t1288;
               return k1283(t788);
              };
              var t2314 = SPOCK.intern("unquote");
              return ____25list(t2312, t2314, t1289);
             };
             return t761(t2311);
             t2304 = undefined;
            }
           };
           return t752(t2301, t758);
           t2297 = undefined;
          }
          else {
           var t2320 = new SPOCK.Char("`");
           var t2319 = SPOCK.eqvp(t774, t2320);
           var t1057 = t2319;
           var t2321;
           if(t1057 !== false) {
            t2321 = true;
           }
           else {
            t2321 = false;
           }
           var t2318;
           if(t2321 !== false) {
            var t2322 = function (t1291) {
             var t2323 = function (t1290) {
              var t791 = t1290;
              return k1283(t791);
             };
             var t2325 = SPOCK.intern("quasiquote");
             return ____25list(t2323, t2325, t1291);
            };
            return t761(t2322);
            t2318 = undefined;
           }
           else {
            var t2330 = new SPOCK.Char("'");
            var t2329 = SPOCK.eqvp(t774, t2330);
            var t1058 = t2329;
            var t2331;
            if(t1058 !== false) {
             t2331 = true;
            }
            else {
             t2331 = false;
            }
            var t2328;
            if(t2331 !== false) {
             var t2332 = function (t1293) {
              var t2333 = function (t1292) {
               var t794 = t1292;
               return k1283(t794);
              };
              var t2335 = SPOCK.intern("quote");
              return ____25list(t2333, t2335, t1293);
             };
             return t761(t2332);
             t2328 = undefined;
            }
            else {
             var t2340 = new SPOCK.Char(";");
             var t2339 = SPOCK.eqvp(t774, t2340);
             var t1059 = t2339;
             var t2341;
             if(t1059 !== false) {
              t2341 = true;
             }
             else {
              t2341 = false;
             }
             var t2338;
             if(t2341 !== false) {
              var t2342 = function (t1294) {
               return t761(k1283);
              };
              return t762(t2342);
              t2338 = undefined;
             }
             else {
              var t2347 = new SPOCK.Char("\"");
              var t2346 = SPOCK.eqvp(t774, t2347);
              var t1060 = t2346;
              var t2348;
              if(t1060 !== false) {
               t2348 = true;
              }
              else {
               t2348 = false;
              }
              var t2345;
              if(t2348 !== false) {
               return t766(k1283);
               t2345 = undefined;
              }
              else {
               var t2352 = new SPOCK.Char(")");
               var t2351 = SPOCK.eqvp(t774, t2352);
               var t1061 = t2351;
               var t2353;
               if(t1061 !== false) {
                t2353 = true;
               }
               else {
                var t2355 = new SPOCK.Char("]");
                var t2354 = SPOCK.eqvp(t774, t2355);
                var t1062 = t2354;
                var t2356;
                if(t1062 !== false) {
                 t2356 = true;
                }
                else {
                 var t2358 = new SPOCK.Char("}");
                 var t2357 = SPOCK.eqvp(t774, t2358);
                 var t1063 = t2357;
                 var t2359;
                 if(t1063 !== false) {
                  t2359 = true;
                 }
                 else {
                  t2359 = false;
                 }
                 t2356 = t2359;
                }
                t2353 = t2356;
               }
               var t2350;
               if(t2353 !== false) {
                return ____25error(k1283, "unexpected delimiter", t770);
                t2350 = undefined;
               }
               else {
                var t2361 = (t770) .character.match(/^\s$/) ;
                var t807 = t2361;
                var t2363 = null;
                var t2362 = (t807) === (t2363);
                var t806 = t2362;
                var t2364;
                if(t806 !== false) {
                 t2364 = false;
                }
                else {
                 t2364 = true;
                }
                var t1064 = t2364;
                var t2365;
                if(t1064 !== false) {
                 return t761(k1283);
                 t2365 = undefined;
                }
                else {
                 var t2367 = function (t1297) {
                  var t810 = t1297;
                  var t1296 = t810;
                  var t2368 = function (t1295) {
                   return t760(k1283, t1295);
                  };
                  return t767(t2368, t1296);
                 };
                 return ____25list(t2367, t770);
                 t2365 = undefined;
                }
                t2350 = t2365;
               }
               t2345 = t2350;
              }
              t2338 = t2345;
             }
             t2328 = t2338;
            }
            t2318 = t2328;
           }
           t2297 = t2318;
          }
          t2291 = t2297;
         }
         t2285 = t2291;
        }
        t2279 = t2285;
       }
       t2274 = t2279;
      }
      t2272 = t2274;
     }
    };
    return t750(t2270, t758);
   };
   t761 = t2269;	// set! t761
   var t2373 = function (k1298) {	// t762
    var t2374 = function (t1299) {
     var t811 = t1299;
     var t816 = SPOCK.EOF;
     var t2375 = (t811) === (t816);
     var t813 = t2375;
     var t2376;
     if(t813 !== false) {
      t2376 = t813;
     }
     else {
      var t2378 = new SPOCK.Char("\n");
      var t2377 = t2378.character;
      var t819 = t2377;
      var t2379 = t811.character;
      var t820 = t2379;
      var t2380 = (t819) === (t820);
      t2376 = t2380;
     }
     var t812 = t2376;
     var t2381;
     if(t812 !== false) {
      t2381 = false;
     }
     else {
      t2381 = true;
     }
     var t1065 = t2381;
     var t2382;
     if(t1065 !== false) {
      return t762(k1298);
      t2382 = undefined;
     }
     else {
      return k1298(undefined);
      t2382 = undefined;
     }
    };
    return t750(t2374, t758);
   };
   t762 = t2373;	// set! t762
   var t2386 = function (k1300) {	// t763
    var t2387 = function (t1301) {
     var t821 = t1301;
     var t2388 = (t821) .character.match(/^\s$/) ;
     var t824 = t2388;
     var t2390 = null;
     var t2389 = (t824) === (t2390);
     var t823 = t2389;
     var t2391;
     if(t823 !== false) {
      t2391 = false;
     }
     else {
      t2391 = true;
     }
     var t1066 = t2391;
     var t2392;
     if(t1066 !== false) {
      var t2393 = function (t1302) {
       return t763(k1300);
      };
      return t750(t2393, t758);
      t2392 = undefined;
     }
     else {
      return k1300(t821);
      t2392 = undefined;
     }
    };
    return t752(t2387, t758);
   };
   t763 = t2386;	// set! t763
   var t2398 = function (k1303) {	// t764
    var t2399 = function (t1304) {
     var t827 = t1304;
     var t830 = SPOCK.EOF;
     var t2400 = (t827) === (t830);
     var t1067 = t2400;
     var t2401;
     if(t1067 !== false) {
      return ____25error(k1303, "unexpected EOF after `#'");
      t2401 = undefined;
     }
     else {
      var t831 = t827;
      var t2405 = new SPOCK.Char("t");
      var t2404 = SPOCK.eqvp(t827, t2405);
      var t1068 = t2404;
      var t2406;
      if(t1068 !== false) {
       t2406 = true;
      }
      else {
       var t2408 = new SPOCK.Char("T");
       var t2407 = SPOCK.eqvp(t827, t2408);
       var t1069 = t2407;
       var t2409;
       if(t1069 !== false) {
        t2409 = true;
       }
       else {
        t2409 = false;
       }
       t2406 = t2409;
      }
      var t2403;
      if(t2406 !== false) {
       return k1303(true);
       t2403 = undefined;
      }
      else {
       var t2413 = new SPOCK.Char("f");
       var t2412 = SPOCK.eqvp(t827, t2413);
       var t1070 = t2412;
       var t2414;
       if(t1070 !== false) {
        t2414 = true;
       }
       else {
        var t2416 = new SPOCK.Char("F");
        var t2415 = SPOCK.eqvp(t827, t2416);
        var t1071 = t2415;
        var t2417;
        if(t1071 !== false) {
         t2417 = true;
        }
        else {
         t2417 = false;
        }
        t2414 = t2417;
       }
       var t2411;
       if(t2414 !== false) {
        return k1303(false);
        t2411 = undefined;
       }
       else {
        var t2421 = new SPOCK.Char("(");
        var t2420 = SPOCK.eqvp(t827, t2421);
        var t1072 = t2420;
        var t2422;
        if(t1072 !== false) {
         t2422 = true;
        }
        else {
         t2422 = false;
        }
        var t2419;
        if(t2422 !== false) {
         var t2423 = function (t1305) {
          return t753(k1303, t1305);
         };
         var t2425 = new SPOCK.Char(")");
         return t765(t2423, t2425);
         t2419 = undefined;
        }
        else {
         var t2429 = new SPOCK.Char("%");
         var t2428 = SPOCK.eqvp(t831, t2429);
         var t1073 = t2428;
         var t2430;
         if(t1073 !== false) {
          t2430 = true;
         }
         else {
          var t2432 = new SPOCK.Char("!");
          var t2431 = SPOCK.eqvp(t831, t2432);
          var t1074 = t2431;
          var t2433;
          if(t1074 !== false) {
           t2433 = true;
          }
          else {
           t2433 = false;
          }
          t2430 = t2433;
         }
         var t2427;
         if(t2430 !== false) {
          var t2434 = function (t1308) {
           var t846 = t1308;
           var t1307 = t846;
           var t2435 = function (t1306) {
            return ___string_2d_3esymbol(k1303, t1306);
           };
           return t767(t2435, t1307);
          };
          var t2438 = new SPOCK.Char("#");
          return ____25list(t2434, t827, t2438);
          t2427 = undefined;
         }
         else {
          var t2442 = new SPOCK.Char("\\");
          var t2441 = SPOCK.eqvp(t831, t2442);
          var t1075 = t2441;
          var t2443;
          if(t1075 !== false) {
           t2443 = true;
          }
          else {
           t2443 = false;
          }
          var t2440;
          if(t2443 !== false) {
           var t2444 = function (t1309) {
            var t849 = t1309;
            var t2446 = SPOCK.jstring("newline");
            var t2445 = t2446.toLowerCase();
            var t852 = t2445;
            var t2448 = SPOCK.jstring(t849);
            var t2447 = t2448.toLowerCase();
            var t853 = t2447;
            var t2449 = (t852) === (t853);
            var t1076 = t2449;
            var t2450;
            if(t1076 !== false) {
             var t2451 = new SPOCK.Char("\n");
             return k1303(t2451);
             t2450 = undefined;
            }
            else {
             var t2454 = SPOCK.jstring("tab");
             var t2453 = t2454.toLowerCase();
             var t858 = t2453;
             var t2456 = SPOCK.jstring(t849);
             var t2455 = t2456.toLowerCase();
             var t859 = t2455;
             var t2457 = (t858) === (t859);
             var t1077 = t2457;
             var t2458;
             if(t1077 !== false) {
              var t2459 = new SPOCK.Char("\t");
              return k1303(t2459);
              t2458 = undefined;
             }
             else {
              var t2462 = SPOCK.jstring("space");
              var t2461 = t2462.toLowerCase();
              var t864 = t2461;
              var t2464 = SPOCK.jstring(t849);
              var t2463 = t2464.toLowerCase();
              var t865 = t2463;
              var t2465 = (t864) === (t865);
              var t1078 = t2465;
              var t2466;
              if(t1078 !== false) {
               var t2467 = new SPOCK.Char(" ");
               return k1303(t2467);
               t2466 = undefined;
              }
              else {
               var t2470 = SPOCK.jstring(t849);
               var t2469 = t2470.length;
               var t868 = t2469;
               var t2471 = (0) === (t868);
               var t1079 = t2471;
               var t2472;
               if(t1079 !== false) {
                return ____25error(k1303, "invalid character syntax");
                t2472 = undefined;
               }
               else {
                return ___string_2dref(k1303, t849, 0);
                t2472 = undefined;
               }
               t2466 = t2472;
              }
              t2458 = t2466;
             }
             t2450 = t2458;
            }
           };
           var t2475 = null;
           return t767(t2444, t2475);
           t2440 = undefined;
          }
          else {
           return ____25error(k1303, "invalid `#' syntax", t827);
           t2440 = undefined;
          }
          t2427 = t2440;
         }
         t2419 = t2427;
        }
        t2411 = t2419;
       }
       t2403 = t2411;
      }
      t2401 = t2403;
     }
    };
    return t750(t2399, t758);
   };
   t764 = t2398;	// set! t764
   var t2479 = function (k1310, t873) {	// t765
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t874 = undefined;
    var t2480 = function (k1311, t875) {	// t874
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t2481 = function (t1312) {
      var t876 = t1312;
      var t879 = SPOCK.EOF;
      var t2482 = (t876) === (t879);
      var t1080 = t2482;
      var t2483;
      if(t1080 !== false) {
       return ____25error(k1311, "unexpected EOF while reading list");
       t2483 = undefined;
      }
      else {
       var t881 = t873;
       var t2485 = t876.character;
       var t882 = t2485;
       var t2486 = t881.character;
       var t883 = t2486;
       var t2487 = (t882) === (t883);
       var t1081 = t2487;
       var t2488;
       if(t1081 !== false) {
        var t2489 = function (t1313) {
         return t751(k1311, t875);
        };
        return t750(t2489, t758);
        t2488 = undefined;
       }
       else {
        var t2493 = new SPOCK.Char(".");
        var t2492 = SPOCK.eqvp(t2493, t876);
        var t1082 = t2492;
        var t2494;
        if(t1082 !== false) {
         var t2495 = function (t1314) {
          var t886 = t1314;
          var t2496 = SPOCK.jstring(".");
          var t889 = t2496;
          var t2497 = SPOCK.jstring(t886);
          var t890 = t2497;
          var t2498 = (t889) === (t890);
          var t1083 = t2498;
          var t2499;
          if(t1083 !== false) {
           var t2500 = function (t1315) {
            var t893 = t1315;
            var t2501 = function (t1316) {
             var t2502 = function (t1317) {
              var t894 = t1317;
              var t895 = t873;
              var t2503 = SPOCK.eqvp(t894, t895);
              var t1084 = t2503;
              var t2504;
              if(t1084 !== false) {
               var t2505 = function (t1318) {
                return ___append(k1311, t1318, t893);
               };
               return t751(t2505, t875);
               t2504 = undefined;
              }
              else {
               return ____25error(k1311, "missing closing delimiter", t873);
               t2504 = undefined;
              }
             };
             return t750(t2502, t758);
            };
            return t763(t2501);
           };
           return t761(t2500);
           t2499 = undefined;
          }
          else {
           var t2512 = function (t1320) {
            var t896 = t1320;
            var t2513 = new SPOCK.Pair(t896, undefined);
            var t1319 = t2513;
            return t874(k1311, t1319, t875);
           };
           return t760(t2512, t886);
           t2499 = undefined;
          }
         };
         var t2516 = null;
         return t767(t2495, t2516);
         t2494 = undefined;
        }
        else {
         var t2518 = function (t1322) {
          var t898 = t1322;
          var t2519 = new SPOCK.Pair(t898, t875);
          var t1321 = t2519;
          return t874(k1311, t1321);
         };
         return t761(t2518);
         t2494 = undefined;
        }
        t2488 = t2494;
       }
       t2483 = t2488;
      }
     };
     return t763(t2481);
    };
    t874 = t2480;	// set! t874
    var t2523 = null;
    return t874(k1310, t2523);
   };
   t765 = t2479;	// set! t765
   var t2525 = function (k1323) {	// t766
    var t900 = undefined;
    var t2526 = function (k1324, t901) {	// t900
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t2527 = function (t1325) {
      var t902 = t1325;
      var t905 = SPOCK.EOF;
      var t2528 = (t902) === (t905);
      var t1085 = t2528;
      var t2529;
      if(t1085 !== false) {
       return ____25error(k1324, "unexpected EOF while reading string");
       t2529 = undefined;
      }
      else {
       var t2532 = new SPOCK.Char("\"");
       var t2531 = t2532.character;
       var t908 = t2531;
       var t2533 = t902.character;
       var t909 = t2533;
       var t2534 = (t908) === (t909);
       var t1086 = t2534;
       var t2535;
       if(t1086 !== false) {
        var t2536 = function (t1326) {
         return t754(k1324, t1326);
        };
        return t751(t2536, t901);
        t2535 = undefined;
       }
       else {
        var t2540 = new SPOCK.Char("\\");
        var t2539 = t2540.character;
        var t912 = t2539;
        var t2541 = t902.character;
        var t913 = t2541;
        var t2542 = (t912) === (t913);
        var t1087 = t2542;
        var t2543;
        if(t1087 !== false) {
         var t2544 = function (t1327) {
          var t914 = t1327;
          var t917 = SPOCK.EOF;
          var t2545 = (t914) === (t917);
          var t1088 = t2545;
          var t2546;
          if(t1088 !== false) {
           return ____25error(k1324, "unexpected EOF while reading string");
           t2546 = undefined;
          }
          else {
           var t2550 = new SPOCK.Char("n");
           var t2549 = SPOCK.eqvp(t914, t2550);
           var t1089 = t2549;
           var t2551;
           if(t1089 !== false) {
            t2551 = true;
           }
           else {
            t2551 = false;
           }
           var t2548;
           if(t2551 !== false) {
            var t2553 = new SPOCK.Char("\n");
            var t2552 = new SPOCK.Pair(t2553, t901);
            return t900(k1324, t2552);
            t2548 = undefined;
           }
           else {
            var t2557 = new SPOCK.Char("t");
            var t2556 = SPOCK.eqvp(t914, t2557);
            var t1090 = t2556;
            var t2558;
            if(t1090 !== false) {
             t2558 = true;
            }
            else {
             t2558 = false;
            }
            var t2555;
            if(t2558 !== false) {
             var t2560 = new SPOCK.Char("\t");
             var t2559 = new SPOCK.Pair(t2560, t901);
             return t900(k1324, t2559);
             t2555 = undefined;
            }
            else {
             var t2562 = new SPOCK.Pair(t914, t901);
             return t900(k1324, t2562);
             t2555 = undefined;
            }
            t2548 = t2555;
           }
           t2546 = t2548;
          }
         };
         return t750(t2544, t758);
         t2543 = undefined;
        }
        else {
         var t2565 = new SPOCK.Pair(t902, t901);
         return t900(k1324, t2565);
         t2543 = undefined;
        }
        t2535 = t2543;
       }
       t2529 = t2535;
      }
     };
     return t750(t2527, t758);
    };
    t900 = t2526;	// set! t900
    var t2568 = null;
    return t900(k1323, t2568);
   };
   t766 = t2525;	// set! t766
   var t2570 = function (k1328, t931) {	// t767
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t932 = undefined;
    var t2571 = function (k1329, t933) {	// t932
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t2572 = function (t1330) {
      var t934 = t1330;
      var t938 = SPOCK.EOF;
      var t2573 = (t934) === (t938);
      var t935 = t2573;
      var t2574 = function (t1331) {	// t1335
       var t1091 = t1331;
       var t2575;
       if(t1091 !== false) {
        var t2576 = function (t1332) {
         return t754(k1329, t1332);
        };
        return t751(t2576, t933);
        t2575 = undefined;
       }
       else {
        var t2579 = function (t1334) {
         var t945 = t1334;
         var t2580 = new SPOCK.Pair(t945, t933);
         var t1333 = t2580;
         return t932(k1329, t1333);
        };
        return t750(t2579, t758);
        t2575 = undefined;
       }
      };
      var t1335 = t2574;
      var t2583;
      if(t935 !== false) {
       return t1335(t935);
       t2583 = undefined;
      }
      else {
       var t2585 = function (t1336) {
        var t939 = t1336;
        var t2586;
        if(t939 !== false) {
         t2586 = t939;
        }
        else {
         var t2587 = (t934) .character.match(/^\s$/) ;
         var t942 = t2587;
         var t2589 = null;
         var t2588 = (t942) === (t2589);
         var t941 = t2588;
         var t2590;
         if(t941 !== false) {
          t2590 = false;
         }
         else {
          t2590 = true;
         }
         t2586 = t2590;
        }
        return t1335(t2586);
       };
       var t2592 = new SPOCK.Pair(new SPOCK.Char("{"), new SPOCK.Pair(new SPOCK.Char("}"), new SPOCK.Pair(new SPOCK.Char("("), new SPOCK.Pair(new SPOCK.Char(")"), new SPOCK.Pair(new SPOCK.Char("["), new SPOCK.Pair(new SPOCK.Char("]"), new SPOCK.Pair(new SPOCK.Char(";"), new SPOCK.Pair(new SPOCK.Char("\""), null))))))));
       return ___memv(t2585, t934, t2592);
       t2583 = undefined;
      }
     };
     return t752(t2572, t758);
    };
    t932 = t2571;	// set! t932
    return t932(k1328, t931);
   };
   t767 = t2570;	// set! t767
   return t761(k1279);
  };
  var t1337 = t2262;
  var t2597;
  if(t1049 !== false) {
   return t755(t1337);
   t2597 = undefined;
  }
  else {
   return t1337(t757);
   t2597 = undefined;
  }
 };
 ___read = t2260;	// set! read
 var t2600 = function (k1338, t947, t948) {	// load
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2602 = SPOCK.jstring(t947);
   var t2603 = t948 === undefined;
   var t950 = t2603;
   var t2604;
   if(t950 !== false) {
    t2604 = false;
   }
   else {
    t2604 = true;
   }
   var t1092 = t2604;
   var t2605;
   if(t1092 !== false) {
    var t2606 = SPOCK.callback(t948);
    t2605 = t2606;
   }
   else {
    t2605 = false;
   }
   var t2601 = SPOCK.load(t2602, t2605);
   return k1338(t2601);
  }
 };
 ___load = t2600;	// set! load
 var t2608 = function(K) {
  SPOCK.count(arguments, '%error');
  SPOCK.error.apply(SPOCK.global, Array.prototype.slice.call(arguments, 1));
 };
 ____25error = t2608;	// set! %error
 ___error = ____25error;	// set! error
 var t2609 = function (k1339, t952) {	// exit
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2611 = t952 === undefined;
   var t1093 = t2611;
   var t2612;
   if(t1093 !== false) {
    t2612 = 0;
   }
   else {
    t2612 = t952;
   }
   var t2610 = SPOCK.exit(t2612);
   return k1339(t2610);
  }
 };
 ___exit = t2609;	// set! exit
 var t2614 = function (k1340, t954) {	// milliseconds
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t2615 = (new Date()).getTime();
  var t955 = t2615;
  var t2616 = t954 === undefined;
  var t1094 = t2616;
  var t2617;
  if(t1094 !== false) {
   return k1340(t955);
   t2617 = undefined;
  }
  else {
   var t2619 = function (t1341) {
    var t2620 = (new Date()).getTime();
    var t958 = t2620;
    var t2621 = (t958) - (t955);
    return k1340(t2621);
   };
   return t954(t2619);
   t2617 = undefined;
  }
 };
 ___milliseconds = t2614;	// set! milliseconds
 var t2624 = function (k1342, t959) {	// print
  var t959 = SPOCK.rest(arguments, 1);
  var t2625 = function (t1343) {
   return ___newline(k1342);
  };
  return ___for_2deach(t2625, ___display, t959);
 };
 ___print = t2624;	// set! print
 var t2628 = function (k1344, t960) {	// o
  var t960 = SPOCK.rest(arguments, 1);
  var t2630 = null;
  var t2629 = (t960) === (t2630);
  var t1095 = t2629;
  var t2631;
  if(t1095 !== false) {
   var t2632 = function (k1345, t964) {
    var r = SPOCK.count(arguments);
    if(r) return r;
    loop: while(true) {
     return k1345(t964);
    }
   };
   return k1344(t2632);
   t2631 = undefined;
  }
  else {
   var t965 = undefined;
   var t2635 = function (k1346, t966) {	// t965
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t2636 = t966.car;
    var t967 = t2636;
    var t2637 = t966.cdr;
    var t968 = t2637;
    var t2639 = null;
    var t2638 = (t968) === (t2639);
    var t1096 = t2638;
    var t2640;
    if(t1096 !== false) {
     t2640 = t967;
    }
    else {
     var t2641 = function (k1347, t974) {
      var r = SPOCK.count(arguments);
      if(r) return r;
      var t2642 = function (t1349) {
       var t2643 = function (t1348) {
        return t967(k1347, t1348);
       };
       return t1349(t2643, t974);
      };
      return t965(t2642, t968);
     };
     t2640 = t2641;
    }
    return k1346(t2640);
   };
   t965 = t2635;	// set! t965
   return t965(k1344, t960);
   t2631 = undefined;
  }
 };
 ___o = t2628;	// set! o
 var t2649 = function(K) {
  SPOCK.count(arguments, '%');
  var o = {};
  for(var i = 1; i < arguments.length; i += 2) {
   var x = arguments[ i ];
   if(typeof x === 'string') o[ x ] = arguments[ i + 1 ];
   else if(x instanceof SPOCK.String)
    o[ x.name ] = arguments[ i + 1 ];
   else SPOCK.error('(%) object key not a string or symbol', x);}
  return K(o);
 };
 ____25 = t2649;	// set! %
 var t2650 = function(K) {
  SPOCK.count(arguments, 'native');
  var func = arguments[ 1 ];
  return K(function(k) {
   var args = Array.prototype.splice.call(arguments, 1);
   return k(func.apply(SPOCK.global, args));});
 };
 ___native = t2650;	// set! native
 var t2651 = function(K) {
  SPOCK.count(arguments, 'native-method');
  var func = arguments[ 1 ];
  return K(function(k) {
   var args = Array.prototype.splice.call(arguments, 2);
   return k(func.apply(arguments[ 1 ], args));});
 };
 ___native_2dmethod = t2651;	// set! native-method
 var t2652 = function(K) {
  SPOCK.count(arguments, 'bind-method');
  var func = arguments[ 1 ];
  var that = arguments[ 2 ];
  return K(function() { return func.apply(that, arguments); });
 };
 ___bind_2dmethod = t2652;	// set! bind-method
 var t2653 = function(K) {
  SPOCK.count(arguments, 'jstring');
  var x = arguments[ 1 ];
  if(typeof x === 'string') return K(x);
  else if(x instanceof SPOCK.String) return K(x.normalize());
  else if(x instanceof SPOCK.Char) return K(x.character);
  else return K(x);
 };
 ___jstring = t2653;	// set! jstring
 return k1097(undefined);
};
SPOCK.run(t1350);
SPOCK.flush();
/* END OF GENERATED CODE */

var t2664 = function (k2093) {
 var t2665 = function (k2094, t1) {	// %list
  var t1 = SPOCK.rest(arguments, 1);
  loop: while(true) {
   return k2094(t1);
  }
 };
 ____25list = t2665;	// set! %list
 var t2667 = function(K) {
  SPOCK.count(arguments, 'values');
  return K.apply(SPOCK.global, Array.prototype.slice.call(arguments, 1));
 };
 ___values = t2667;	// set! values
 var t2668 = function(K) {
  SPOCK.count(arguments, 'call-with-values');
  var thunk = arguments[ 1 ];
  var proc = arguments[ 2 ];
  function k2() {
   var args = Array.prototype.slice.call(arguments);
   args.unshift(K);
   return proc.apply(SPOCK.global, args);}
  return thunk(k2);
 };
 ___call_2dwith_2dvalues = t2668;	// set! call-with-values
 var t2669 = function(K) {
  SPOCK.count(arguments, '%call-with-saved-values');
  var t1 = arguments[ 1 ];
  var t2 = arguments[ 2 ];
  var args;
  function k2() { return K.apply(SPOCK.global, args); }
  function k1() {
   args = Array.prototype.slice.call(arguments);
   return t2(k2);}
  return t1(k1);
 };
 ____25call_2dwith_2dsaved_2dvalues = t2669;	// set! %call-with-saved-values
 var t2670 = function (k2095, t2) {	// list?
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t3 = undefined;
  var t2671 = function (k2096, t4, t5) {	// t3
   var r = SPOCK.count(arguments);
   if(r) return r;
   loop: while(true) {
    var t2673 = null;
    var t2672 = (t4) === (t2673);
    var t6 = t2672;
    var t2674;
    if(t6 !== false) {
     return k2096(t6);
     t2674 = undefined;
    }
    else {
     var t2676 = (t4) instanceof SPOCK.Pair ;
     var t1817 = t2676;
     var t2677;
     if(t1817 !== false) {
      var t2678 = t4.cdr;
      var t11 = t2678;
      var t2680 = null;
      var t2679 = (t11) === (t2680);
      var t13 = t2679;
      var t2681;
      if(t13 !== false) {
       return k2096(t13);
       t2681 = undefined;
      }
      else {
       var t2683 = (t11) instanceof SPOCK.Pair ;
       var t1818 = t2683;
       var t2684;
       if(t1818 !== false) {
        var t2685 = t11.cdr;
        var t18 = t2685;
        var t2686 = t5.cdr;
        var t19 = t2686;
        var t2687 = (t18) === (t19);
        var t22 = t2687;
        var t2688;
        if(t22 !== false) {
         t2688 = false;
        }
        else {
         t2688 = true;
        }
        var t1819 = t2688;
        var t2689;
        if(t1819 !== false) {
         var t2690 = t18;
         var t2691 = t19;
         t4 = t2690;
         t5 = t2691;
         continue loop;
         t2689 = undefined;
        }
        else {
         return k2096(false);
         t2689 = undefined;
        }
        t2684 = t2689;
       }
       else {
        return k2096(false);
        t2684 = undefined;
       }
       t2681 = t2684;
      }
      t2677 = t2681;
     }
     else {
      return k2096(false);
      t2677 = undefined;
     }
     t2674 = t2677;
    }
   }
  };
  t3 = t2671;	// set! t3
  return t3(k2095, t2, t2);
 };
 ___list_3f = t2670;	// set! list?
 var t2696 = function (k2097, t25) {	// caaar
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2697 = t25.car;
   var t27 = t2697;
   var t2698 = t27.car;
   var t26 = t2698;
   var t2699 = t26.car;
   return k2097(t2699);
  }
 };
 ___caaar = t2696;	// set! caaar
 var t2701 = function (k2098, t32) {	// caadr
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2702 = t32.cdr;
   var t34 = t2702;
   var t2703 = t34.car;
   var t33 = t2703;
   var t2704 = t33.car;
   return k2098(t2704);
  }
 };
 ___caadr = t2701;	// set! caadr
 var t2706 = function (k2099, t39) {	// cadar
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2707 = t39.car;
   var t41 = t2707;
   var t2708 = t41.cdr;
   var t40 = t2708;
   var t2709 = t40.car;
   return k2099(t2709);
  }
 };
 ___cadar = t2706;	// set! cadar
 var t2711 = function (k2100, t46) {	// caddr
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2712 = t46.cdr;
   var t48 = t2712;
   var t2713 = t48.cdr;
   var t47 = t2713;
   var t2714 = t47.car;
   return k2100(t2714);
  }
 };
 ___caddr = t2711;	// set! caddr
 var t2716 = function (k2101, t53) {	// cdaar
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2717 = t53.car;
   var t55 = t2717;
   var t2718 = t55.car;
   var t54 = t2718;
   var t2719 = t54.cdr;
   return k2101(t2719);
  }
 };
 ___cdaar = t2716;	// set! cdaar
 var t2721 = function (k2102, t60) {	// cdadr
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2722 = t60.cdr;
   var t62 = t2722;
   var t2723 = t62.car;
   var t61 = t2723;
   var t2724 = t61.cdr;
   return k2102(t2724);
  }
 };
 ___cdadr = t2721;	// set! cdadr
 var t2726 = function (k2103, t67) {	// cddar
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2727 = t67.car;
   var t69 = t2727;
   var t2728 = t69.cdr;
   var t68 = t2728;
   var t2729 = t68.cdr;
   return k2103(t2729);
  }
 };
 ___cddar = t2726;	// set! cddar
 var t2731 = function (k2104, t74) {	// cdddr
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2732 = t74.cdr;
   var t76 = t2732;
   var t2733 = t76.cdr;
   var t75 = t2733;
   var t2734 = t75.cdr;
   return k2104(t2734);
  }
 };
 ___cdddr = t2731;	// set! cdddr
 var t2736 = function (k2105, t81) {	// caaaar
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2737 = t81.car;
   var t84 = t2737;
   var t2738 = t84.car;
   var t83 = t2738;
   var t2739 = t83.car;
   var t82 = t2739;
   var t2740 = t82.car;
   return k2105(t2740);
  }
 };
 ___caaaar = t2736;	// set! caaaar
 var t2742 = function (k2106, t90) {	// caaadr
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2743 = t90.cdr;
   var t93 = t2743;
   var t2744 = t93.car;
   var t92 = t2744;
   var t2745 = t92.car;
   var t91 = t2745;
   var t2746 = t91.car;
   return k2106(t2746);
  }
 };
 ___caaadr = t2742;	// set! caaadr
 var t2748 = function (k2107, t99) {	// caadar
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2749 = t99.car;
   var t102 = t2749;
   var t2750 = t102.cdr;
   var t101 = t2750;
   var t2751 = t101.car;
   var t100 = t2751;
   var t2752 = t100.car;
   return k2107(t2752);
  }
 };
 ___caadar = t2748;	// set! caadar
 var t2754 = function (k2108, t108) {	// caaddr
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2755 = t108.cdr;
   var t111 = t2755;
   var t2756 = t111.cdr;
   var t110 = t2756;
   var t2757 = t110.car;
   var t109 = t2757;
   var t2758 = t109.car;
   return k2108(t2758);
  }
 };
 ___caaddr = t2754;	// set! caaddr
 var t2760 = function (k2109, t117) {	// cadaar
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2761 = t117.car;
   var t120 = t2761;
   var t2762 = t120.car;
   var t119 = t2762;
   var t2763 = t119.cdr;
   var t118 = t2763;
   var t2764 = t118.car;
   return k2109(t2764);
  }
 };
 ___cadaar = t2760;	// set! cadaar
 var t2766 = function (k2110, t126) {	// cadadr
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2767 = t126.cdr;
   var t129 = t2767;
   var t2768 = t129.car;
   var t128 = t2768;
   var t2769 = t128.car;
   var t127 = t2769;
   var t2770 = t127.car;
   return k2110(t2770);
  }
 };
 ___cadadr = t2766;	// set! cadadr
 var t2772 = function (k2111, t135) {	// caddar
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2773 = t135.car;
   var t138 = t2773;
   var t2774 = t138.cdr;
   var t137 = t2774;
   var t2775 = t137.car;
   var t136 = t2775;
   var t2776 = t136.car;
   return k2111(t2776);
  }
 };
 ___caddar = t2772;	// set! caddar
 var t2778 = function (k2112, t144) {	// cadddr
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2779 = t144.cdr;
   var t147 = t2779;
   var t2780 = t147.cdr;
   var t146 = t2780;
   var t2781 = t146.car;
   var t145 = t2781;
   var t2782 = t145.car;
   return k2112(t2782);
  }
 };
 ___cadddr = t2778;	// set! cadddr
 var t2784 = function (k2113, t153) {	// cdaaar
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2785 = t153.car;
   var t156 = t2785;
   var t2786 = t156.car;
   var t155 = t2786;
   var t2787 = t155.car;
   var t154 = t2787;
   var t2788 = t154.cdr;
   return k2113(t2788);
  }
 };
 ___cdaaar = t2784;	// set! cdaaar
 var t2790 = function (k2114, t162) {	// cdaadr
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2791 = t162.cdr;
   var t165 = t2791;
   var t2792 = t165.car;
   var t164 = t2792;
   var t2793 = t164.car;
   var t163 = t2793;
   var t2794 = t163.cdr;
   return k2114(t2794);
  }
 };
 ___cdaadr = t2790;	// set! cdaadr
 var t2796 = function (k2115, t171) {	// cdadar
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2797 = t171.car;
   var t174 = t2797;
   var t2798 = t174.cdr;
   var t173 = t2798;
   var t2799 = t173.car;
   var t172 = t2799;
   var t2800 = t172.cdr;
   return k2115(t2800);
  }
 };
 ___cdadar = t2796;	// set! cdadar
 var t2802 = function (k2116, t180) {	// cdaddr
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2803 = t180.cdr;
   var t183 = t2803;
   var t2804 = t183.cdr;
   var t182 = t2804;
   var t2805 = t182.car;
   var t181 = t2805;
   var t2806 = t181.cdr;
   return k2116(t2806);
  }
 };
 ___cdaddr = t2802;	// set! cdaddr
 var t2808 = function (k2117, t189) {	// cddaar
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2809 = t189.car;
   var t192 = t2809;
   var t2810 = t192.car;
   var t191 = t2810;
   var t2811 = t191.cdr;
   var t190 = t2811;
   var t2812 = t190.cdr;
   return k2117(t2812);
  }
 };
 ___cddaar = t2808;	// set! cddaar
 var t2814 = function (k2118, t198) {	// cddadr
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2815 = t198.cdr;
   var t201 = t2815;
   var t2816 = t201.car;
   var t200 = t2816;
   var t2817 = t200.cdr;
   var t199 = t2817;
   var t2818 = t199.cdr;
   return k2118(t2818);
  }
 };
 ___cddadr = t2814;	// set! cddadr
 var t2820 = function (k2119, t207) {	// cdddar
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2821 = t207.car;
   var t210 = t2821;
   var t2822 = t210.cdr;
   var t209 = t2822;
   var t2823 = t209.cdr;
   var t208 = t2823;
   var t2824 = t208.cdr;
   return k2119(t2824);
  }
 };
 ___cdddar = t2820;	// set! cdddar
 var t2826 = function (k2120, t216) {	// cddddr
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2827 = t216.cdr;
   var t219 = t2827;
   var t2828 = t219.cdr;
   var t218 = t2828;
   var t2829 = t218.cdr;
   var t217 = t2829;
   var t2830 = t217.cdr;
   return k2120(t2830);
  }
 };
 ___cddddr = t2826;	// set! cddddr
 var t2832 = function (k2121, t225) {	// append
  var t225 = SPOCK.rest(arguments, 1);
  var t2834 = null;
  var t2833 = (t225) === (t2834);
  var t1820 = t2833;
  var t2835;
  if(t1820 !== false) {
   var t2836 = null;
   return k2121(t2836);
   t2835 = undefined;
  }
  else {
   var t229 = undefined;
   var t2838 = function (k2122, t230) {	// t229
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t2839 = t230.cdr;
    var t231 = t2839;
    var t2841 = null;
    var t2840 = (t231) === (t2841);
    var t1821 = t2840;
    var t2842;
    if(t1821 !== false) {
     var t2843 = t230.car;
     return k2122(t2843);
     t2842 = undefined;
    }
    else {
     var t236 = undefined;
     var t2845 = function (k2123, t237) {	// t236
      var r = SPOCK.count(arguments);
      if(r) return r;
      var t2846 = (t237) instanceof SPOCK.Pair ;
      var t1822 = t2846;
      var t2847;
      if(t1822 !== false) {
       var t2848 = t237.car;
       var t239 = t2848;
       var t2849 = function (t2124) {
        var t240 = t2124;
        var t2850 = new SPOCK.Pair(t239, t240);
        return k2123(t2850);
       };
       var t2852 = t237.cdr;
       return t236(t2849, t2852);
       t2847 = undefined;
      }
      else {
       var t243 = t230;
       var t2854 = t243.cdr;
       return t229(k2123, t2854);
       t2847 = undefined;
      }
     };
     t236 = t2845;	// set! t236
     var t2856 = t230.car;
     return t236(k2122, t2856);
     t2842 = undefined;
    }
   };
   t229 = t2838;	// set! t229
   return t229(k2121, t225);
   t2835 = undefined;
  }
 };
 ___append = t2832;	// set! append
 var t2859 = function (k2125, t245) {	// reverse
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t246 = undefined;
  var t2860 = function (k2126, t247, t248) {	// t246
   var r = SPOCK.count(arguments);
   if(r) return r;
   loop: while(true) {
    var t2861 = (t247) instanceof SPOCK.Pair ;
    var t1823 = t2861;
    var t2862;
    if(t1823 !== false) {
     var t2865 = t247.cdr;
     var t2863 = t2865;
     var t2866 = t247.car;
     var t251 = t2866;
     var t2867 = new SPOCK.Pair(t251, t248);
     var t2864 = t2867;
     t247 = t2863;
     t248 = t2864;
     continue loop;
     t2862 = undefined;
    }
    else {
     return k2126(t248);
     t2862 = undefined;
    }
   }
  };
  t246 = t2860;	// set! t246
  var t2869 = null;
  return t246(k2125, t245, t2869);
 };
 ___reverse = t2859;	// set! reverse
 var t2871 = function (k2127, t254, t255) {	// list-tail
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t256 = undefined;
  var t2872 = function (k2128, t257, t258) {	// t256
   var r = SPOCK.count(arguments);
   if(r) return r;
   loop: while(true) {
    var t2874 = (t257)  <= 0 ;
    var t2873;
    if(t2874 !== false) {
     return k2128(t258);
     t2873 = undefined;
    }
    else {
     var t2878 = (t257)  - 1 ;
     var t2876 = t2878;
     var t2879 = t258.cdr;
     var t2877 = t2879;
     t257 = t2876;
     t258 = t2877;
     continue loop;
     t2873 = undefined;
    }
   }
  };
  t256 = t2872;	// set! t256
  return t256(k2127, t255, t254);
 };
 ___list_2dtail = t2871;	// set! list-tail
 var t260 = ___list_2dtail;
 var t2881 = function (k2129, t261, t262) {	// t260
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t2882 = function (t2130) {
   var t263 = t2130;
   var t2883 = t263.car;
   return k2129(t2883);
  };
  return t260(t2882, t261, t262);
 };
 ___list_2dref = t2881;	// set! list-ref
 var t2886 = function(K) {
  SPOCK.count(arguments, 'memq');
  var x = arguments[ 1 ];
  for(var n = arguments[ 2 ]; n instanceof SPOCK.Pair; n = n.cdr) {
    if(n.car === x) return K(n);
  }
  return K(false);
 };
 ___memq = t2886;	// set! memq
 var t2887 = function(K) {
  SPOCK.count(arguments, 'memv');
  var x = arguments[ 1 ];
  for(var n = arguments[ 2 ]; n instanceof SPOCK.Pair; n = n.cdr) {
    if(SPOCK.eqvp(n.car, x)) return K(n);
  }
  return K(false);
 };
 ___memv = t2887;	// set! memv
 var t2888 = function(K) {
  SPOCK.count(arguments, 'member');
  var x = arguments[ 1 ];
  for(var n = arguments[ 2 ]; n instanceof SPOCK.Pair; n = n.cdr) {
    if(SPOCK.equalp(n.car, x)) return K(n);
  }
  return K(false);
 };
 ___member = t2888;	// set! member
 var t2889 = function(K) {
  SPOCK.count(arguments, 'assq');
  var x = arguments[ 1 ];
  for(var n = arguments[ 2 ]; n instanceof SPOCK.Pair; n = n.cdr) {
    var p = n.car;
    if(p instanceof SPOCK.Pair && p.car === x) return K(p);
  }
  return K(false);
 };
 ___assq = t2889;	// set! assq
 var t2890 = function(K) {
  SPOCK.count(arguments, 'assv');
  var x = arguments[ 1 ];
  for(var n = arguments[ 2 ]; n instanceof SPOCK.Pair; n = n.cdr) {
    var p = n.car;
    if(p instanceof SPOCK.Pair && SPOCK.eqvp(p.car, x)) return K(p);
  }
  return K(false);
 };
 ___assv = t2890;	// set! assv
 var t2891 = function(K) {
  SPOCK.count(arguments, 'assoc');
  var x = arguments[ 1 ];
  for(var n = arguments[ 2 ]; n instanceof SPOCK.Pair; n = n.cdr) {
    var p = n.car;
    if(p instanceof SPOCK.Pair && SPOCK.equalp(p.car, x)) return K(p);
  }
  return K(false);
 };
 ___assoc = t2891;	// set! assoc
 var t2892 = function(K) {
  SPOCK.count(arguments, '%+');
  var len = arguments.length;
  switch(len) {
  case 1: return K(0);
  case 2: return K(arguments[ 1 ]);
  default:
   var p = arguments[ 1 ];
   for(var i = 2; i < len; ++i) {
    p += arguments[ i ];
   }
   return K(p);}
 };
 ____25_2b = t2892;	// set! %+
 var t2893 = function(K) {
  SPOCK.count(arguments, '%-');
  var len = arguments.length;
  switch(len) {
  case 2: return K(-arguments[ 1 ]);
  default:
   var p = arguments[ 1 ];
   for(var i = 2; i < len; ++i) {
    p -= arguments[ i ];
   }
   return K(p);}
 };
 ____25_2d = t2893;	// set! %-
 var t2894 = function(K) {
  SPOCK.count(arguments, '%*');
  var len = arguments.length;
  switch(len) {
  case 1: return K(1);
  case 2: return K(arguments[ 1 ]);
  default:
   var p = arguments[ 1 ];
   for(var i = 2; i < len; ++i) {
    p *= arguments[ i ];
   }
   return K(p);}
 };
 ____25_2a = t2894;	// set! %*
 var t2895 = function(K) {
  SPOCK.count(arguments, '%/');
  var len = arguments.length;
  switch(len) {
  case 2: return K(1/arguments[ 1 ]);
  default:
   var p = arguments[ 1 ];
   for(var i = 2; i < len; ++i) {
    p /= arguments[ i ];
   }
   return K(p);}
 };
 ____25_2f = t2895;	// set! %/
 var t2896 = function(K) {
  SPOCK.count(arguments, '%=');
  var argc = arguments.length;
  var last = SPOCK.check(arguments[ 1 ], 'number', '=');
  for(var i = 2; i < argc; ++i) {
   var x = SPOCK.check(arguments[ i ], 'number', '=');
   if(last !== x) return K(false);
   else last = x;}
  return K(true);
 };
 ____25_3d = t2896;	// set! %=
 var t2897 = function(K) {
  SPOCK.count(arguments, '%>');
  var argc = arguments.length;
  var last = SPOCK.check(arguments[ 1 ], 'number', '>');
  for(var i = 2; i < argc; ++i) {
   var x = SPOCK.check(arguments[ i ], 'number', '>');
   if(last <= x) return K(false);
   else last = x;}
  return K(true);
 };
 ____25_3e = t2897;	// set! %>
 var t2898 = function(K) {
  SPOCK.count(arguments, '%<');
  var argc = arguments.length;
  var last = SPOCK.check(arguments[ 1 ], 'number', '<');
  for(var i = 2; i < argc; ++i) {
   var x = SPOCK.check(arguments[ i ], 'number', '<');
   if(last >= x) return K(false);
   else last = x;}
  return K(true);
 };
 ____25_3c = t2898;	// set! %<
 var t2899 = function(K) {
  SPOCK.count(arguments, '%>=');
  var argc = arguments.length;
  var last = SPOCK.check(arguments[ 1 ], 'number', '>=');
  for(var i = 2; i < argc; ++i) {
   var x = SPOCK.check(arguments[ i ], 'number', '>=');
   if(last < x) return K(false);
   else last = x;}
  return K(true);
 };
 ____25_3e_3d = t2899;	// set! %>=
 var t2900 = function(K) {
  SPOCK.count(arguments, '%<=');
  var argc = arguments.length;
  var last = SPOCK.check(arguments[ 1 ], 'number', '<=');
  for(var i = 2; i < argc; ++i) {
   var x = SPOCK.check(arguments[ i ], 'number', '<=');
   if(last > x) return K(false);
   else last = x;}
  return K(true);
 };
 ____25_3c_3d = t2900;	// set! %<=
 var t2901 = function(K) {
  SPOCK.count(arguments, '%max');
  return K(Math.max.apply(SPOCK.global, arguments));
 };
 ____25max = t2901;	// set! %max
 var t2902 = function(K) {
  SPOCK.count(arguments, '%max');
  return K(Math.min.apply(SPOCK.global, arguments));
 };
 ____25max = t2902;	// set! %max
 var t2903 = function (k2131, t264, t265) {	// modulo
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2904 = (t264)  /  (t265);
   var t275 = t2904;
   var t2906 = (t275)  < 0 ;
   var t2905;
   if(t2906 !== false) {
    var t2907 = Math.ceil(t275);
    t2905 = t2907;
   }
   else {
    var t2908 = Math.floor(t275);
    t2905 = t2908;
   }
   var t271 = t2905;
   var t2909 = (t271)  *  (t265);
   var t270 = t2909;
   var t2910 = (t264)  -  (t270);
   var t266 = t2910;
   var t2911 = (t265)  <  (0);
   var t1824 = t2911;
   var t2912;
   if(t1824 !== false) {
    var t2913 = (t266)  <=  (0);
    var t1825 = t2913;
    var t2914;
    if(t1825 !== false) {
     t2914 = t266;
    }
    else {
     var t2915 = (t266)  +  (t265);
     t2914 = t2915;
    }
    t2912 = t2914;
   }
   else {
    var t2916 = (t266)  >=  (0);
    var t1826 = t2916;
    var t2917;
    if(t1826 !== false) {
     t2917 = t266;
    }
    else {
     var t2918 = (t266)  +  (t265);
     t2917 = t2918;
    }
    t2912 = t2917;
   }
   return k2131(t2912);
  }
 };
 ___modulo = t2903;	// set! modulo
 var t2920 = function (k2132, t289, t290) {	// t288
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2921 = (t289)  /  (t290);
   var t297 = t2921;
   var t2923 = (t297)  < 0 ;
   var t2922;
   if(t2923 !== false) {
    var t2924 = Math.ceil(t297);
    t2922 = t2924;
   }
   else {
    var t2925 = Math.floor(t297);
    t2922 = t2925;
   }
   var t293 = t2922;
   var t2926 = (t293)  *  (t290);
   var t292 = t2926;
   var t2927 = (t289)  -  (t292);
   return k2132(t2927);
  }
 };
 var t288 = t2920;
 var t2929 = function (k2133, t300, t301) {	// t288
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t302 = undefined;
  var t2930 = function (k2134, t303, t304) {	// t302
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t2931 = (0) === (t304);
   var t1827 = t2931;
   var t2932;
   if(t1827 !== false) {
    var t2933 = Math.abs(t303);
    return k2134(t2933);
    t2932 = undefined;
   }
   else {
    var t2935 = function (t2135) {
     return t302(k2134, t304, t2135);
    };
    return t288(t2935, t303, t304);
    t2932 = undefined;
   }
  };
  t302 = t2930;	// set! t302
  return t302(k2133, t300, t301);
 };
 ____25gcd = t2929;	// set! %gcd
 var t2939 = function (k2136, t309) {	// gcd
  var t309 = SPOCK.rest(arguments, 1);
  var t2941 = null;
  var t2940 = (t309) === (t2941);
  var t1828 = t2940;
  var t2942;
  if(t1828 !== false) {
   return k2136(0);
   t2942 = undefined;
  }
  else {
   var t313 = undefined;
   var t2944 = function (k2137, t314, t315) {	// t313
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t2945 = t314.car;
    var t316 = t2945;
    var t2946 = t314.cdr;
    var t317 = t2946;
    var t2948 = null;
    var t2947 = (t317) === (t2948);
    var t1829 = t2947;
    var t2949;
    if(t1829 !== false) {
     var t2950 = Math.abs(t316);
     return k2137(t2950);
     t2949 = undefined;
    }
    else {
     var t2952 = t317.car;
     var t324 = t2952;
     var t2953 = function (t2139) {
      var t326 = t2139;
      var t2954 = t317.cdr;
      var t327 = t2954;
      var t2955 = new SPOCK.Pair(t326, t327);
      var t2138 = t2955;
      return t313(k2137, t2138, false);
     };
     return ____25gcd(t2953, t316, t324);
     t2949 = undefined;
    }
   };
   t313 = t2944;	// set! t313
   return t313(k2136, t309, true);
   t2942 = undefined;
  }
 };
 ___gcd = t2939;	// set! gcd
 var t2959 = function (k2140, t329, t330) {	// %lcm
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t2960 = (t329)  *  (t330);
  var t331 = t2960;
  var t2961 = function (t2141) {
   var t332 = t2141;
   var t2962 = (t331)  /  (t332);
   var t335 = t2962;
   var t2964 = (t335)  < 0 ;
   var t2963;
   if(t2964 !== false) {
    var t2965 = Math.ceil(t335);
    t2963 = t2965;
   }
   else {
    var t2966 = Math.floor(t335);
    t2963 = t2966;
   }
   return k2140(t2963);
  };
  return ____25gcd(t2961, t329, t330);
 };
 ____25lcm = t2959;	// set! %lcm
 var t2969 = function (k2142, t338) {	// lcm
  var t338 = SPOCK.rest(arguments, 1);
  var t2971 = null;
  var t2970 = (t338) === (t2971);
  var t1830 = t2970;
  var t2972;
  if(t1830 !== false) {
   return k2142(1);
   t2972 = undefined;
  }
  else {
   var t342 = undefined;
   var t2974 = function (k2143, t343, t344) {	// t342
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t2975 = t343.car;
    var t345 = t2975;
    var t2976 = t343.cdr;
    var t346 = t2976;
    var t2978 = null;
    var t2977 = (t346) === (t2978);
    var t1831 = t2977;
    var t2979;
    if(t1831 !== false) {
     var t2980 = Math.abs(t345);
     return k2143(t2980);
     t2979 = undefined;
    }
    else {
     var t2982 = t346.car;
     var t353 = t2982;
     var t2983 = function (t2145) {
      var t355 = t2145;
      var t2984 = t346.cdr;
      var t356 = t2984;
      var t2985 = new SPOCK.Pair(t355, t356);
      var t2144 = t2985;
      return t342(k2143, t2144, false);
     };
     return ____25lcm(t2983, t345, t353);
     t2979 = undefined;
    }
   };
   t342 = t2974;	// set! t342
   return t342(k2142, t338, true);
   t2972 = undefined;
  }
 };
 ___lcm = t2969;	// set! lcm
 var t2989 = function(K) {
  SPOCK.count(arguments, 'string->symbol');
  var str = SPOCK.jstring(arguments[ 1 ]);
  return K(SPOCK.intern(str));
 };
 ___string_2d_3esymbol = t2989;	// set! string->symbol
 var t2990 = function (k2146, t358, t359) {	// get
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2992 = t359.name;
   var t2991 = (t358) .plist[ (t2992) ] ;
   var t360 = t2991;
   var t2993 = t360 === undefined;
   var t361 = t2993;
   var t2994;
   if(t361 !== false) {
    t2994 = false;
   }
   else {
    t2994 = true;
   }
   var t1832 = t2994;
   var t2995;
   if(t1832 !== false) {
    t2995 = t360;
   }
   else {
    t2995 = false;
   }
   return k2146(t2995);
  }
 };
 ___get = t2990;	// set! get
 var t2997 = function (k2147, t363, t364, t365) {	// put!
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t2999 = t364.name;
   var t2998 = (t363) .plist[ (t2999) ] =  (t365);
   return k2147(t2998);
  }
 };
 ___put_21 = t2997;	// set! put!
 var t3001 = function(K) {
  SPOCK.count(arguments, 'string-append');
  var args = Array.prototype.slice.call(arguments, 1);
  var strs = SPOCK.map(function(x) { return SPOCK.jstring(x); }, args);
  return K(new SPOCK.String(strs));
 };
 ___string_2dappend = t3001;	// set! string-append
 var t3002 = function(K) {
  SPOCK.count(arguments, 'string');
  var str = [];
  var len = arguments.length - 1;
  for(var i = 1; i <= len; ++i) {
   var x = arguments[ i ];
   if(x instanceof SPOCK.Char) str.push(x.character);
   else SPOCK.error('bad argument type - not a character', x);}
  return K(new SPOCK.String(str.join('')));
 };
 ___string = t3002;	// set! string
 var t3003 = function(K) {
  SPOCK.count(arguments, 'string->list');
  var str = SPOCK.jstring(arguments[ 1 ]);
  var lst = null;
  var len = str.length;
  for(var i = len - 1; i >= 0; --i)
   lst = new SPOCK.Pair(new SPOCK.Char(str.charAt(i)), lst);
  return K(lst);
 };
 ___string_2d_3elist = t3003;	// set! string->list
 var t3004 = function(K) {
  SPOCK.count(arguments, 'list->string');
  var lst = arguments[ 1 ];
  var str = [];
  while(lst instanceof SPOCK.Pair) {
   str.push(SPOCK.check(lst.car, SPOCK.Char).character);
   lst = lst.cdr;}
  return K(new SPOCK.String(str.join('')));
 };
 ___list_2d_3estring = t3004;	// set! list->string
 var t3005 = function(K) {
  SPOCK.count(arguments, 'make-string');
  var n = SPOCK.check(arguments[ 1 ], 'number', 'make-string');
  var c = arguments[ 2 ];
  var a = new Array(n);
  if(c !== undefined)
   c = SPOCK.check(c, SPOCK.Char, 'make-string').character;
  else c = ' ';
  for(var i = 0; i < n; ++i) a[ i ] = c;
  return K(new SPOCK.String(a.join('')));
 };
 ___make_2dstring = t3005;	// set! make-string
 var t3006 = function(K) {
  SPOCK.count(arguments, 'string-ref');
  var str = arguments[ 1 ];
  var i = SPOCK.check(arguments[ 2 ], 'number', 'string-ref');
  if(typeof str === 'string')
   return K(new SPOCK.Char(str.charAt(i)));
  else if(str instanceof SPOCK.String) {
   var parts = str.parts;
   for(var p in parts) {
    var l = parts[ p ].length;
    if(i <= l) return K(new SPOCK.Char(parts[ p ].charAt(i)));
    else i -= l;}
   SPOCK.error('`string-ref\' out of range', str, i);}
 };
 ___string_2dref = t3006;	// set! string-ref
 var t3007 = function(K) {
  SPOCK.count(arguments, 'string-set!');
  var str = arguments[ 1 ];
  var i = SPOCK.check(arguments[ 2 ], 'number', 'string-set!');
  var c = SPOCK.check(arguments[ 3 ], SPOCK.Char, 'string-set!');
  if(typeof str === 'string')
   SPOCK.error('argument to `string-set!\' is not a mutable string', str);
  else if(str instanceof SPOCK.String) {
   var parts = str.parts;
   for(var p in parts) {
    var part = parts[ p ];
    var l = part.length;
    if(i <= l) {
     parts[ p ] = part.substring(0, i) + c.character + part.substring(i + 1);
     return K(undefined);
    } else i -= l;}
   SPOCK.error('`string-set!\' out of range', str, i);}
 };
 ___string_2dset_21 = t3007;	// set! string-set!
 var t3008 = function (k2148, t366, t367, t368) {	// string-copy
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t3009 = SPOCK.jstring(t366);
   var t369 = t3009;
   var t3010 = t367 === undefined;
   var t1833 = t3010;
   var t3011;
   if(t1833 !== false) {
    t3011 = 0;
   }
   else {
    t3011 = t367;
   }
   var t371 = t3011;
   var t3012 = t368 === undefined;
   var t1834 = t3012;
   var t3013;
   if(t1834 !== false) {
    var t3014 = t369.length;
    t3013 = t3014;
   }
   else {
    t3013 = t368;
   }
   var t373 = t3013;
   var t3015 = t369.slice(t371, t373);
   var t375 = t3015;
   var t3016 = new SPOCK.String(t375);
   return k2148(t3016);
  }
 };
 ___string_2dcopy = t3008;	// set! string-copy
 var t3018 = function (k2149, t376, t377, t378, t379) {	// string-fill!
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t3019;
  if(true !== false) {
   t3019 = false;
  }
  else {
   t3019 = true;
  }
  var t1835 = t3019;
  var t3020 = function (t2150) {	// t2151
   var t3021 = t376.normalize();
   var t381 = t3021;
   var t382 = t377;
   var t3022 = t378 === undefined;
   var t1836 = t3022;
   var t3023;
   if(t1836 !== false) {
    t3023 = 0;
   }
   else {
    t3023 = t378;
   }
   var t383 = t3023;
   var t3024 = t379 === undefined;
   var t1837 = t3024;
   var t3025;
   if(t1837 !== false) {
    var t3026 = t381.length;
    t3025 = t3026;
   }
   else {
    t3025 = t379;
   }
   var t385 = t3025;
   var t3027 = function(K) {
    SPOCK.count(arguments);
    var str = arguments[ 1 ];
    var from = arguments[ 2 ];
    var to = arguments[ 3 ];
    var c = arguments[ 4 ];
    var snew = new Array(to - from);
    for(var i in snew) snew[ i ] = c;
    str.parts = [str.parts[ 0 ].substring(0, from), snew.join(''),
     str.parts[ 0 ].substring(to)];
    return K(str);
   };
   return t3027(k2149, t376, t383, t385, t382);
  };
  var t2151 = t3020;
  var t3029;
  if(t1835 !== false) {
   return ____25error(t2151, "bad argument type - not a mutable string", t376);
   t3029 = undefined;
  }
  else {
   return t2151(undefined);
   t3029 = undefined;
  }
 };
 ___string_2dfill_21 = t3018;	// set! string-fill!
 var t3032 = function(K) {
  SPOCK.count(arguments, 'vector');
  return K(Array.prototype.slice.call(arguments, 1));
 };
 ___vector = t3032;	// set! vector
 var t3033 = function(K) {
  SPOCK.count(arguments, 'make-vector');
  var n = SPOCK.check(arguments[ 1 ], 'number', 'make-vector');
  var x = arguments[ 2 ];
  var a = new Array(n);
  if(x !== undefined) {
   for(var i = 0; i < n; ++i) a[ i ] = x;}
  return K(a);
 };
 ___make_2dvector = t3033;	// set! make-vector
 var t3034 = function(K) {
  SPOCK.count(arguments, 'vector->list');
  var vec = SPOCK.check(arguments[ 1 ], Array, 'vector->list');
  var lst = null;
  var len = vec.length;
  for(var i = len - 1; i >= 0; --i)
   lst = new SPOCK.Pair(vec[ i ], lst);
  return K(lst);
 };
 ___vector_2d_3elist = t3034;	// set! vector->list
 var t3035 = function(K) {
  SPOCK.count(arguments, 'list->vector');
  var lst = arguments[ 1 ];
  var vec = [];
  while(lst instanceof SPOCK.Pair) {
   vec.push(lst.car);
   lst = lst.cdr;}
  return K(vec);
 };
 ___list_2d_3evector = t3035;	// set! list->vector
 var t3036 = function(K) {
  SPOCK.count(arguments, 'vector-fill!');
  var vec = SPOCK.check(arguments[ 1 ], Array, 'vector-fill!');
  var x = arguments[ 2 ];
  var from = arguments[ 3 ];
  var to = arguments[ 4 ];
  if(from === undefined) from = 0;
  if(to === undefined) to = vec.length;
  for(var i = from; i < to; ++i)
   vec[ i ] = x;
  return K(undefined);
 };
 ___vector_2dfill_21 = t3036;	// set! vector-fill!
 var t3037 = function(K) {
  SPOCK.count(arguments, 'string->number');
  var str = SPOCK.jstring(arguments[ 1 ]);
  var base = arguments[ 2 ];
  if(!base) base = 10;
  else base = SPOCK.check(base, 'number', 'string->number');
  var m = true, neg = 1;
  while(m) {
   m = str.match(/^#[eboxid]/);
   if(m) {
    switch(str[ 1 ]) {
    case 'e':
    case 'i': break;
    case 'd': base = 10; break;
    case 'o': base = 8; break;
    case 'x': base = 16; break;
    case 'b': base = 2; break;
    default: return K(false);}
    str = str.substring(2);}}
  switch(str[ 0 ]) {
  case '-': neg = -1; str = str.substring(1); break;
  case '+': str = str.substring(1);}
  var num, den = false;
  if((m = str.match(/^([^\/]+)\/(.+)$/))) {
    str = m[ 1 ];
    den = m[ 2 ];}
  function num3(s) {
   var tr = null;
   switch(base) {
   case 2: tr = /^[0-1]+$/; break;
   case 8: tr = /^[0-7]+$/; break;
   case 10: tr = /^[#0-9]*\.?[#0-9]+([esdfl][-+]?[0-9]+)?$/; break;
   case 16: tr = /^[0-9a-fA-F]+$/;}
   if(tr && !s.match(tr)) return false;
   var s2 = s.replace(/#/g, '0');
   if(base === 10) s2 = parseFloat(s2.replace(/[esdfl]/g, 'e'));
   else if(s2 !== s) return false;
   else s2 = parseInt(s2, base);
   return isNaN(s2) ? false : s2;}
  if((num = num3(str)) === false) return K(false);
  if(den && !(den = num3(den))) return K(false);
  return K(neg * num / (den || 1));
 };
 ___string_2d_3enumber = t3037;	// set! string->number
 var t3038 = function(K) {
  SPOCK.count(arguments, '%show');
  arguments[ 2 ].write(arguments[ 1 ]);
  return K(undefined);
 };
 ____25show = t3038;	// set! %show
 var t3039 = function(K) {
  SPOCK.count(arguments, '%fetch');
  return K(arguments[ 2 ].read(arguments[ 1 ]));
 };
 ____25fetch = t3039;	// set! %fetch
 var t3040 = function (k2152, t387) {	// newline
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t3041 = t387 === undefined;
  var t1838 = t3041;
  var t3042;
  if(t1838 !== false) {
   t3042 = SPOCK.stdout;
  }
  else {
   t3042 = t387;
  }
  return ____25show(k2152, "\n", t3042);
 };
 ___newline = t3040;	// set! newline
 var t3044 = function (k2153, t392) {	// read-char
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t3045 = function (t2154) {
   var t393 = t2154;
   var t400 = SPOCK.EOF;
   var t3046 = (t393) === (t400);
   var t1840 = t3046;
   var t3047;
   if(t1840 !== false) {
    t3047 = t393;
   }
   else {
    var t3048 = new SPOCK.Char(t393);
    t3047 = t3048;
   }
   return k2153(t3047);
  };
  var t3050 = t392 === undefined;
  var t1839 = t3050;
  var t3051;
  if(t1839 !== false) {
   t3051 = SPOCK.stdin;
  }
  else {
   t3051 = t392;
  }
  return ____25fetch(t3045, 1, t3051);
 };
 ___read_2dchar = t3044;	// set! read-char
 var t3053 = function (k2155, t401, t402) {	// write-char
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t3054 = t401.character;
  var t3055 = t402 === undefined;
  var t1841 = t3055;
  var t3056;
  if(t1841 !== false) {
   t3056 = SPOCK.stdout;
  }
  else {
   t3056 = t402;
  }
  return ____25show(k2155, t3054, t3056);
 };
 ___write_2dchar = t3053;	// set! write-char
 var t407 = ___read_2dchar;
 var t3058 = function (k2156, t408) {	// t407
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t3059 = function (t2157) {
   var t409 = t2157;
   var t413 = SPOCK.EOF;
   var t3060 = (t409) === (t413);
   var t410 = t3060;
   var t3061;
   if(t410 !== false) {
    t3061 = false;
   }
   else {
    t3061 = true;
   }
   var t1842 = t3061;
   var t3062;
   if(t1842 !== false) {
    var t3064 = t409.character;
    var t3063 = (t408) .peeked =  (t3064);
    t3062 = t3063;
   }
   else {
    t3062 = undefined;
   }
   return k2156(t409);
  };
  return t407(t3059, t408);
 };
 ___peek_2dchar = t3058;	// set! peek-char
 var t3067 = function (k2158, t414) {	// char-ready?
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t3068 = t414.ready();
   return k2158(t3068);
  }
 };
 ___char_2dready_3f = t3067;	// set! char-ready?
 var t3070 = function (k2159, t418, t419, t420) {	// %print-hook
  var r = SPOCK.count(arguments);
  if(r) return r;
  return ____25show(k2159, "#<unknown object>", t419);
 };
 ____25print_2dhook = t3070;	// set! %print-hook
 var t3072 = function (k2160, t421, t422) {	// display
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t3073 = t422 === undefined;
  var t1843 = t3073;
  var t3074;
  if(t1843 !== false) {
   t3074 = SPOCK.stdout;
  }
  else {
   t3074 = t422;
  }
  var t423 = t3074;
  var t428 = undefined;
  var t3075 = function (k2161, t429) {	// t428
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t3077 = null;
   var t3076 = (t429) === (t3077);
   var t1844 = t3076;
   var t3078;
   if(t1844 !== false) {
    return ____25show(k2161, "()", t423);
    t3078 = undefined;
   }
   else {
    var t3080 = typeof(t429);
    var t434 = t3080;
    var t3081 = (t434) === ("number");
    var t1845 = t3081;
    var t3082;
    if(t1845 !== false) {
     var t3085 = undefined === undefined;
     var t1846 = t3085;
     var t3086;
     if(t1846 !== false) {
      t3086 = 10;
     }
     else {
      t3086 = undefined;
     }
     var t3084 = t429.toString(t3086);
     var t3083 = new SPOCK.String(t3084);
     var t436 = t3083;
     var t3087 = SPOCK.jstring(t436);
     return ____25show(k2161, t3087, t423);
     t3082 = undefined;
    }
    else {
     var t3089 = typeof(t429);
     var t442 = t3089;
     var t3090 = (t442) === ("string");
     var t441 = t3090;
     var t3091;
     if(t441 !== false) {
      t3091 = t441;
     }
     else {
      var t3092 = (t429) instanceof SPOCK.String ;
      t3091 = t3092;
     }
     var t1847 = t3091;
     var t3093;
     if(t1847 !== false) {
      var t3094 = SPOCK.jstring(t429);
      return ____25show(k2161, t3094, t423);
      t3093 = undefined;
     }
     else {
      var t3096 = (t429) instanceof SPOCK.Symbol ;
      var t1848 = t3096;
      var t3097;
      if(t1848 !== false) {
       var t3098 = t429.name;
       return ____25show(k2161, t3098, t423);
       t3097 = undefined;
      }
      else {
       var t3100 = (t429) instanceof SPOCK.Char ;
       var t1849 = t3100;
       var t3101;
       if(t1849 !== false) {
        var t3102 = t429.character;
        return ____25show(k2161, t3102, t423);
        t3101 = undefined;
       }
       else {
        var t448 = SPOCK.EOF;
        var t3104 = (t429) === (t448);
        var t1850 = t3104;
        var t3105;
        if(t1850 !== false) {
         return ____25show(k2161, "#<eof>", t423);
         t3105 = undefined;
        }
        else {
         var t3107 = typeof(t429);
         var t450 = t3107;
         var t3108 = (t450) === ("function");
         var t1851 = t3108;
         var t3109;
         if(t1851 !== false) {
          return ____25show(k2161, "#<procedure>", t423);
          t3109 = undefined;
         }
         else {
          var t3111 = (t429) === (true);
          var t453 = t3111;
          var t3112;
          if(t453 !== false) {
           t3112 = t453;
          }
          else {
           var t3113 = (t429) === (false);
           t3112 = t3113;
          }
          var t1852 = t3112;
          var t3114;
          if(t1852 !== false) {
           var t3115;
           if(t429 !== false) {
            t3115 = "#t";
           }
           else {
            t3115 = "#f";
           }
           return ____25show(k2161, t3115, t423);
           t3114 = undefined;
          }
          else {
           var t3117 = (t429) instanceof SPOCK.Pair ;
           var t1853 = t3117;
           var t3118;
           if(t1853 !== false) {
            var t3119 = function (t2162) {
             var t459 = undefined;
             var t3120 = function (k2163, t460) {	// t459
              var r = SPOCK.count(arguments);
              if(r) return r;
              var t3122 = null;
              var t3121 = (t460) === (t3122);
              var t1854 = t3121;
              var t3123;
              if(t1854 !== false) {
               return ____25show(k2163, ")", t423);
               t3123 = undefined;
              }
              else {
               var t3125 = (t460) instanceof SPOCK.Pair ;
               var t464 = t3125;
               var t3126;
               if(t464 !== false) {
                t3126 = false;
               }
               else {
                t3126 = true;
               }
               var t1855 = t3126;
               var t3127;
               if(t1855 !== false) {
                var t3128 = function (t2164) {
                 var t3129 = function (t2165) {
                  return ____25show(k2163, ")", t423);
                 };
                 return t428(t3129, t460);
                };
                return ____25show(t3128, " . ", t423);
                t3127 = undefined;
               }
               else {
                var t467 = t429;
                var t3133 = (t467) === (t460);
                var t466 = t3133;
                var t3134;
                if(t466 !== false) {
                 t3134 = false;
                }
                else {
                 t3134 = true;
                }
                var t1856 = t3134;
                var t3135 = function (t2166) {	// t2168
                 var t3136 = function (t2167) {
                  var t3137 = t460.cdr;
                  return t459(k2163, t3137);
                 };
                 var t3139 = t460.car;
                 return t428(t3136, t3139);
                };
                var t2168 = t3135;
                var t3141;
                if(t1856 !== false) {
                 return ____25show(t2168, " ", t423);
                 t3141 = undefined;
                }
                else {
                 return t2168(undefined);
                 t3141 = undefined;
                }
                t3127 = t3141;
               }
               t3123 = t3127;
              }
             };
             t459 = t3120;	// set! t459
             return t459(k2161, t429);
            };
            return ____25show(t3119, "(", t423);
            t3118 = undefined;
           }
           else {
            var t3146 = t429 === undefined;
            var t1857 = t3146;
            var t3147;
            if(t1857 !== false) {
             return ____25show(k2161, "#<undefined>", t423);
             t3147 = undefined;
            }
            else {
             var t3149 = (t429) instanceof Array ;
             var t1858 = t3149;
             var t3150;
             if(t1858 !== false) {
              var t3151 = t429.length;
              var t474 = t3151;
              var t3152 = function (t2169) {
               var t475 = undefined;
               var t3153 = function (k2170, t476) {	// t475
                var r = SPOCK.count(arguments);
                if(r) return r;
                var t3155 = (t476) >= (t474);
                var t3154;
                if(t3155 !== false) {
                 return ____25show(k2170, ")", t423);
                 t3154 = undefined;
                }
                else {
                 var t3157 = (t476) === (0);
                 var t477 = t3157;
                 var t3158;
                 if(t477 !== false) {
                  t3158 = false;
                 }
                 else {
                  t3158 = true;
                 }
                 var t1859 = t3158;
                 var t3159 = function (t2171) {	// t2173
                  var t3160 = function (t2172) {
                   var t3161 =  1+ (t476);
                   return t475(k2170, t3161);
                  };
                  var t3163 = (t429) [ (t476) ] ;
                  return t428(t3160, t3163);
                 };
                 var t2173 = t3159;
                 var t3165;
                 if(t1859 !== false) {
                  return ____25show(t2173, " ", t423);
                  t3165 = undefined;
                 }
                 else {
                  return t2173(undefined);
                  t3165 = undefined;
                 }
                 t3154 = t3165;
                }
               };
               t475 = t3153;	// set! t475
               return t475(k2161, 0);
              };
              return ____25show(t3152, "#(", t423);
              t3150 = undefined;
             }
             else {
              var t3171 = (t429) instanceof SPOCK.Port ;
              var t3170;
              if(t3171 !== false) {
               var t3172 = SPOCK.stringify(t429);
               return ____25show(k2161, t3172, t423);
               t3170 = undefined;
              }
              else {
               var t3175 = (t429) instanceof SPOCK.Promise ;
               var t3174;
               if(t3175 !== false) {
                return ____25show(k2161, "#<promise>", t423);
                t3174 = undefined;
               }
               else {
                var t3177 = typeof(t429);
                var t481 = t3177;
                var t3178 = ("object") === (t481);
                var t1860 = t3178;
                var t3179;
                if(t1860 !== false) {
                 return ____25print_2dhook(k2161, t429, t423, false);
                 t3179 = undefined;
                }
                else {
                 return ____25show(k2161, "#<unknown object>", t423);
                 t3179 = undefined;
                }
                t3174 = t3179;
               }
               t3170 = t3174;
              }
              t3150 = t3170;
             }
             t3147 = t3150;
            }
            t3118 = t3147;
           }
           t3114 = t3118;
          }
          t3109 = t3114;
         }
         t3105 = t3109;
        }
        t3101 = t3105;
       }
       t3097 = t3101;
      }
      t3093 = t3097;
     }
     t3082 = t3093;
    }
    t3078 = t3082;
   }
  };
  t428 = t3075;	// set! t428
  return t428(k2160, t421);
 };
 ___display = t3072;	// set! display
 var t482 = ___display;
 var t483 = undefined;
 var t3183 = function(K) {
  SPOCK.count(arguments, 't483');
  var str = arguments[ 1 ];
  var a = [];
  var len = str.length;
  for(var i = 0; i < len; ++i) {
   var c = str.charAt(i);
   switch(c) {
   case '\n': a.push('\n'); break;
   case '\t': a.push('\t'); break;
   case '\r': a.push('\r'); break;
   case '\"': a.push('\"'); break;
   case '\\': a.push('\\'); break;
   default: a.push(c);}}
  return K(a.join(''));
 };
 t483 = t3183;	// set! t483
 var t3184 = function (k2174, t484, t485) {
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t3185 = t485 === undefined;
  var t1861 = t3185;
  var t3186;
  if(t1861 !== false) {
   t3186 = SPOCK.stdout;
  }
  else {
   t3186 = t485;
  }
  var t486 = t3186;
  var t491 = undefined;
  var t3187 = function (k2175, t492) {	// t491
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t3188 = typeof(t492);
   var t495 = t3188;
   var t3189 = (t495) === ("string");
   var t494 = t3189;
   var t3190;
   if(t494 !== false) {
    t3190 = t494;
   }
   else {
    var t3191 = (t492) instanceof SPOCK.String ;
    t3190 = t3191;
   }
   var t1862 = t3190;
   var t3192;
   if(t1862 !== false) {
    var t3193 = function (t2176) {
     var t3194 = function (t2178) {
      var t3195 = function (t2177) {
       return ____25show(k2175, "\"", t486);
      };
      return ____25show(t3195, t2178, t486);
     };
     var t3198 = SPOCK.jstring(t492);
     return t483(t3194, t3198);
    };
    return ____25show(t3193, "\"", t486);
    t3192 = undefined;
   }
   else {
    var t3201 = (t492) instanceof SPOCK.Char ;
    var t1863 = t3201;
    var t3202;
    if(t1863 !== false) {
     var t3203 = function (t2179) {
      var t3204 = t492.character;
      var t498 = t3204;
      var t3206 = SPOCK.eqvp(t498, "\n");
      var t1864 = t3206;
      var t3207;
      if(t1864 !== false) {
       t3207 = true;
      }
      else {
       t3207 = false;
      }
      var t3205;
      if(t3207 !== false) {
       t3205 = "newline";
      }
      else {
       var t3209 = SPOCK.eqvp(t498, "\r");
       var t1865 = t3209;
       var t3210;
       if(t1865 !== false) {
        t3210 = true;
       }
       else {
        t3210 = false;
       }
       var t3208;
       if(t3210 !== false) {
        t3208 = "return";
       }
       else {
        var t3212 = SPOCK.eqvp(t498, "\t");
        var t1866 = t3212;
        var t3213;
        if(t1866 !== false) {
         t3213 = true;
        }
        else {
         t3213 = false;
        }
        var t3211;
        if(t3213 !== false) {
         t3211 = "tab";
        }
        else {
         var t3215 = SPOCK.eqvp(t498, " ");
         var t1867 = t3215;
         var t3216;
         if(t1867 !== false) {
          t3216 = true;
         }
         else {
          t3216 = false;
         }
         var t3214;
         if(t3216 !== false) {
          t3214 = "space";
         }
         else {
          t3214 = t498;
         }
         t3211 = t3214;
        }
        t3208 = t3211;
       }
       t3205 = t3208;
      }
      return ____25show(k2175, t3205, t486);
     };
     return ____25show(t3203, "#\\", t486);
     t3202 = undefined;
    }
    else {
     var t3219 = (t492) instanceof SPOCK.Pair ;
     var t1868 = t3219;
     var t3220;
     if(t1868 !== false) {
      var t3221 = function (t2180) {
       var t509 = undefined;
       var t3222 = function (k2181, t510) {	// t509
        var r = SPOCK.count(arguments);
        if(r) return r;
        var t3224 = null;
        var t3223 = (t510) === (t3224);
        var t1869 = t3223;
        var t3225;
        if(t1869 !== false) {
         return ____25show(k2181, ")", t486);
         t3225 = undefined;
        }
        else {
         var t3227 = (t510) instanceof SPOCK.Pair ;
         var t514 = t3227;
         var t3228;
         if(t514 !== false) {
          t3228 = false;
         }
         else {
          t3228 = true;
         }
         var t1870 = t3228;
         var t3229;
         if(t1870 !== false) {
          var t3230 = function (t2182) {
           var t3231 = function (t2183) {
            return ____25show(k2181, ")", t486);
           };
           return t491(t3231, t510);
          };
          return ____25show(t3230, " . ", t486);
          t3229 = undefined;
         }
         else {
          var t517 = t492;
          var t3235 = (t517) === (t510);
          var t516 = t3235;
          var t3236;
          if(t516 !== false) {
           t3236 = false;
          }
          else {
           t3236 = true;
          }
          var t1871 = t3236;
          var t3237 = function (t2184) {	// t2186
           var t3238 = function (t2185) {
            var t3239 = t510.cdr;
            return t509(k2181, t3239);
           };
           var t3241 = t510.car;
           return t491(t3238, t3241);
          };
          var t2186 = t3237;
          var t3243;
          if(t1871 !== false) {
           return ____25show(t2186, " ", t486);
           t3243 = undefined;
          }
          else {
           return t2186(undefined);
           t3243 = undefined;
          }
          t3229 = t3243;
         }
         t3225 = t3229;
        }
       };
       t509 = t3222;	// set! t509
       return t509(k2175, t492);
      };
      return ____25show(t3221, "(", t486);
      t3220 = undefined;
     }
     else {
      var t3248 = (t492) instanceof Array ;
      var t1872 = t3248;
      var t3249;
      if(t1872 !== false) {
       var t3250 = t492.length;
       var t523 = t3250;
       var t3251 = function (t2187) {
        var t524 = undefined;
        var t3252 = function (k2188, t525) {	// t524
         var r = SPOCK.count(arguments);
         if(r) return r;
         var t3254 = (t525) >= (t523);
         var t3253;
         if(t3254 !== false) {
          return ____25show(k2188, ")", t486);
          t3253 = undefined;
         }
         else {
          var t3256 = (t525) === (0);
          var t526 = t3256;
          var t3257;
          if(t526 !== false) {
           t3257 = false;
          }
          else {
           t3257 = true;
          }
          var t1873 = t3257;
          var t3258 = function (t2189) {	// t2191
           var t3259 = function (t2190) {
            var t3260 =  1+ (t525);
            return t524(k2188, t3260);
           };
           var t3262 = (t492) [ (t525) ] ;
           return t491(t3259, t3262);
          };
          var t2191 = t3258;
          var t3264;
          if(t1873 !== false) {
           return ____25show(t2191, " ", t486);
           t3264 = undefined;
          }
          else {
           return t2191(undefined);
           t3264 = undefined;
          }
          t3253 = t3264;
         }
        };
        t524 = t3252;	// set! t524
        return t524(k2175, 0);
       };
       return ____25show(t3251, "#(", t486);
       t3249 = undefined;
      }
      else {
       return t482(k2175, t492, t486);
       t3249 = undefined;
      }
      t3220 = t3249;
     }
     t3202 = t3220;
    }
    t3192 = t3202;
   }
  };
  t491 = t3187;	// set! t491
  return t491(k2174, t484);
 };
 ___write = t3184;	// set! write
 var t3271 = function(K) {
  SPOCK.count(arguments, 'apply');
  var proc = arguments[ 1 ];
  var argc = arguments.length;
  var lst = arguments[ argc - 1 ];
  var vec = [K].concat(Array.prototype.slice.call(arguments, 2, argc - 1));
  if(lst instanceof Array) vec = vec.concat(lst);
  else{
   var len = SPOCK.length(lst);
   var vec2 = new Array(len);
   for(var i = 0; lst instanceof SPOCK.Pair; lst = lst.cdr)
    vec2[ i++ ] = lst.car;
   vec = vec.concat(vec2);}
  return proc.apply(SPOCK.global, vec);
 };
 ___apply = t3271;	// set! apply
 var t3272 = function (k2192, t529, t530, t531) {	// for-each
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t531 = SPOCK.rest(arguments, 3);
  var t3274 = null;
  var t3273 = (t531) === (t3274);
  var t1874 = t3273;
  var t3275;
  if(t1874 !== false) {
   var t3276 = (t530) instanceof Array ;
   var t1875 = t3276;
   var t3277;
   if(t1875 !== false) {
    var t3278 = t530.length;
    var t536 = t3278;
    var t538 = undefined;
    var t3279 = function (k2193, t539) {	// t538
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t541 = t536;
     var t3280 = (t539)  >=  (t541);
     var t1876 = t3280;
     var t3281;
     if(t1876 !== false) {
      return k2193(false);
      t3281 = undefined;
     }
     else {
      var t3283 = function (t2194) {
       var t3284 = (t539)  +  (1);
       return t538(k2193, t3284);
      };
      var t542 = t530;
      var t3286 = (t542) [ (t539) ] ;
      return t529(t3283, t3286);
      t3281 = undefined;
     }
    };
    t538 = t3279;	// set! t538
    return t538(k2192, 0);
    t3277 = undefined;
   }
   else {
    var t546 = undefined;
    var t3289 = function (k2195, t547) {	// t546
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t3290 = (t547) instanceof SPOCK.Pair ;
     var t1877 = t3290;
     var t3291;
     if(t1877 !== false) {
      var t3292 = function (t2196) {
       var t3293 = t547.cdr;
       return t546(k2195, t3293);
      };
      var t3295 = t547.car;
      return t529(t3292, t3295);
      t3291 = undefined;
     }
     else {
      return k2195(undefined);
      t3291 = undefined;
     }
    };
    t546 = t3289;	// set! t546
    return t546(k2192, t530);
    t3277 = undefined;
   }
   t3275 = t3277;
  }
  else {
   var t551 = undefined;
   var t3299 = function (k2197, t552) {	// t551
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t554 = undefined;
    var t3300 = function (k2203, t555) {	// t554
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t3302 = null;
     var t3301 = (t555) === (t3302);
     var t1878 = t3301;
     var t3303;
     if(t1878 !== false) {
      var t3304 = null;
      return k2203(t3304);
      t3303 = undefined;
     }
     else {
      var t3306 = t555.car;
      var t559 = t3306;
      var t3307 = (t559) instanceof SPOCK.Pair ;
      var t1879 = t3307;
      var t3308;
      if(t1879 !== false) {
       var t3309 = t559.car;
       var t562 = t3309;
       var t3310 = function (t2204) {
        var t563 = t2204;
        var t3311 = new SPOCK.Pair(t562, t563);
        return k2203(t3311);
       };
       var t3313 = t555.cdr;
       return t554(t3310, t3313);
       t3308 = undefined;
      }
      else {
       return k2203(false);
       t3308 = undefined;
      }
      t3303 = t3308;
     }
    };
    t554 = t3300;	// set! t554
    var t3316 = function (t2198) {
     var t553 = t2198;
     var t3317;
     if(t553 !== false) {
      var t3318 = function (t2199) {
       var t566 = undefined;
       var t3319 = function (k2201, t567) {	// t566
        var r = SPOCK.count(arguments);
        if(r) return r;
        var t3321 = null;
        var t3320 = (t567) === (t3321);
        var t1880 = t3320;
        var t3322;
        if(t1880 !== false) {
         var t3323 = null;
         return k2201(t3323);
         t3322 = undefined;
        }
        else {
         var t3325 = t567.car;
         var t573 = t3325;
         var t3326 = t573.cdr;
         var t571 = t3326;
         var t3327 = function (t2202) {
          var t572 = t2202;
          var t3328 = new SPOCK.Pair(t571, t572);
          return k2201(t3328);
         };
         var t3330 = t567.cdr;
         return t566(t3327, t3330);
         t3322 = undefined;
        }
       };
       t566 = t3319;	// set! t566
       var t3332 = function (t2200) {
        return t551(k2197, t2200);
       };
       return t566(t3332, t552);
      };
      return ___apply(t3318, t529, t553);
      t3317 = undefined;
     }
     else {
      return k2197(undefined);
      t3317 = undefined;
     }
    };
    return t554(t3316, t552);
   };
   t551 = t3299;	// set! t551
   var t3338 = new SPOCK.Pair(t530, t531);
   return t551(k2192, t3338);
   t3275 = undefined;
  }
 };
 ___for_2deach = t3272;	// set! for-each
 var t3340 = function (k2205, t578, t579, t580) {	// map
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t580 = SPOCK.rest(arguments, 3);
  var t3342 = null;
  var t3341 = (t580) === (t3342);
  var t1881 = t3341;
  var t3343;
  if(t1881 !== false) {
   var t3344 = (t579) instanceof Array ;
   var t1882 = t3344;
   var t3345;
   if(t1882 !== false) {
    var t3346 = t579.length;
    var t585 = t3346;
    var t3347 = function (t2206) {
     var t587 = t2206;
     var t588 = undefined;
     var t3348 = function (k2207, t589) {	// t588
      var r = SPOCK.count(arguments);
      if(r) return r;
      var t591 = t585;
      var t3349 = (t589)  >=  (t591);
      var t1883 = t3349;
      var t3350;
      if(t1883 !== false) {
       return k2207(t587);
       t3350 = undefined;
      }
      else {
       var t592 = t587;
       var t593 = t589;
       var t3352 = function (t2209) {
        var t594 = t2209;
        var t3353 = (t592) [ (t593) ] =  (t594);
        var t2208 = t3353;
        var t3354 = (t589)  +  (1);
        return t588(k2207, t3354);
       };
       var t595 = t579;
       var t3356 = (t595) [ (t589) ] ;
       return t578(t3352, t3356);
       t3350 = undefined;
      }
     };
     t588 = t3348;	// set! t588
     return t588(k2205, 0);
    };
    return ___make_2dvector(t3347, t585);
    t3345 = undefined;
   }
   else {
    var t599 = undefined;
    var t3360 = function (k2210, t600) {	// t599
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t3361 = (t600) instanceof SPOCK.Pair ;
     var t1884 = t3361;
     var t3362;
     if(t1884 !== false) {
      var t3363 = function (t2211) {
       var t602 = t2211;
       var t3364 = function (t2212) {
        var t603 = t2212;
        var t3365 = new SPOCK.Pair(t602, t603);
        return k2210(t3365);
       };
       var t3367 = t600.cdr;
       return t599(t3364, t3367);
      };
      var t3369 = t600.car;
      return t578(t3363, t3369);
      t3362 = undefined;
     }
     else {
      var t3371 = null;
      return k2210(t3371);
      t3362 = undefined;
     }
    };
    t599 = t3360;	// set! t599
    return t599(k2205, t579);
    t3345 = undefined;
   }
   t3343 = t3345;
  }
  else {
   var t606 = undefined;
   var t3374 = function (k2213, t607) {	// t606
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t609 = undefined;
    var t3375 = function (k2220, t610) {	// t609
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t3377 = null;
     var t3376 = (t610) === (t3377);
     var t1885 = t3376;
     var t3378;
     if(t1885 !== false) {
      var t3379 = null;
      return k2220(t3379);
      t3378 = undefined;
     }
     else {
      var t3381 = t610.car;
      var t614 = t3381;
      var t3382 = (t614) instanceof SPOCK.Pair ;
      var t1886 = t3382;
      var t3383;
      if(t1886 !== false) {
       var t3384 = t614.car;
       var t617 = t3384;
       var t3385 = function (t2221) {
        var t618 = t2221;
        var t3386 = new SPOCK.Pair(t617, t618);
        return k2220(t3386);
       };
       var t3388 = t610.cdr;
       return t609(t3385, t3388);
       t3383 = undefined;
      }
      else {
       return k2220(false);
       t3383 = undefined;
      }
      t3378 = t3383;
     }
    };
    t609 = t3375;	// set! t609
    var t3391 = function (t2214) {
     var t608 = t2214;
     var t3392;
     if(t608 !== false) {
      var t3393 = function (t2215) {
       var t621 = t2215;
       var t623 = undefined;
       var t3394 = function (k2218, t624) {	// t623
        var r = SPOCK.count(arguments);
        if(r) return r;
        var t3396 = null;
        var t3395 = (t624) === (t3396);
        var t1887 = t3395;
        var t3397;
        if(t1887 !== false) {
         var t3398 = null;
         return k2218(t3398);
         t3397 = undefined;
        }
        else {
         var t3400 = t624.car;
         var t630 = t3400;
         var t3401 = t630.cdr;
         var t628 = t3401;
         var t3402 = function (t2219) {
          var t629 = t2219;
          var t3403 = new SPOCK.Pair(t628, t629);
          return k2218(t3403);
         };
         var t3405 = t624.cdr;
         return t623(t3402, t3405);
         t3397 = undefined;
        }
       };
       t623 = t3394;	// set! t623
       var t3407 = function (t2217) {
        var t3408 = function (t2216) {
         var t622 = t2216;
         var t3409 = new SPOCK.Pair(t621, t622);
         return k2213(t3409);
        };
        return t606(t3408, t2217);
       };
       return t623(t3407, t607);
      };
      return ___apply(t3393, t578, t608);
      t3392 = undefined;
     }
     else {
      var t3414 = null;
      return k2213(t3414);
      t3392 = undefined;
     }
    };
    return t609(t3391, t607);
   };
   t606 = t3374;	// set! t606
   var t3417 = new SPOCK.Pair(t579, t580);
   return t606(k2205, t3417);
   t3343 = undefined;
  }
 };
 ___map = t3340;	// set! map
 var t3419 = function (k2222, t637, t638, t639) {	// dynamic-wind
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t3420 = function (t2223) {
   var t3421 = new SPOCK.Pair(t637, t639);
   var t640 = t3421;
   var t641 = SPOCK.dynwinds;
   var t3422 = new SPOCK.Pair(t640, t641);
   SPOCK.dynwinds = t3422
   var t3423 = function (k2224) {
    var t644 = SPOCK.dynwinds;
    var t3424 = t644.cdr;
    SPOCK.dynwinds = t3424
    return t639(k2224);
   };
   return ____25call_2dwith_2dsaved_2dvalues(k2222, t638, t3423);
  };
  return t637(t3420);
 };
 ___dynamic_2dwind = t3419;	// set! dynamic-wind
 var t3428 = function(K) {
  SPOCK.count(arguments, '%call-with-current-continuation');
  var proc = arguments[ 1 ];
  function cont() {
   return K.apply(SPOCK.global, Array.prototype.slice.call(arguments, 1));}
  return proc(K, cont);
 };
 ____25call_2dwith_2dcurrent_2dcontinuation = t3428;	// set! %call-with-current-continuation
 var t645 = undefined;
 var t3429 = function (k2225, t646, t647) {	// t645
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t649 = SPOCK.dynwinds;
  var t3430 = (t649) === (t646);
  var t648 = t3430;
  var t3431;
  if(t648 !== false) {
   return k2225(t648);
   t3431 = undefined;
  }
  else {
   var t3433 = (t647)  <  (0);
   var t1888 = t3433;
   var t3434;
   if(t1888 !== false) {
    var t3435 = function (t2226) {
     var t3436 = t646.car;
     var t654 = t3436;
     var t3437 = t654.car;
     var t3438 = function (t2227) {
      SPOCK.dynwinds = t646
      return k2225(undefined);
     };
     return t3437(t3438);
    };
    var t3441 = t646.cdr;
    var t3442 = (t647)  + 1 ;
    return t645(t3435, t3441, t3442);
    t3434 = undefined;
   }
   else {
    var t658 = SPOCK.dynwinds;
    var t3444 = t658.car;
    var t657 = t3444;
    var t3445 = t657.cdr;
    var t656 = t3445;
    var t659 = SPOCK.dynwinds;
    var t3446 = t659.cdr;
    SPOCK.dynwinds = t3446
    var t3447 = function (t2228) {
     var t3448 = (t647)  - 1 ;
     return t645(k2225, t646, t3448);
    };
    return t656(t3447);
    t3434 = undefined;
   }
   t3431 = t3434;
  }
 };
 t645 = t3429;	// set! t645
 var t3451 = function (k2229, t660) {
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t661 = SPOCK.dynwinds;
  var t3452 = function (k2230, t662) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t3453 = function (k2231, t663) {
    var t663 = SPOCK.rest(arguments, 1);
    var t664 = SPOCK.dynwinds;
    var t667 = t661;
    var t3454 = (t664) === (t667);
    var t665 = t3454;
    var t3455;
    if(t665 !== false) {
     t3455 = false;
    }
    else {
     t3455 = true;
    }
    var t1889 = t3455;
    var t3456 = function (t2232) {	// t2233
     return ___apply(k2231, t662, t663);
    };
    var t2233 = t3456;
    var t3458;
    if(t1889 !== false) {
     var t3459 = SPOCK.length(t664);
     var t668 = t3459;
     var t671 = t661;
     var t3460 = SPOCK.length(t671);
     var t669 = t3460;
     var t3461 = (t668)  -  (t669);
     return t645(t2233, t661, t3461);
     t3458 = undefined;
    }
    else {
     return t2233(undefined);
     t3458 = undefined;
    }
   };
   return t660(k2230, t3453);
  };
  return ____25call_2dwith_2dcurrent_2dcontinuation(k2229, t3452);
 };
 ___call_2dwith_2dcurrent_2dcontinuation = t3451;	// set! call-with-current-continuation
 var t3466 = function (k2234, t672) {	// %get-context
  var r = SPOCK.count(arguments);
  if(r) return r;
  return ___vector(k2234, t672, SPOCK.dynwinds, SPOCK.stdin, SPOCK.stdout, SPOCK.stderr);
 };
 ____25get_2dcontext = t3466;	// set! %get-context
 var t3468 = function(K) {
  SPOCK.count(arguments, '%restore-context');
  var state = arguments[ 1 ];
  SPOCK.dynwinds = state[ 1 ];
  SPOCK.stdin = state[ 2 ];
  SPOCK.stdout = state[ 3 ];
  SPOCK.stderr = state[ 4 ];
  return (state[ 0 ])(undefined);
 };
 ____25restore_2dcontext = t3468;	// set! %restore-context
 var t3469 = function (k2235, t673) {	// suspend
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t3470 = function (k2236, t674) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t3471 = function (t2238) {
    var t3472 = function (t2237) {
     var t3473 = function(K) {
      SPOCK.count(arguments);
      return new SPOCK.Result(undefined);
     };
     return t3473(k2236);
    };
    return t673(t3472, t2238);
   };
   return ____25get_2dcontext(t3471, t674);
  };
  return ____25call_2dwith_2dcurrent_2dcontinuation(k2235, t3470);
 };
 ___suspend = t3469;	// set! suspend
 var t3478 = function (k2239, t675) {	// %make-promise
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t676 = false;
  var t677 = false;
  var t3480 = function (k2240) {	// t677
   var t3481;
   if(t676 !== false) {
    return ___apply(k2240, ___values, t677);
    t3481 = undefined;
   }
   else {
    var t3483 = function (k2241, t678) {
     var t678 = SPOCK.rest(arguments, 1);
     var t3484;
     if(t676 !== false) {
      return ___apply(k2241, ___values, t677);
      t3484 = undefined;
     }
     else {
      t676 = true;	// set! t676
      t677 = t678;	// set! t677
      return ___apply(k2241, ___values, t677);
      t3484 = undefined;
     }
    };
    return ___call_2dwith_2dvalues(k2240, t675, t3483);
    t3481 = undefined;
   }
  };
  var t3479 = new SPOCK.Promise(t3480);
  return k2239(t3479);
 };
 ____25make_2dpromise = t3478;	// set! %make-promise
 var t3489 = function (k2242, t679) {	// force
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t3491 = (t679)  instanceof SPOCK.Promise ;
  var t3490;
  if(t3491 !== false) {
   var t3492 = t679.thunk;
   return t3492(k2242);
   t3490 = undefined;
  }
  else {
   return k2242(t679);
   t3490 = undefined;
  }
 };
 ___force = t3489;	// set! force
 var t680 = ___dynamic_2dwind;
 var t3495 = function (k2243, t681, t682) {	// t680
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t686 = false;
  var t3496 = function (k2244) {
   loop: while(true) {
    t686 = SPOCK.stdin;	// set! t686
    SPOCK.stdin = t681
    return k2244(undefined);
   }
  };
  var t3498 = function (k2245) {
   loop: while(true) {
    SPOCK.stdin = t686
    return k2245(undefined);
   }
  };
  return t680(k2243, t3496, t682, t3498);
 };
 ___with_2dinput_2dfrom_2dport = t3495;	// set! with-input-from-port
 var t687 = ___dynamic_2dwind;
 var t3501 = function (k2246, t688, t689) {	// t687
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t693 = false;
  var t3502 = function (k2247) {
   loop: while(true) {
    t693 = SPOCK.stdout;	// set! t693
    SPOCK.stdout = t688
    return k2247(undefined);
   }
  };
  var t3504 = function (k2248) {
   loop: while(true) {
    SPOCK.stdout = t693
    return k2248(undefined);
   }
  };
  return t687(k2246, t3502, t689, t3504);
 };
 ___with_2doutput_2dto_2dport = t3501;	// set! with-output-to-port
 var t3507 = function(K) {
  SPOCK.count(arguments, '%close-port');
  var port = arguments[ 1 ];
  port.close();
  port.closed = true;
  return K(port);
 };
 ____25close_2dport = t3507;	// set! %close-port
 var t3508 = function(K) {
  SPOCK.count(arguments, 'open-input-file');
  var fn = SPOCK.check(arguments[ 1 ], 'string', 'open-input-file');
  return K(SPOCK.openInputFile(fn));
 };
 ___open_2dinput_2dfile = t3508;	// set! open-input-file
 var t3509 = function(K) {
  SPOCK.count(arguments, 'open-output-file');
  var fn = SPOCK.check(arguments[ 1 ], 'string', 'open-input-file');
  var exp = null;
  if(arguments.length === 3)
   exp = SPOCK.check(arguments[ 2 ], 'number', 'open-input-file');
  return K(SPOCK.openOutputFile(fn, exp));
 };
 ___open_2doutput_2dfile = t3509;	// set! open-output-file
 var t3510 = function (k2249, t694) {	// close-input-port
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t695 = t694;
  return ____25close_2dport(k2249, t695);
 };
 ___close_2dinput_2dport = t3510;	// set! close-input-port
 var t3512 = function (k2250, t699) {	// close-output-port
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t700 = t699;
  return ____25close_2dport(k2250, t700);
 };
 ___close_2doutput_2dport = t3512;	// set! close-output-port
 var t705 = ___open_2dinput_2dfile;
 var t3514 = function (k2251, t708, t709) {	// t705
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t3515 = function (t2252) {
   var t710 = t2252;
   var t3516 = function (k2253) {
    return t709(k2253, t710);
   };
   var t3518 = function (k2254) {
    return ___close_2dinput_2dport(k2254, t710);
   };
   return ____25call_2dwith_2dsaved_2dvalues(k2251, t3516, t3518);
  };
  return t705(t3515, t708);
 };
 ___call_2dwith_2dinput_2dfile = t3514;	// set! call-with-input-file
 var t712 = ___open_2doutput_2dfile;
 var t3522 = function (k2255, t715, t716) {	// t712
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t3523 = function (t2256) {
   var t717 = t2256;
   var t3524 = function (k2257) {
    return t716(k2257, t717);
   };
   var t3526 = function (k2258) {
    return ___close_2doutput_2dport(k2258, t717);
   };
   return ____25call_2dwith_2dsaved_2dvalues(k2255, t3524, t3526);
  };
  return t712(t3523, t715);
 };
 ___call_2dwith_2doutput_2dfile = t3522;	// set! call-with-output-file
 var t718 = ___with_2dinput_2dfrom_2dport;
 var t719 = ___open_2dinput_2dfile;
 var t723 = ___close_2dinput_2dport;
 var t3530 = function (k2259, t724, t725) {	// t723
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t3531 = function (t2260) {
   var t726 = t2260;
   var t3532 = function (k2261) {
    var t3533 = function (k2262) {
     return t723(k2262, t726);
    };
    return ____25call_2dwith_2dsaved_2dvalues(k2261, t725, t3533);
   };
   return t718(k2259, t726, t3532);
  };
  return t719(t3531, t724);
 };
 ___with_2dinput_2dfrom_2dfile = t3530;	// set! with-input-from-file
 var t727 = ___with_2doutput_2dto_2dport;
 var t728 = ___open_2doutput_2dfile;
 var t732 = ___close_2doutput_2dport;
 var t3538 = function (k2263, t733, t734) {	// t732
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t3539 = function (t2264) {
   var t735 = t2264;
   var t3540 = function (k2265) {
    var t3541 = function (k2266) {
     return t732(k2266, t735);
    };
    return ____25call_2dwith_2dsaved_2dvalues(k2265, t734, t3541);
   };
   return t727(k2263, t735, t3540);
  };
  return t728(t3539, t733);
 };
 ___with_2doutput_2dto_2dfile = t3538;	// set! with-output-to-file
 var t3546 = function (k2267, t736) {	// open-input-string
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t737 = undefined;
  var t3547 = function(K) {
   SPOCK.count(arguments, 't737');
   var buffer = arguments[ 1 ];
   var pos = 0;
   var len = buffer.length;
   function read(n) {
    if(pos >= len) return SPOCK.EOF;
    var str = buffer.substring(pos, pos + n);
    pos += n;
    return str;}
   return K(new SPOCK.Port('input', { read: read }));
  };
  t737 = t3547;	// set! t737
  var t3548 = SPOCK.jstring(t736);
  return t737(k2267, t3548);
 };
 ___open_2dinput_2dstring = t3546;	// set! open-input-string
 var t3550 = function(K) {
  SPOCK.count(arguments, 'open-output-string');
  var buffer = [];
  function write(s) { buffer.push(s); }
  var port = new SPOCK.Port('output', { write: write });
  port.buffer = buffer;
  port.isStringPort = true;
  return K(port);
 };
 ___open_2doutput_2dstring = t3550;	// set! open-output-string
 var t3551 = function (k2268, t739) {	// get-output-string
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t3552 = t739.isStringPort;
   var t742 = t3552;
   var t3553 = t742 === undefined;
   var t741 = t3553;
   var t3554;
   if(t741 !== false) {
    t3554 = false;
   }
   else {
    t3554 = true;
   }
   var t1890 = t3554;
   var t3555;
   if(t1890 !== false) {
    var t3557 = t739.buffer;
    var t3556 = t3557.join("");
    var t744 = t3556;
    var t3558 = new SPOCK.String(t744);
    var t743 = t3558;
    var t3559 = (t739) .buffer = [] ;
    t3555 = t743;
   }
   else {
    var t3560 = SPOCK.error("bad argument type - not a string port", t739);
    t3555 = t3560;
   }
   return k2268(t3555);
  }
 };
 ___get_2doutput_2dstring = t3551;	// set! get-output-string
 var t3562 = function (k2269, t745, t746) {	// with-input-from-string
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t3563 = function (t2270) {
   var t747 = t2270;
   return ___with_2dinput_2dfrom_2dport(k2269, t747, t746);
  };
  return ___open_2dinput_2dstring(t3563, t745);
 };
 ___with_2dinput_2dfrom_2dstring = t3562;	// set! with-input-from-string
 var t3566 = function (k2271, t748) {	// with-output-to-string
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t3567 = function (t2272) {
   var t749 = t2272;
   var t3568 = function (t2273) {
    return ___get_2doutput_2dstring(k2271, t749);
   };
   return ___with_2doutput_2dto_2dport(t3568, t749, t748);
  };
  return ___open_2doutput_2dstring(t3567);
 };
 ___with_2doutput_2dto_2dstring = t3566;	// set! with-output-to-string
 var t750 = ___read_2dchar;
 var t751 = ___reverse;
 var t752 = ___peek_2dchar;
 var t753 = ___list_2d_3evector;
 var t754 = ___list_2d_3estring;
 var t3572 = function (k2274) {	// t755
  loop: while(true) {
   return k2274(SPOCK.stdin);
  }
 };
 var t755 = t3572;
 var t756 = ___string_2d_3enumber;
 var t3574 = function (k2275, t757) {	// t756
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t3575 = t757 === undefined;
  var t1891 = t3575;
  var t3576 = function (t2276) {	// t2333
   var t758 = t2276;
   var t760 = undefined;
   var t761 = undefined;
   var t762 = undefined;
   var t763 = undefined;
   var t764 = undefined;
   var t765 = undefined;
   var t766 = undefined;
   var t767 = undefined;
   var t3577 = function (k2277, t768) {	// t760
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t3578 = function (t2278) {
     var t769 = t2278;
     var t3579;
     if(t769 !== false) {
      return k2277(t769);
      t3579 = undefined;
     }
     else {
      return ___string_2d_3esymbol(k2277, t768);
      t3579 = undefined;
     }
    };
    return t756(t3578, t768);
   };
   t760 = t3577;	// set! t760
   var t3583 = function (k2279) {	// t761
    var t3584 = function (t2280) {
     var t770 = t2280;
     var t773 = SPOCK.EOF;
     var t3585 = (t770) === (t773);
     var t1892 = t3585;
     var t3586;
     if(t1892 !== false) {
      return k2279(t770);
      t3586 = undefined;
     }
     else {
      var t774 = t770;
      var t3590 = new SPOCK.Char("#");
      var t3589 = SPOCK.eqvp(t770, t3590);
      var t1893 = t3589;
      var t3591;
      if(t1893 !== false) {
       t3591 = true;
      }
      else {
       t3591 = false;
      }
      var t3588;
      if(t3591 !== false) {
       return t764(k2279);
       t3588 = undefined;
      }
      else {
       var t3595 = new SPOCK.Char("(");
       var t3594 = SPOCK.eqvp(t774, t3595);
       var t1894 = t3594;
       var t3596;
       if(t1894 !== false) {
        t3596 = true;
       }
       else {
        t3596 = false;
       }
       var t3593;
       if(t3596 !== false) {
        var t3597 = new SPOCK.Char(")");
        return t765(k2279, t3597);
        t3593 = undefined;
       }
       else {
        var t3601 = new SPOCK.Char("[");
        var t3600 = SPOCK.eqvp(t774, t3601);
        var t1895 = t3600;
        var t3602;
        if(t1895 !== false) {
         t3602 = true;
        }
        else {
         t3602 = false;
        }
        var t3599;
        if(t3602 !== false) {
         var t3603 = new SPOCK.Char("]");
         return t765(k2279, t3603);
         t3599 = undefined;
        }
        else {
         var t3607 = new SPOCK.Char("{");
         var t3606 = SPOCK.eqvp(t774, t3607);
         var t1896 = t3606;
         var t3608;
         if(t1896 !== false) {
          t3608 = true;
         }
         else {
          t3608 = false;
         }
         var t3605;
         if(t3608 !== false) {
          var t3609 = new SPOCK.Char("}");
          return t765(k2279, t3609);
          t3605 = undefined;
         }
         else {
          var t3613 = new SPOCK.Char(",");
          var t3612 = SPOCK.eqvp(t774, t3613);
          var t1897 = t3612;
          var t3614;
          if(t1897 !== false) {
           t3614 = true;
          }
          else {
           t3614 = false;
          }
          var t3611;
          if(t3614 !== false) {
           var t3615 = function (t2281) {
            var t785 = t2281;
            var t3617 = new SPOCK.Char("@");
            var t3616 = SPOCK.eqvp(t785, t3617);
            var t1898 = t3616;
            var t3618;
            if(t1898 !== false) {
             var t3619 = function (t2283) {
              var t3620 = function (t2282) {
               var t787 = t2282;
               return k2279(t787);
              };
              var t3622 = SPOCK.intern("unquote-splicing");
              return ____25list(t3620, t3622, t2283);
             };
             return t761(t3619);
             t3618 = undefined;
            }
            else {
             var t3625 = function (t2285) {
              var t3626 = function (t2284) {
               var t788 = t2284;
               return k2279(t788);
              };
              var t3628 = SPOCK.intern("unquote");
              return ____25list(t3626, t3628, t2285);
             };
             return t761(t3625);
             t3618 = undefined;
            }
           };
           return t752(t3615, t758);
           t3611 = undefined;
          }
          else {
           var t3634 = new SPOCK.Char("`");
           var t3633 = SPOCK.eqvp(t774, t3634);
           var t1899 = t3633;
           var t3635;
           if(t1899 !== false) {
            t3635 = true;
           }
           else {
            t3635 = false;
           }
           var t3632;
           if(t3635 !== false) {
            var t3636 = function (t2287) {
             var t3637 = function (t2286) {
              var t791 = t2286;
              return k2279(t791);
             };
             var t3639 = SPOCK.intern("quasiquote");
             return ____25list(t3637, t3639, t2287);
            };
            return t761(t3636);
            t3632 = undefined;
           }
           else {
            var t3644 = new SPOCK.Char("'");
            var t3643 = SPOCK.eqvp(t774, t3644);
            var t1900 = t3643;
            var t3645;
            if(t1900 !== false) {
             t3645 = true;
            }
            else {
             t3645 = false;
            }
            var t3642;
            if(t3645 !== false) {
             var t3646 = function (t2289) {
              var t3647 = function (t2288) {
               var t794 = t2288;
               return k2279(t794);
              };
              var t3649 = SPOCK.intern("quote");
              return ____25list(t3647, t3649, t2289);
             };
             return t761(t3646);
             t3642 = undefined;
            }
            else {
             var t3654 = new SPOCK.Char(";");
             var t3653 = SPOCK.eqvp(t774, t3654);
             var t1901 = t3653;
             var t3655;
             if(t1901 !== false) {
              t3655 = true;
             }
             else {
              t3655 = false;
             }
             var t3652;
             if(t3655 !== false) {
              var t3656 = function (t2290) {
               return t761(k2279);
              };
              return t762(t3656);
              t3652 = undefined;
             }
             else {
              var t3661 = new SPOCK.Char("\"");
              var t3660 = SPOCK.eqvp(t774, t3661);
              var t1902 = t3660;
              var t3662;
              if(t1902 !== false) {
               t3662 = true;
              }
              else {
               t3662 = false;
              }
              var t3659;
              if(t3662 !== false) {
               return t766(k2279);
               t3659 = undefined;
              }
              else {
               var t3666 = new SPOCK.Char(")");
               var t3665 = SPOCK.eqvp(t774, t3666);
               var t1903 = t3665;
               var t3667;
               if(t1903 !== false) {
                t3667 = true;
               }
               else {
                var t3669 = new SPOCK.Char("]");
                var t3668 = SPOCK.eqvp(t774, t3669);
                var t1904 = t3668;
                var t3670;
                if(t1904 !== false) {
                 t3670 = true;
                }
                else {
                 var t3672 = new SPOCK.Char("}");
                 var t3671 = SPOCK.eqvp(t774, t3672);
                 var t1905 = t3671;
                 var t3673;
                 if(t1905 !== false) {
                  t3673 = true;
                 }
                 else {
                  t3673 = false;
                 }
                 t3670 = t3673;
                }
                t3667 = t3670;
               }
               var t3664;
               if(t3667 !== false) {
                return ____25error(k2279, "unexpected delimiter", t770);
                t3664 = undefined;
               }
               else {
                var t3675 = (t770) .character.match(/^\s$/) ;
                var t807 = t3675;
                var t3677 = null;
                var t3676 = (t807) === (t3677);
                var t806 = t3676;
                var t3678;
                if(t806 !== false) {
                 t3678 = false;
                }
                else {
                 t3678 = true;
                }
                var t1906 = t3678;
                var t3679;
                if(t1906 !== false) {
                 return t761(k2279);
                 t3679 = undefined;
                }
                else {
                 var t3681 = function (t2293) {
                  var t810 = t2293;
                  var t2292 = t810;
                  var t3682 = function (t2291) {
                   return t760(k2279, t2291);
                  };
                  return t767(t3682, t2292);
                 };
                 return ____25list(t3681, t770);
                 t3679 = undefined;
                }
                t3664 = t3679;
               }
               t3659 = t3664;
              }
              t3652 = t3659;
             }
             t3642 = t3652;
            }
            t3632 = t3642;
           }
           t3611 = t3632;
          }
          t3605 = t3611;
         }
         t3599 = t3605;
        }
        t3593 = t3599;
       }
       t3588 = t3593;
      }
      t3586 = t3588;
     }
    };
    return t750(t3584, t758);
   };
   t761 = t3583;	// set! t761
   var t3687 = function (k2294) {	// t762
    var t3688 = function (t2295) {
     var t811 = t2295;
     var t816 = SPOCK.EOF;
     var t3689 = (t811) === (t816);
     var t813 = t3689;
     var t3690;
     if(t813 !== false) {
      t3690 = t813;
     }
     else {
      var t3692 = new SPOCK.Char("\n");
      var t3691 = t3692.character;
      var t819 = t3691;
      var t3693 = t811.character;
      var t820 = t3693;
      var t3694 = (t819) === (t820);
      t3690 = t3694;
     }
     var t812 = t3690;
     var t3695;
     if(t812 !== false) {
      t3695 = false;
     }
     else {
      t3695 = true;
     }
     var t1907 = t3695;
     var t3696;
     if(t1907 !== false) {
      return t762(k2294);
      t3696 = undefined;
     }
     else {
      return k2294(undefined);
      t3696 = undefined;
     }
    };
    return t750(t3688, t758);
   };
   t762 = t3687;	// set! t762
   var t3700 = function (k2296) {	// t763
    var t3701 = function (t2297) {
     var t821 = t2297;
     var t3702 = (t821) .character.match(/^\s$/) ;
     var t824 = t3702;
     var t3704 = null;
     var t3703 = (t824) === (t3704);
     var t823 = t3703;
     var t3705;
     if(t823 !== false) {
      t3705 = false;
     }
     else {
      t3705 = true;
     }
     var t1908 = t3705;
     var t3706;
     if(t1908 !== false) {
      var t3707 = function (t2298) {
       return t763(k2296);
      };
      return t750(t3707, t758);
      t3706 = undefined;
     }
     else {
      return k2296(t821);
      t3706 = undefined;
     }
    };
    return t752(t3701, t758);
   };
   t763 = t3700;	// set! t763
   var t3712 = function (k2299) {	// t764
    var t3713 = function (t2300) {
     var t827 = t2300;
     var t830 = SPOCK.EOF;
     var t3714 = (t827) === (t830);
     var t1909 = t3714;
     var t3715;
     if(t1909 !== false) {
      return ____25error(k2299, "unexpected EOF after `#'");
      t3715 = undefined;
     }
     else {
      var t831 = t827;
      var t3719 = new SPOCK.Char("t");
      var t3718 = SPOCK.eqvp(t827, t3719);
      var t1910 = t3718;
      var t3720;
      if(t1910 !== false) {
       t3720 = true;
      }
      else {
       var t3722 = new SPOCK.Char("T");
       var t3721 = SPOCK.eqvp(t827, t3722);
       var t1911 = t3721;
       var t3723;
       if(t1911 !== false) {
        t3723 = true;
       }
       else {
        t3723 = false;
       }
       t3720 = t3723;
      }
      var t3717;
      if(t3720 !== false) {
       return k2299(true);
       t3717 = undefined;
      }
      else {
       var t3727 = new SPOCK.Char("f");
       var t3726 = SPOCK.eqvp(t827, t3727);
       var t1912 = t3726;
       var t3728;
       if(t1912 !== false) {
        t3728 = true;
       }
       else {
        var t3730 = new SPOCK.Char("F");
        var t3729 = SPOCK.eqvp(t827, t3730);
        var t1913 = t3729;
        var t3731;
        if(t1913 !== false) {
         t3731 = true;
        }
        else {
         t3731 = false;
        }
        t3728 = t3731;
       }
       var t3725;
       if(t3728 !== false) {
        return k2299(false);
        t3725 = undefined;
       }
       else {
        var t3735 = new SPOCK.Char("(");
        var t3734 = SPOCK.eqvp(t827, t3735);
        var t1914 = t3734;
        var t3736;
        if(t1914 !== false) {
         t3736 = true;
        }
        else {
         t3736 = false;
        }
        var t3733;
        if(t3736 !== false) {
         var t3737 = function (t2301) {
          return t753(k2299, t2301);
         };
         var t3739 = new SPOCK.Char(")");
         return t765(t3737, t3739);
         t3733 = undefined;
        }
        else {
         var t3743 = new SPOCK.Char("%");
         var t3742 = SPOCK.eqvp(t831, t3743);
         var t1915 = t3742;
         var t3744;
         if(t1915 !== false) {
          t3744 = true;
         }
         else {
          var t3746 = new SPOCK.Char("!");
          var t3745 = SPOCK.eqvp(t831, t3746);
          var t1916 = t3745;
          var t3747;
          if(t1916 !== false) {
           t3747 = true;
          }
          else {
           t3747 = false;
          }
          t3744 = t3747;
         }
         var t3741;
         if(t3744 !== false) {
          var t3748 = function (t2304) {
           var t846 = t2304;
           var t2303 = t846;
           var t3749 = function (t2302) {
            return ___string_2d_3esymbol(k2299, t2302);
           };
           return t767(t3749, t2303);
          };
          var t3752 = new SPOCK.Char("#");
          return ____25list(t3748, t827, t3752);
          t3741 = undefined;
         }
         else {
          var t3756 = new SPOCK.Char("\\");
          var t3755 = SPOCK.eqvp(t831, t3756);
          var t1917 = t3755;
          var t3757;
          if(t1917 !== false) {
           t3757 = true;
          }
          else {
           t3757 = false;
          }
          var t3754;
          if(t3757 !== false) {
           var t3758 = function (t2305) {
            var t849 = t2305;
            var t3760 = SPOCK.jstring("newline");
            var t3759 = t3760.toLowerCase();
            var t852 = t3759;
            var t3762 = SPOCK.jstring(t849);
            var t3761 = t3762.toLowerCase();
            var t853 = t3761;
            var t3763 = (t852) === (t853);
            var t1918 = t3763;
            var t3764;
            if(t1918 !== false) {
             var t3765 = new SPOCK.Char("\n");
             return k2299(t3765);
             t3764 = undefined;
            }
            else {
             var t3768 = SPOCK.jstring("tab");
             var t3767 = t3768.toLowerCase();
             var t858 = t3767;
             var t3770 = SPOCK.jstring(t849);
             var t3769 = t3770.toLowerCase();
             var t859 = t3769;
             var t3771 = (t858) === (t859);
             var t1919 = t3771;
             var t3772;
             if(t1919 !== false) {
              var t3773 = new SPOCK.Char("\t");
              return k2299(t3773);
              t3772 = undefined;
             }
             else {
              var t3776 = SPOCK.jstring("space");
              var t3775 = t3776.toLowerCase();
              var t864 = t3775;
              var t3778 = SPOCK.jstring(t849);
              var t3777 = t3778.toLowerCase();
              var t865 = t3777;
              var t3779 = (t864) === (t865);
              var t1920 = t3779;
              var t3780;
              if(t1920 !== false) {
               var t3781 = new SPOCK.Char(" ");
               return k2299(t3781);
               t3780 = undefined;
              }
              else {
               var t3784 = SPOCK.jstring(t849);
               var t3783 = t3784.length;
               var t868 = t3783;
               var t3785 = (0) === (t868);
               var t1921 = t3785;
               var t3786;
               if(t1921 !== false) {
                return ____25error(k2299, "invalid character syntax");
                t3786 = undefined;
               }
               else {
                return ___string_2dref(k2299, t849, 0);
                t3786 = undefined;
               }
               t3780 = t3786;
              }
              t3772 = t3780;
             }
             t3764 = t3772;
            }
           };
           var t3789 = null;
           return t767(t3758, t3789);
           t3754 = undefined;
          }
          else {
           return ____25error(k2299, "invalid `#' syntax", t827);
           t3754 = undefined;
          }
          t3741 = t3754;
         }
         t3733 = t3741;
        }
        t3725 = t3733;
       }
       t3717 = t3725;
      }
      t3715 = t3717;
     }
    };
    return t750(t3713, t758);
   };
   t764 = t3712;	// set! t764
   var t3793 = function (k2306, t873) {	// t765
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t874 = undefined;
    var t3794 = function (k2307, t875) {	// t874
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t3795 = function (t2308) {
      var t876 = t2308;
      var t879 = SPOCK.EOF;
      var t3796 = (t876) === (t879);
      var t1922 = t3796;
      var t3797;
      if(t1922 !== false) {
       return ____25error(k2307, "unexpected EOF while reading list");
       t3797 = undefined;
      }
      else {
       var t881 = t873;
       var t3799 = t876.character;
       var t882 = t3799;
       var t3800 = t881.character;
       var t883 = t3800;
       var t3801 = (t882) === (t883);
       var t1923 = t3801;
       var t3802;
       if(t1923 !== false) {
        var t3803 = function (t2309) {
         return t751(k2307, t875);
        };
        return t750(t3803, t758);
        t3802 = undefined;
       }
       else {
        var t3807 = new SPOCK.Char(".");
        var t3806 = SPOCK.eqvp(t3807, t876);
        var t1924 = t3806;
        var t3808;
        if(t1924 !== false) {
         var t3809 = function (t2310) {
          var t886 = t2310;
          var t3810 = SPOCK.jstring(".");
          var t889 = t3810;
          var t3811 = SPOCK.jstring(t886);
          var t890 = t3811;
          var t3812 = (t889) === (t890);
          var t1925 = t3812;
          var t3813;
          if(t1925 !== false) {
           var t3814 = function (t2311) {
            var t893 = t2311;
            var t3815 = function (t2312) {
             var t3816 = function (t2313) {
              var t894 = t2313;
              var t895 = t873;
              var t3817 = SPOCK.eqvp(t894, t895);
              var t1926 = t3817;
              var t3818;
              if(t1926 !== false) {
               var t3819 = function (t2314) {
                return ___append(k2307, t2314, t893);
               };
               return t751(t3819, t875);
               t3818 = undefined;
              }
              else {
               return ____25error(k2307, "missing closing delimiter", t873);
               t3818 = undefined;
              }
             };
             return t750(t3816, t758);
            };
            return t763(t3815);
           };
           return t761(t3814);
           t3813 = undefined;
          }
          else {
           var t3826 = function (t2316) {
            var t896 = t2316;
            var t3827 = new SPOCK.Pair(t896, undefined);
            var t2315 = t3827;
            return t874(k2307, t2315, t875);
           };
           return t760(t3826, t886);
           t3813 = undefined;
          }
         };
         var t3830 = null;
         return t767(t3809, t3830);
         t3808 = undefined;
        }
        else {
         var t3832 = function (t2318) {
          var t898 = t2318;
          var t3833 = new SPOCK.Pair(t898, t875);
          var t2317 = t3833;
          return t874(k2307, t2317);
         };
         return t761(t3832);
         t3808 = undefined;
        }
        t3802 = t3808;
       }
       t3797 = t3802;
      }
     };
     return t763(t3795);
    };
    t874 = t3794;	// set! t874
    var t3837 = null;
    return t874(k2306, t3837);
   };
   t765 = t3793;	// set! t765
   var t3839 = function (k2319) {	// t766
    var t900 = undefined;
    var t3840 = function (k2320, t901) {	// t900
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t3841 = function (t2321) {
      var t902 = t2321;
      var t905 = SPOCK.EOF;
      var t3842 = (t902) === (t905);
      var t1927 = t3842;
      var t3843;
      if(t1927 !== false) {
       return ____25error(k2320, "unexpected EOF while reading string");
       t3843 = undefined;
      }
      else {
       var t3846 = new SPOCK.Char("\"");
       var t3845 = t3846.character;
       var t908 = t3845;
       var t3847 = t902.character;
       var t909 = t3847;
       var t3848 = (t908) === (t909);
       var t1928 = t3848;
       var t3849;
       if(t1928 !== false) {
        var t3850 = function (t2322) {
         return t754(k2320, t2322);
        };
        return t751(t3850, t901);
        t3849 = undefined;
       }
       else {
        var t3854 = new SPOCK.Char("\\");
        var t3853 = t3854.character;
        var t912 = t3853;
        var t3855 = t902.character;
        var t913 = t3855;
        var t3856 = (t912) === (t913);
        var t1929 = t3856;
        var t3857;
        if(t1929 !== false) {
         var t3858 = function (t2323) {
          var t914 = t2323;
          var t917 = SPOCK.EOF;
          var t3859 = (t914) === (t917);
          var t1930 = t3859;
          var t3860;
          if(t1930 !== false) {
           return ____25error(k2320, "unexpected EOF while reading string");
           t3860 = undefined;
          }
          else {
           var t3864 = new SPOCK.Char("n");
           var t3863 = SPOCK.eqvp(t914, t3864);
           var t1931 = t3863;
           var t3865;
           if(t1931 !== false) {
            t3865 = true;
           }
           else {
            t3865 = false;
           }
           var t3862;
           if(t3865 !== false) {
            var t3867 = new SPOCK.Char("\n");
            var t3866 = new SPOCK.Pair(t3867, t901);
            return t900(k2320, t3866);
            t3862 = undefined;
           }
           else {
            var t3871 = new SPOCK.Char("t");
            var t3870 = SPOCK.eqvp(t914, t3871);
            var t1932 = t3870;
            var t3872;
            if(t1932 !== false) {
             t3872 = true;
            }
            else {
             t3872 = false;
            }
            var t3869;
            if(t3872 !== false) {
             var t3874 = new SPOCK.Char("\t");
             var t3873 = new SPOCK.Pair(t3874, t901);
             return t900(k2320, t3873);
             t3869 = undefined;
            }
            else {
             var t3876 = new SPOCK.Pair(t914, t901);
             return t900(k2320, t3876);
             t3869 = undefined;
            }
            t3862 = t3869;
           }
           t3860 = t3862;
          }
         };
         return t750(t3858, t758);
         t3857 = undefined;
        }
        else {
         var t3879 = new SPOCK.Pair(t902, t901);
         return t900(k2320, t3879);
         t3857 = undefined;
        }
        t3849 = t3857;
       }
       t3843 = t3849;
      }
     };
     return t750(t3841, t758);
    };
    t900 = t3840;	// set! t900
    var t3882 = null;
    return t900(k2319, t3882);
   };
   t766 = t3839;	// set! t766
   var t3884 = function (k2324, t931) {	// t767
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t932 = undefined;
    var t3885 = function (k2325, t933) {	// t932
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t3886 = function (t2326) {
      var t934 = t2326;
      var t938 = SPOCK.EOF;
      var t3887 = (t934) === (t938);
      var t935 = t3887;
      var t3888 = function (t2327) {	// t2331
       var t1933 = t2327;
       var t3889;
       if(t1933 !== false) {
        var t3890 = function (t2328) {
         return t754(k2325, t2328);
        };
        return t751(t3890, t933);
        t3889 = undefined;
       }
       else {
        var t3893 = function (t2330) {
         var t945 = t2330;
         var t3894 = new SPOCK.Pair(t945, t933);
         var t2329 = t3894;
         return t932(k2325, t2329);
        };
        return t750(t3893, t758);
        t3889 = undefined;
       }
      };
      var t2331 = t3888;
      var t3897;
      if(t935 !== false) {
       return t2331(t935);
       t3897 = undefined;
      }
      else {
       var t3899 = function (t2332) {
        var t939 = t2332;
        var t3900;
        if(t939 !== false) {
         t3900 = t939;
        }
        else {
         var t3901 = (t934) .character.match(/^\s$/) ;
         var t942 = t3901;
         var t3903 = null;
         var t3902 = (t942) === (t3903);
         var t941 = t3902;
         var t3904;
         if(t941 !== false) {
          t3904 = false;
         }
         else {
          t3904 = true;
         }
         t3900 = t3904;
        }
        return t2331(t3900);
       };
       var t3906 = new SPOCK.Pair(new SPOCK.Char("{"), new SPOCK.Pair(new SPOCK.Char("}"), new SPOCK.Pair(new SPOCK.Char("("), new SPOCK.Pair(new SPOCK.Char(")"), new SPOCK.Pair(new SPOCK.Char("["), new SPOCK.Pair(new SPOCK.Char("]"), new SPOCK.Pair(new SPOCK.Char(";"), new SPOCK.Pair(new SPOCK.Char("\""), null))))))));
       return ___memv(t3899, t934, t3906);
       t3897 = undefined;
      }
     };
     return t752(t3886, t758);
    };
    t932 = t3885;	// set! t932
    return t932(k2324, t931);
   };
   t767 = t3884;	// set! t767
   return t761(k2275);
  };
  var t2333 = t3576;
  var t3911;
  if(t1891 !== false) {
   return t755(t2333);
   t3911 = undefined;
  }
  else {
   return t2333(t757);
   t3911 = undefined;
  }
 };
 ___read = t3574;	// set! read
 var t3914 = function (k2334, t947, t948) {	// load
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t3916 = SPOCK.jstring(t947);
   var t3917 = t948 === undefined;
   var t950 = t3917;
   var t3918;
   if(t950 !== false) {
    t3918 = false;
   }
   else {
    t3918 = true;
   }
   var t1934 = t3918;
   var t3919;
   if(t1934 !== false) {
    var t3920 = SPOCK.callback(t948);
    t3919 = t3920;
   }
   else {
    t3919 = false;
   }
   var t3915 = SPOCK.load(t3916, t3919);
   return k2334(t3915);
  }
 };
 ___load = t3914;	// set! load
 var t3922 = function(K) {
  SPOCK.count(arguments, '%error');
  SPOCK.error.apply(SPOCK.global, Array.prototype.slice.call(arguments, 1));
 };
 ____25error = t3922;	// set! %error
 ___error = ____25error;	// set! error
 var t3923 = function (k2335, t952) {	// exit
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t3925 = t952 === undefined;
   var t1935 = t3925;
   var t3926;
   if(t1935 !== false) {
    t3926 = 0;
   }
   else {
    t3926 = t952;
   }
   var t3924 = SPOCK.exit(t3926);
   return k2335(t3924);
  }
 };
 ___exit = t3923;	// set! exit
 var t3928 = function (k2336, t954) {	// milliseconds
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t3929 = (new Date()).getTime();
  var t955 = t3929;
  var t3930 = t954 === undefined;
  var t1936 = t3930;
  var t3931;
  if(t1936 !== false) {
   return k2336(t955);
   t3931 = undefined;
  }
  else {
   var t3933 = function (t2337) {
    var t3934 = (new Date()).getTime();
    var t958 = t3934;
    var t3935 = (t958) - (t955);
    return k2336(t3935);
   };
   return t954(t3933);
   t3931 = undefined;
  }
 };
 ___milliseconds = t3928;	// set! milliseconds
 var t3938 = function (k2338, t959) {	// print
  var t959 = SPOCK.rest(arguments, 1);
  var t3939 = function (t2339) {
   return ___newline(k2338);
  };
  return ___for_2deach(t3939, ___display, t959);
 };
 ___print = t3938;	// set! print
 var t3942 = function (k2340, t960) {	// o
  var t960 = SPOCK.rest(arguments, 1);
  var t3944 = null;
  var t3943 = (t960) === (t3944);
  var t1937 = t3943;
  var t3945;
  if(t1937 !== false) {
   var t3946 = function (k2341, t964) {
    var r = SPOCK.count(arguments);
    if(r) return r;
    loop: while(true) {
     return k2341(t964);
    }
   };
   return k2340(t3946);
   t3945 = undefined;
  }
  else {
   var t965 = undefined;
   var t3949 = function (k2342, t966) {	// t965
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t3950 = t966.car;
    var t967 = t3950;
    var t3951 = t966.cdr;
    var t968 = t3951;
    var t3953 = null;
    var t3952 = (t968) === (t3953);
    var t1938 = t3952;
    var t3954;
    if(t1938 !== false) {
     t3954 = t967;
    }
    else {
     var t3955 = function (k2343, t974) {
      var r = SPOCK.count(arguments);
      if(r) return r;
      var t3956 = function (t2345) {
       var t3957 = function (t2344) {
        return t967(k2343, t2344);
       };
       return t2345(t3957, t974);
      };
      return t965(t3956, t968);
     };
     t3954 = t3955;
    }
    return k2342(t3954);
   };
   t965 = t3949;	// set! t965
   return t965(k2340, t960);
   t3945 = undefined;
  }
 };
 ___o = t3942;	// set! o
 var t3963 = function(K) {
  SPOCK.count(arguments, '%');
  var o = {};
  for(var i = 1; i < arguments.length; i += 2) {
   var x = arguments[ i ];
   if(typeof x === 'string') o[ x ] = arguments[ i + 1 ];
   else if(x instanceof SPOCK.String)
    o[ x.name ] = arguments[ i + 1 ];
   else SPOCK.error('(%) object key not a string or symbol', x);}
  return K(o);
 };
 ____25 = t3963;	// set! %
 var t3964 = function(K) {
  SPOCK.count(arguments, 'native');
  var func = arguments[ 1 ];
  return K(function(k) {
   var args = Array.prototype.splice.call(arguments, 1);
   return k(func.apply(SPOCK.global, args));});
 };
 ___native = t3964;	// set! native
 var t3965 = function(K) {
  SPOCK.count(arguments, 'native-method');
  var func = arguments[ 1 ];
  return K(function(k) {
   var args = Array.prototype.splice.call(arguments, 2);
   return k(func.apply(arguments[ 1 ], args));});
 };
 ___native_2dmethod = t3965;	// set! native-method
 var t3966 = function(K) {
  SPOCK.count(arguments, 'bind-method');
  var func = arguments[ 1 ];
  var that = arguments[ 2 ];
  return K(function() { return func.apply(that, arguments); });
 };
 ___bind_2dmethod = t3966;	// set! bind-method
 var t3967 = function(K) {
  SPOCK.count(arguments, 'jstring');
  var x = arguments[ 1 ];
  if(typeof x === 'string') return K(x);
  else if(x instanceof SPOCK.String) return K(x.normalize());
  else if(x instanceof SPOCK.Char) return K(x.character);
  else return K(x);
 };
 ___jstring = t3967;	// set! jstring
 var t3968 = SPOCK.intern("common-list-functions");
 return ___require(k2093, t3968);
};
SPOCK.run(t2664);
var t3970 = function (k2346) {
 var t3971 = SPOCK.intern("string-search");
 return ___require(k2346, t3971);
};
SPOCK.run(t3970);
var t3973 = function (k2347) {
 var t3974 = SPOCK.intern("line-i/o");
 return ___require(k2347, t3974);
};
SPOCK.run(t3973);
var t3976 = function (k2348) {
 var t3977 = function (k2349, t975) {	// transpose.script
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t3978 = function (t2350) {
   var t3979;
   if(t2350 !== false) {
    var t3980 = function (t2351) {
     return k2349(true);
    };
    return ___apply(t3980, ___transpose, t975);
    t3979 = undefined;
   }
   else {
    var t3984 = SPOCK.length(t975);
    var t978 = t3984;
    var t3985 = (1)  ===  (t978);
    var t1939 = t3985;
    var t3986;
    if(t1939 !== false) {
     var t3987 = t975.car;
     var t981 = t3987;
     var t3989 = SPOCK.jstring("--help");
     var t3988 = t3989.toLowerCase();
     var t984 = t3988;
     var t3991 = SPOCK.jstring(t981);
     var t3990 = t3991.toLowerCase();
     var t985 = t3990;
     var t3992 = (t984) === (t985);
     t3986 = t3992;
    }
    else {
     t3986 = false;
    }
    var t3983;
    if(t3986 !== false) {
     var t3993 = function (t2352) {
      return k2349(true);
     };
     return transpose.usage(t3993);
     t3983 = undefined;
    }
    else {
     return transpose.usage(k2349);
     t3983 = undefined;
    }
    t3979 = t3983;
   }
  };
  var t3997 = SPOCK.length(t975);
  return ____25_3c_3d(t3978, 2, t3997, 3);
 };
 ___transpose_2escript = t3977;	// set! transpose.script
 var t3999 = function (k2353, t988) {	// ts
  var t988 = SPOCK.rest(arguments, 1);
  return transpose.script(k2353, t988);
 };
 ___ts = t3999;	// set! ts
 var t4001 = function (k2354) {	// transpose.usage
  var t4002 = function (t2355) {
   return k2354(false);
  };
  return ___display(t4002, "\n\nUsage: transpose N SOURCE.abc [DESTINATION.abc]\n       transpose KEY SOURCE.abc [DESTINATION.abc]\n\n  - Transpose ABC-format music by interval N.\n  - Transpose ABC-format melodies for KEY instrument.\n\n  If DESTINATION.abc is not supplied, output is written to standard output.\n\n  When interval N is a positive or negative integer (with no `.'), transpose\n  the melodies and chords upward or downward (respectively) by N semi-tones.\n  Fractions and numbers with decimal points specify `musical intervals':\n\n  Intervals  Semi-tones                 Intervals  Semi-tones\n  -1/2  -2.     -2                      1/12  12.     19\n  -1/3  -3.     -4                      1/11  11.     17\n  -1/4  -4.     -5                      1/10  10.     16\n  -1/5  -5.     -7                      1/9   9.      14\n  -1/6  -6.     -9                      1/8   8.      12 (1 Octave higher)\n  -1/7  -7.     -11                     1/7   7.      11\n  -1/8  -8.     -12 (1 Octave lower)    1/6   6.      9\n  -1/9  -9.     -14                     1/5   5.      7\n  -1/10 -10.    -16                     1/4   4.      5\n  -1/11 -11.    -17                     1/3   3.      4\n  -1/12 -12.    -19                     1/2   2.      2\n\n  KEY may be A through G, optionally followed by sharp (#) or flat (b).\n  For example, \"transpose Bb Reveille.abc\" will produce ABC script with\n  notes appearing two semitones higher than in Reveille.abc.\n\n  Transpose strips out guitar-chords and turns lyrics into comments when\n  transposing for KEYed instruments.  It may sometimes be neccessary to\n  \"transpose +12\" or \"transpose -12\" the result of transposing for an\n  instrument.\n\n               http://Voluntocracy.org/Transpose.html\n", SPOCK.stderr);
 };
 ___transpose_2eusage = t4001;	// set! transpose.usage
 ____2aabc_2dinput_2dport_2a = SPOCK.stdin;	// set! *abc-input-port*
 ____2aabc_2doutput_2dport_2a = SPOCK.stdout;	// set! *abc-output-port*
 ___original_2dsharp_2dtable = false;	// set! original-sharp-table
 ___transpose_2dshift = false;	// set! transpose-shift
 ___transposed_2dsharp_2dtable = false;	// set! transposed-sharp-table
 ___transpose_2dpitch_2ddelta = false;	// set! transpose-pitch-delta
 ___transpose_2dguitar_3f = false;	// set! transpose-guitar?
 ___preserve_2dguitar_3f = false;	// set! preserve-guitar?
 ___preserve_2dwords_3f = false;	// set! preserve-words?
 ___transpose_2descape = false;	// set! transpose-escape
 ____2ahttp_3abyline_2a = "ABC Music <A HREF=http://voluntocracy.org/Music/Transpose.html>Transpose</A> server";	// set! *http:byline*
 var t4005 = function (k2356, t989) {	// transpose-error
  var t989 = SPOCK.rest(arguments, 1);
  var t990 = ____2ascript_2a;
  var t4006;
  if(t990 !== false) {
   t4006 = t990;
  }
  else {
   var t991 = ___transpose_2descape;
   var t4007;
   if(t991 !== false) {
    t4007 = false;
   }
   else {
    t4007 = true;
   }
   t4006 = t4007;
  }
  var t1940 = t4006;
  var t4008;
  if(t1940 !== false) {
   return ___apply(k2356, ___slib_3aerror, t989);
   t4008 = undefined;
  }
  else {
   var t4010 = function (t2361) {
    var t992 = t2361;
    var t2358 = t992;
    var t4011 = function (t2359) {
     var t4012 = function (t2357) {
      return ___transpose_2descape(k2356, t2357);
     };
     return ___append(t4012, t2358, t2359);
    };
    var t4015 = function (k2360, t1000) {
     var r = SPOCK.count(arguments);
     if(r) return r;
     return ___string_2dappend(k2360, "<br>", t1000);
    };
    var t4017 = t989.cdr;
    var t1002 = t4017;
    var t4018 = t1002.cdr;
    return ___map(t4011, t4015, t4018);
   };
   var t4020 = t989.car;
   var t4021 = t989.cdr;
   var t996 = t4021;
   var t4022 = t996.car;
   return ____25list(t4010, t4020, t4022);
   t4008 = undefined;
  }
 };
 ___transpose_2derror = t4005;	// set! transpose-error
 var t4024 = function (k2362, t1006, t1007) {	// transpose
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1007 = SPOCK.rest(arguments, 2);
  var t4025 = function (t2363) {
   var t1008 = t2363;
   var t4026;
   if(t1008 !== false) {
    var t1009 = t1008;
    return ___apply(k2362, ___transpose_2dby, t1009, t1007);
    t4026 = undefined;
   }
   else {
    return ___apply(k2362, ___transpose_2dfor, t1006, t1007);
    t4026 = undefined;
   }
  };
  return ___string_2d_3enumber(t4025, t1006);
 };
 ___transpose = t4024;	// set! transpose
 var t4030 = function (k2364, t1010, t1011) {	// transpose-by
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1011 = SPOCK.rest(arguments, 2);
  var t4031 = function (t2366) {
   ___transpose_2dpitch_2ddelta = t2366;	// set! transpose-pitch-delta
   var t2365 = undefined;
   ___transpose_2dguitar_3f = true;	// set! transpose-guitar?
   ___preserve_2dguitar_3f = true;	// set! preserve-guitar?
   ___preserve_2dwords_3f = true;	// set! preserve-words?
   return ___process_2dfile_2dargs(k2364, t1011);
  };
  return ___interval_2d_3epitch_2ddelta(t4031, t1010);
 };
 ___transpose_2dby = t4030;	// set! transpose-by
 var t4034 = function (k2367, t1012, t1013) {	// transpose-for
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1013 = SPOCK.rest(arguments, 2);
  var t4035 = function (t2371) {
   var t1014 = t2371;
   var t4036 = function (t2372) {
    var t1015 = t2372;
    var t4037 = (t1014)  -  (t1015);
    var t2370 = t4037;
    var t4038 = function (t2369) {
     ___transpose_2dpitch_2ddelta = t2369;	// set! transpose-pitch-delta
     var t2368 = undefined;
     ___transpose_2dguitar_3f = false;	// set! transpose-guitar?
     ___preserve_2dguitar_3f = false;	// set! preserve-guitar?
     ___preserve_2dwords_3f = false;	// set! preserve-words?
     return ___process_2dfile_2dargs(k2367, t1013);
    };
    return ___sym_3amod(t4038, t2370, 12);
   };
   return ___key_2d_3epitch(t4036, t1012);
  };
  return ___key_2d_3epitch(t4035, "C");
 };
 ___transpose_2dfor = t4034;	// set! transpose-for
 var t4043 = function (k2373, t1016) {	// process-file-args
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t4045 = null;
  var t4044 = (t1016) === (t4045);
  var t1941 = t4044;
  var t4046;
  if(t1941 !== false) {
   var t4047 = function (t2374) {
    return ___process_2dabc_2dinput(k2373);
   };
   return ___newline(t4047);
   t4046 = undefined;
  }
  else {
   var t4050 = t1016.car;
   var t1020 = t4050;
   var t1023 = undefined;
   var t4051 = function (k2375, t1024) {	// t1023
    var r = SPOCK.count(arguments);
    if(r) return r;
    ____2aabc_2dinput_2dport_2a = t1024;	// set! *abc-input-port*
    var t1025 = t1016;
    var t1026 = t1025;
    var t4053 = null;
    var t4052 = (t1026) === (t4053);
    var t1942 = t4052;
    var t4054;
    if(t1942 !== false) {
     var t4055 = function (t2376) {
      return ___process_2dabc_2dinput(k2375);
     };
     return ___newline(t4055);
     t4054 = undefined;
    }
    else {
     var t1029 = t1016;
     var t1030 = t1029;
     var t4058 = t1030.car;
     var t1028 = t4058;
     var t4060 = (t1028) instanceof SPOCK.Port ;
     var t4059;
     if(t4060 !== false) {
      var t4061 = t1028.direction;
      var t1035 = t4061;
      var t4062 = ("output") === (t1035);
      t4059 = t4062;
     }
     else {
      t4059 = false;
     }
     var t1032 = t4059;
     var t4063 = function (t2379) {	// t2382
      var t1031 = t2379;
      var t4064;
      if(t1031 !== false) {
       t4064 = false;
      }
      else {
       t4064 = true;
      }
      var t1943 = t4064;
      var t4065 = function (t2377) {	// t2380
       var t4066 = typeof(t1028);
       var t1038 = t4066;
       var t4067 = (t1038) === ("string");
       var t1037 = t4067;
       var t4068;
       if(t1037 !== false) {
        t4068 = t1037;
       }
       else {
        var t4069 = (t1028) instanceof SPOCK.String ;
        t4068 = t4069;
       }
       var t1944 = t4068;
       var t4070;
       if(t1944 !== false) {
        var t4071 = function (k2378, t1040) {
         var r = SPOCK.count(arguments);
         if(r) return r;
         ____2aabc_2doutput_2dport_2a = t1040;	// set! *abc-output-port*
         return ___process_2dabc_2dinput(k2378);
        };
        return ___call_2dwith_2doutput_2dfile(k2375, t1028, t4071);
        t4070 = undefined;
       }
       else {
        ____2aabc_2doutput_2dport_2a = t1028;	// set! *abc-output-port*
        return ___process_2dabc_2dinput(k2375);
        t4070 = undefined;
       }
      };
      var t2380 = t4065;
      var t4075;
      if(t1943 !== false) {
       var t4076 = function (t2381) {
        t1028 = t2381;	// set! t1028
        return t2380(undefined);
       };
       return ___string_2dappend(t4076, t1028, ".abc");
       t4075 = undefined;
      }
      else {
       return t2380(undefined);
       t4075 = undefined;
      }
     };
     var t2382 = t4063;
     var t4080;
     if(t1032 !== false) {
      return t2382(t1032);
      t4080 = undefined;
     }
     else {
      return ___substring_3f(t2382, ".", t1028);
      t4080 = undefined;
     }
     t4054 = t4080;
    }
   };
   t1023 = t4051;	// set! t1023
   var t4083 = t1016.cdr;
   t1016 = t4083;	// set! t1016
   var t4084 = typeof(t1020);
   var t1045 = t4084;
   var t4085 = (t1045) === ("string");
   var t1044 = t4085;
   var t4086;
   if(t1044 !== false) {
    t4086 = t1044;
   }
   else {
    var t4087 = (t1020) instanceof SPOCK.String ;
    t4086 = t4087;
   }
   var t1945 = t4086;
   var t4088;
   if(t1945 !== false) {
    var t4089 = function (t2384) {
     var t1047 = t2384;
     var t4091 = SPOCK.jstring(t1047);
     var t4090 = SPOCK.fileExists(t4091);
     var t1946 = t4090;
     var t4092 = function (t2383) {	// t2385
      return ___call_2dwith_2dinput_2dfile(k2373, t2383, t1023);
     };
     var t2385 = t4092;
     var t4094;
     if(t1946 !== false) {
      return ___string_2dappend(t2385, t1020, ".abc");
      t4094 = undefined;
     }
     else {
      return t2385(t1020);
      t4094 = undefined;
     }
    };
    return ___string_2dappend(t4089, t1020, ".abc");
    t4088 = undefined;
   }
   else {
    return t1023(k2373, t1020);
    t4088 = undefined;
   }
   t4046 = t4088;
  }
 };
 ___process_2dfile_2dargs = t4043;	// set! process-file-args
 var t4099 = function (k2386, t1049) {	// interval->half-steps
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t4100 = SPOCK.eqvp(1, t1049);
  var t1947 = t4100;
  var t4101;
  if(t1947 !== false) {
   return k2386(t1049);
   t4101 = undefined;
  }
  else {
   var t4103 = (-1)  +  (t1049);
   var t1053 = t4103;
   var t4104 = Math.max(0, t1053);
   t1049 = t4104;	// set! t1049
   var t1058 = ___major;
   var t4105 = function (t2388) {
    var t1059 = t2388;
    var t4106 = (t1058) [ (t1059) ] ;
    var t2387 = t4106;
    var t1056 = t2387;
    var t4107 = (t1049)  /  (7);
    var t1064 = t4107;
    var t4109 = (t1064)  < 0 ;
    var t4108;
    if(t4109 !== false) {
     var t4110 = Math.ceil(t1064);
     t4108 = t4110;
    }
    else {
     var t4111 = Math.floor(t1064);
     t4108 = t4111;
    }
    var t1061 = t4108;
    var t4112 = (12)  *  (t1061);
    var t1057 = t4112;
    var t4113 = (t1056)  +  (t1057);
    return k2386(t4113);
   };
   return ___modulo(t4105, t1049, 7);
   t4101 = undefined;
  }
 };
 ___interval_2d_3ehalf_2dsteps = t4099;	// set! interval->half-steps
 var t4116 = function (k2389, t1067) {	// interval->pitch-delta
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t4117 = typeof(t1067);
  var t1070 = t4117;
  var t4118 = (t1070) === ("number");
  var t1068 = t4118;
  var t4119;
  if(t1068 !== false) {
   t4119 = false;
  }
  else {
   t4119 = true;
  }
  var t1948 = t4119;
  var t4120 = function (t2390) {	// t2393
   var t4121 = (t1067) < (0);
   var t1949 = t4121;
   var t4122;
   if(t1949 !== false) {
    t4122 = -1;
   }
   else {
    t4122 = 1;
   }
   var t1072 = t4122;
   var t4123 = Math.abs(t1067);
   var t1075 = t4123;
   var t4124 = Math.round(t1075);
   var t1080 = t4124;
   var t4125 = (t1075) === (t1080);
   var t1950 = t4125;
   var t4126 = function (t2391) {	// t2392
    var t1073 = t2391;
    var t4127 = (t1072)  *  (t1073);
    return k2389(t4127);
   };
   var t2392 = t4126;
   var t4129;
   if(t1950 !== false) {
    return t2392(t1075);
    t4129 = undefined;
   }
   else {
    var t4132 = (t1075) > (0);
    var t1951 = t4132;
    var t4133;
    if(t1951 !== false) {
     var t4134 = (t1075)  <=  (1.0);
     t4133 = t4134;
    }
    else {
     t4133 = false;
    }
    var t4131;
    if(t4133 !== false) {
     var t4135 =  1 /  (t1075);
     var t1084 = t4135;
     var t4137 = (t1084)  < 0 ;
     var t4136;
     if(t4137 !== false) {
      var t4138 = Math.ceil(t1084);
      t4136 = t4138;
     }
     else {
      var t4139 = Math.floor(t1084);
      t4136 = t4139;
     }
     return ___interval_2d_3ehalf_2dsteps(t2392, t4136);
     t4131 = undefined;
    }
    else {
     var t4142 = (t1075)  < 0 ;
     var t4141;
     if(t4142 !== false) {
      var t4143 = Math.ceil(t1075);
      t4141 = t4143;
     }
     else {
      var t4144 = Math.floor(t1075);
      t4141 = t4144;
     }
     return ___interval_2d_3ehalf_2dsteps(t2392, t4141);
     t4131 = undefined;
    }
    t4129 = t4131;
   }
  };
  var t2393 = t4120;
  var t4146;
  if(t1948 !== false) {
   var t4147 = function (t2394) {
    return ___transpose_2derror(t2393, 406, "Interval is not number: ", t2394);
   };
   return ___object_2d_3estring(t4147, t1067);
   t4146 = undefined;
  }
  else {
   return t2393(undefined);
   t4146 = undefined;
  }
 };
 ___interval_2d_3epitch_2ddelta = t4116;	// set! interval->pitch-delta
 var t4151 = function (k2395) {	// process-abc-input
  var t4152 = function (t2400) {
   var t1089 = undefined;
   var t4153 = function (k2396, t1090) {	// t1089
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t1093 = SPOCK.EOF;
    var t4154 = (t1090) === (t1093);
    var t1952 = t4154;
    var t4155;
    if(t1952 !== false) {
     return k2396(false);
     t4155 = undefined;
    }
    else {
     var t4157 = function (t2397) {
      var t4158 = function (t2398) {
       var t4159 = function (t2399) {
        return t1089(k2396, t2399);
       };
       return ___read_2dline(t4159, ____2aabc_2dinput_2dport_2a);
      };
      return ___newline(t4158, ____2aabc_2doutput_2dport_2a);
     };
     return ___transpose_2dline(t4157, t1090);
     t4155 = undefined;
    }
   };
   t1089 = t4153;	// set! t1089
   return t1089(k2395, t2400);
  };
  return ___read_2dline(t4152, ____2aabc_2dinput_2dport_2a);
 };
 ___process_2dabc_2dinput = t4151;	// set! process-abc-input
 var t4166 = function (k2401, t1094) {	// transpose-line
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t4168 = SPOCK.jstring(t1094);
  var t4167 = t4168.length;
  var t1095 = t4167;
  var t4169 = function (t2402) {
   var t4170;
   if(t2402 !== false) {
    return ___transpose_2dmeasures(k2401, t1094);
    t4170 = undefined;
   }
   else {
    var t4172 = new SPOCK.Char("#");
    var t1098 = t4172;
    var t4173 = function (t2446) {
     var t1099 = t2446;
     var t4174 = SPOCK.eqvp(t1098, t1099);
     var t2403 = t4174;
     var t1953 = t2403;
     var t4175;
     if(t1953 !== false) {
      return ___display(k2401, t1094, ____2aabc_2doutput_2dport_2a);
      t4175 = undefined;
     }
     else {
      var t4177 = function (t2404) {
       var t1100 = t2404;
       var t4180 = new SPOCK.Char(":");
       var t4179 = SPOCK.eqvp(t1100, t4180);
       var t1954 = t4179;
       var t4181;
       if(t1954 !== false) {
        t4181 = true;
       }
       else {
        t4181 = false;
       }
       var t4178;
       if(t4181 !== false) {
        var t4182 = function (t2405) {
         var t1103 = t2405;
         var t4185 = new SPOCK.Char("W");
         var t4184 = SPOCK.eqvp(t1103, t4185);
         var t1955 = t4184;
         var t4186;
         if(t1955 !== false) {
          t4186 = true;
         }
         else {
          var t4188 = new SPOCK.Char("w");
          var t4187 = SPOCK.eqvp(t1103, t4188);
          var t1956 = t4187;
          var t4189;
          if(t1956 !== false) {
           t4189 = true;
          }
          else {
           t4189 = false;
          }
          t4186 = t4189;
         }
         var t4183;
         if(t4186 !== false) {
          var t1108 = ___preserve_2dwords_3f;
          var t4190;
          if(t1108 !== false) {
           t4190 = false;
          }
          else {
           t4190 = true;
          }
          var t1957 = t4190;
          var t4191 = function (t2406) {	// t2407
           return ___display(k2401, t1094, ____2aabc_2doutput_2dport_2a);
          };
          var t2407 = t4191;
          var t4193;
          if(t1957 !== false) {
           var t4194 = new SPOCK.Char("%");
           return ___display(t2407, t4194, ____2aabc_2doutput_2dport_2a);
           t4193 = undefined;
          }
          else {
           return t2407(false);
           t4193 = undefined;
          }
          t4183 = t4193;
         }
         else {
          var t4199 = new SPOCK.Char("K");
          var t4198 = SPOCK.eqvp(t1103, t4199);
          var t1958 = t4198;
          var t4200;
          if(t1958 !== false) {
           t4200 = true;
          }
          else {
           t4200 = false;
          }
          var t4197;
          if(t4200 !== false) {
           var t1112 = undefined;
           var t4201 = function (k2441, t1113) {	// t1112
            var r = SPOCK.count(arguments);
            if(r) return r;
            var t1116 = t1095;
            var t4202 = (t1113)  >=  (t1116);
            var t1114 = t4202;
            var t4203 = function (t2442) {	// t2443
             var t1959 = t2442;
             var t4204;
             if(t1959 !== false) {
              return k2441(t1113);
              t4204 = undefined;
             }
             else {
              var t4206 = (1)  +  (t1113);
              return t1112(k2441, t4206);
              t4204 = undefined;
             }
            };
            var t2443 = t4203;
            var t4208;
            if(t1114 !== false) {
             return t2443(t1114);
             t4208 = undefined;
            }
            else {
             var t4210 = function (t2445) {
              var t1118 = t2445;
              var t4211 = (t1118) .character.match(/^\s$/) ;
              var t1120 = t4211;
              var t4213 = null;
              var t4212 = (t1120) === (t4213);
              var t1119 = t4212;
              var t4214;
              if(t1119 !== false) {
               t4214 = false;
              }
              else {
               t4214 = true;
              }
              var t2444 = t4214;
              var t1117 = t2444;
              var t4215;
              if(t1117 !== false) {
               t4215 = false;
              }
              else {
               t4215 = true;
              }
              return t2443(t4215);
             };
             return ___string_2dref(t4210, t1094, t1113);
             t4208 = undefined;
            }
           };
           t1112 = t4201;	// set! t1112
           var t4218 = function (t2408) {
            var t1111 = t2408;
            var t4219 = SPOCK.jstring(t1094);
            var t1129 = t4219;
            var t4221 = t1095 === undefined;
            var t1960 = t4221;
            var t4222;
            if(t1960 !== false) {
             var t4223 = t1129.length;
             t4222 = t4223;
            }
            else {
             t4222 = t1095;
            }
            var t4220 = t1129.substring(t1111, t4222);
            var t1125 = t4220;
            var t4225 = SPOCK.jstring(t1125);
            var t4224 = t4225.length;
            var t1134 = t4224;
            var t4226 = (t1134)  >  (1);
            var t1961 = t4226;
            var t4227 = function (t2439) {	// t2440
             var t1133 = t2439;
             var t4230 = new SPOCK.Char("#");
             var t4229 = SPOCK.eqvp(t1133, t4230);
             var t1962 = t4229;
             var t4231;
             if(t1962 !== false) {
              t4231 = true;
             }
             else {
              var t4233 = new SPOCK.Char("b");
              var t4232 = SPOCK.eqvp(t1133, t4233);
              var t1963 = t4232;
              var t4234;
              if(t1963 !== false) {
               t4234 = true;
              }
              else {
               t4234 = false;
              }
              t4231 = t4234;
             }
             var t4228;
             if(t4231 !== false) {
              t4228 = 2;
             }
             else {
              t4228 = 1;
             }
             var t2409 = t4228;
             var t1132 = t2409;
             var t1143 = undefined;
             var t4235 = function (k2434, t1144) {	// t1143
              var r = SPOCK.count(arguments);
              if(r) return r;
              var t1148 = t1095;
              var t1149 = t1111;
              var t4236 = (t1148)  -  (t1149);
              var t1147 = t4236;
              var t4237 = (t1144)  >=  (t1147);
              var t1145 = t4237;
              var t4238 = function (t2435) {	// t2436
               var t1964 = t2435;
               var t4239;
               if(t1964 !== false) {
                return k2434(t1144);
                t4239 = undefined;
               }
               else {
                var t4241 = (1)  +  (t1144);
                return t1143(k2434, t4241);
                t4239 = undefined;
               }
              };
              var t2436 = t4238;
              var t4243;
              if(t1145 !== false) {
               return t2436(t1145);
               t4243 = undefined;
              }
              else {
               var t4245 = function (t2438) {
                var t1151 = t2438;
                var t4246 = (t1151) .character.match(/^\s$/) ;
                var t1153 = t4246;
                var t4248 = null;
                var t4247 = (t1153) === (t4248);
                var t1152 = t4247;
                var t4249;
                if(t1152 !== false) {
                 t4249 = false;
                }
                else {
                 t4249 = true;
                }
                var t2437 = t4249;
                var t1150 = t2437;
                var t4250;
                if(t1150 !== false) {
                 t4250 = false;
                }
                else {
                 t4250 = true;
                }
                return t2436(t4250);
               };
               return ___string_2dref(t4245, t1125, t1144);
               t4243 = undefined;
              }
             };
             t1143 = t4235;	// set! t1143
             var t4253 = function (t2410) {
              var t4254 = (t1095)  -  (t1111);
              var t1161 = t4254;
              var t4255 = SPOCK.jstring(t1125);
              var t1164 = t4255;
              var t4257 = t1161 === undefined;
              var t1965 = t4257;
              var t4258;
              if(t1965 !== false) {
               var t4259 = t1164.length;
               t4258 = t4259;
              }
              else {
               t4258 = t1161;
              }
              var t4256 = t1164.substring(t1132, t4258);
              var t1158 = t4256;
              var t4260 = function (t2411) {
               var t1167 = t2411;
               var t4261 = SPOCK.jstring(t1125);
               var t1172 = t4261;
               var t4263 = t1132 === undefined;
               var t1966 = t4263;
               var t4264;
               if(t1966 !== false) {
                var t4265 = t1172.length;
                t4264 = t4265;
               }
               else {
                t4264 = t1132;
               }
               var t4262 = t1172.substring(0, t4264);
               var t1168 = t4262;
               var t4266 = function (t2433) {
                var t1176 = t2433;
                var t1177 = ___transpose_2dpitch_2ddelta;
                var t4267 = (t1176)  +  (t1177);
                var t2432 = t4267;
                var t4268 = function (t2412) {
                 var t1175 = t2412;
                 var t4269 = function (t2431) {
                  ___original_2dsharp_2dtable = t2431;	// set! original-sharp-table
                  var t2413 = undefined;
                  var t4270 = function (t2429) {
                   ___transposed_2dsharp_2dtable = t2429;	// set! transposed-sharp-table
                   var t2414 = undefined;
                   var t4271 = SPOCK.length(t1175);
                   var t1181 = t4271;
                   var t4272 = (1)  ===  (t1181);
                   var t1179 = t4272;
                   var t4273 = function (t2425) {	// t2426
                    var t1967 = t2425;
                    var t4274;
                    if(t1967 !== false) {
                     var t4275 = t1175.car;
                     t1175 = t4275;	// set! t1175
                     var t1194 = ___transposed_2dsharp_2dtable;
                     var t4276 = t1194.car;
                     ___transposed_2dsharp_2dtable = t4276;	// set! transposed-sharp-table
                     t4274 = undefined;
                    }
                    else {
                     var t4277 = t1175.cdr;
                     var t1197 = t4277;
                     var t4278 = t1197.car;
                     t1175 = t4278;	// set! t1175
                     var t1201 = ___transposed_2dsharp_2dtable;
                     var t4279 = t1201.cdr;
                     var t1202 = t4279;
                     var t4280 = t1202.car;
                     ___transposed_2dsharp_2dtable = t4280;	// set! transposed-sharp-table
                     t4274 = undefined;
                    }
                    var t2415 = t4274;
                    var t4281 = function (t2424) {
                     var t4282 = function (t2421) {
                      var t1207 = t2421;
                      var t4283 = function (t2423) {
                       var t4284 = function (t2422) {
                        var t1208 = t2422;
                        var t4285 = (t1207)  -  (t1208);
                        var t2419 = t4285;
                        var t1206 = t2419;
                        var t4286 = function (t2420) {
                         ___transpose_2dshift = t2420;	// set! transpose-shift
                         var t2416 = undefined;
                         var t4287 = function (t2417) {
                          var t4288 = function (t2418) {
                           return ___display(k2401, t1158, ____2aabc_2doutput_2dport_2a);
                          };
                          return ___display(t4288, t1175, ____2aabc_2doutput_2dport_2a);
                         };
                         var t4291 = SPOCK.jstring(t1094);
                         var t1223 = t4291;
                         var t4293 = t1111 === undefined;
                         var t1970 = t4293;
                         var t4294;
                         if(t1970 !== false) {
                          var t4295 = t1223.length;
                          t4294 = t4295;
                         }
                         else {
                          t4294 = t1111;
                         }
                         var t4292 = t1223.substring(0, t4294);
                         return ___display(t4287, t4292, ____2aabc_2doutput_2dport_2a);
                        };
                        var t1211 = ___transpose_2dpitch_2ddelta;
                        var t4297 = (t1206)  *  (t1211);
                        var t1209 = t4297;
                        var t4298 = (t1209) < (0);
                        var t1968 = t4298;
                        var t4299;
                        if(t1968 !== false) {
                         var t4300 = (t1206) < (0);
                         var t1969 = t4300;
                         var t4301;
                         if(t1969 !== false) {
                          t4301 = 7;
                         }
                         else {
                          t4301 = -7;
                         }
                         t4299 = t4301;
                        }
                        else {
                         t4299 = 0;
                        }
                        var t1215 = ___transpose_2dpitch_2ddelta;
                        var t4302 = (t1215)  /  (12);
                        var t1217 = t4302;
                        var t4304 = (t1217)  < 0 ;
                        var t4303;
                        if(t4304 !== false) {
                         var t4305 = Math.ceil(t1217);
                         t4303 = t4305;
                        }
                        else {
                         var t4306 = Math.floor(t1217);
                         t4303 = t4306;
                        }
                        var t1214 = t4303;
                        var t4307 = (7)  *  (t1214);
                        return ____25_2b(t4286, t1206, t4299, t4307);
                       };
                       return ___string_2dindex(t4284, "CDEFGAB", t2423);
                      };
                      return ___string_2dref(t4283, t1168, 0);
                     };
                     return ___string_2dindex(t4282, "CDEFGAB", t2424);
                    };
                    return ___string_2dref(t4281, t1175, 0);
                   };
                   var t2426 = t4273;
                   var t4313;
                   if(t1179 !== false) {
                    return t2426(t1179);
                    t4313 = undefined;
                   }
                   else {
                    var t4315 = function (t2427) {
                     var t1183 = t2427;
                     var t4316 = function (t2428) {
                      var t1184 = t2428;
                      var t4317 = (t1183)  <=  (t1184);
                      return t2426(t4317);
                     };
                     var t1187 = ___transposed_2dsharp_2dtable;
                     var t4319 = t1187.cdr;
                     var t1188 = t4319;
                     var t4320 = t1188.car;
                     return ___acc_2dcnt(t4316, t4320);
                    };
                    var t1185 = ___transposed_2dsharp_2dtable;
                    var t4322 = t1185.car;
                    return ___acc_2dcnt(t4315, t4322);
                    t4313 = undefined;
                   }
                  };
                  var t4324 = function (k2430, t1178) {
                   var r = SPOCK.count(arguments);
                   if(r) return r;
                   return ___make_2dsharp_2dtable(k2430, t1178, t1167);
                  };
                  return ___map(t4270, t4324, t1175);
                 };
                 return ___make_2dsharp_2dtable(t4269, t1168, t1167);
                };
                return ___pitch_2d_3ekeys(t4268, t2432);
               };
               return ___key_2d_3epitch(t4266, t1168);
              };
              return ___string_2d_3emode(t4260, t1158);
             };
             return t1143(t4253, t1132);
            };
            var t2440 = t4227;
            var t4332;
            if(t1961 !== false) {
             return ___string_2dref(t2440, t1125, 1);
             t4332 = undefined;
            }
            else {
             return t2440(false);
             t4332 = undefined;
            }
           };
           return t1112(t4218, 2);
           t4197 = undefined;
          }
          else {
           var t4338 = new SPOCK.Char("|");
           var t4337 = SPOCK.eqvp(t1103, t4338);
           var t1971 = t4337;
           var t4339;
           if(t1971 !== false) {
            t4339 = true;
           }
           else {
            var t4341 = new SPOCK.Char(":");
            var t4340 = SPOCK.eqvp(t1103, t4341);
            var t1972 = t4340;
            var t4342;
            if(t1972 !== false) {
             t4342 = true;
            }
            else {
             t4342 = false;
            }
            t4339 = t4342;
           }
           var t4336;
           if(t4339 !== false) {
            return ___transpose_2dmeasures(k2401, t1094);
            t4336 = undefined;
           }
           else {
            return ___display(k2401, t1094, ____2aabc_2doutput_2dport_2a);
            t4336 = undefined;
           }
           t4197 = t4336;
          }
          t4183 = t4197;
         }
        };
        return ___string_2dref(t4182, t1094, 0);
        t4178 = undefined;
       }
       else {
        return ___transpose_2dmeasures(k2401, t1094);
        t4178 = undefined;
       }
      };
      return ___string_2dref(t4177, t1094, 1);
      t4175 = undefined;
     }
    };
    return ___string_2dref(t4173, t1094, 0);
    t4170 = undefined;
   }
  };
  return ____25_3c_3d(t4169, 0, t1095, 1);
 };
 ___transpose_2dline = t4166;	// set! transpose-line
 var t4350 = function (k2447, t1230) {	// acc-cnt
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t4351 = function (t2449) {
   var t4352 = function (t2448) {
    var t1231 = t2448;
    var t4353 = Math.abs(t1231);
    return k2447(t4353);
   };
   return ___apply(t4352, ____25_2b, t2449);
  };
  return ___vector_2d_3elist(t4351, t1230);
 };
 ___acc_2dcnt = t4350;	// set! acc-cnt
 var t4357 = [0, 2, 4, 5, 7, 9, 11];
 ___major = t4357;	// set! major
 var t4358 = [0, 2, 3, 5, 7, 8, 10];
 ___minor = t4358;	// set! minor
 var t4359 = function (k2450, t1232, t1233) {	// sym:mod
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t4360 = function (t2451) {
   var t1234 = t2451;
   var t4361 = (t1233)  /  (2);
   var t1245 = t4361;
   var t4363 = (t1245)  < 0 ;
   var t4362;
   if(t4363 !== false) {
    var t4364 = Math.ceil(t1245);
    t4362 = t4364;
   }
   else {
    var t4365 = Math.floor(t1245);
    t4362 = t4365;
   }
   var t1235 = t4362;
   var t4366 = (t1234)  -  (t1235);
   return k2450(t4366);
  };
  var t4368 = (t1233)  /  (2);
  var t1240 = t4368;
  var t4370 = (t1240)  < 0 ;
  var t4369;
  if(t4370 !== false) {
   var t4371 = Math.ceil(t1240);
   t4369 = t4371;
  }
  else {
   var t4372 = Math.floor(t1240);
   t4369 = t4372;
  }
  var t1236 = t4369;
  var t4373 = (t1236)  +  (t1232);
  return ___modulo(t4360, t4373, t1233);
 };
 ___sym_3amod = t4359;	// set! sym:mod
 var t4375 = function (k2452, t1248, t1249) {	// make-sharp-table
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1250 = undefined;
  var t1251 = undefined;
  var t4376 = function (t2466) {
   t1250 = t2466;	// set! t1250
   var t2453 = undefined;
   var t4377 = function (t2465) {
    t1251 = t2465;	// set! t1251
    var t2454 = undefined;
    var t4378 = function (t2464) {
     var t4379 = function (t2463) {
      var t1253 = undefined;
      var t4380 = function (k2456, t1254, t1255) {	// t1253
       var r = SPOCK.count(arguments);
       if(r) return r;
       var t1258 = t1249;
       var t4381 = t1258.length;
       var t1257 = t4381;
       var t4382 = (t1255)  >=  (t1257);
       var t1973 = t4382;
       var t4383;
       if(t1973 !== false) {
        return k2456(false);
        t4383 = undefined;
       }
       else {
        var t1259 = t1250;
        var t1260 = t1254;
        var t1266 = t1249;
        var t4385 = (t1266) [ (t1255) ] ;
        var t1264 = t4385;
        var t1265 = t1251;
        var t4386 = (t1264)  +  (t1265);
        var t1262 = t4386;
        var t1268 = ___major;
        var t4387 = function (t2462) {
         var t1269 = t2462;
         var t4388 = (t1268) [ (t1269) ] ;
         var t2461 = t4388;
         var t1263 = t2461;
         var t4389 = (t1262)  -  (t1263);
         var t2460 = t4389;
         var t4390 = function (t2459) {
          var t1261 = t2459;
          var t4391 = (t1259) [ (t1260) ] =  (t1261);
          var t2457 = t4391;
          var t4392 = function (t2458) {
           var t4393 = (1)  +  (t1255);
           return t1253(k2456, t2458, t4393);
          };
          var t4395 = (1)  +  (t1254);
          return ___modulo(t4392, t4395, 7);
         };
         return ___sym_3amod(t4390, t2460, 12);
        };
        return ___modulo(t4387, t1254, 7);
        t4383 = undefined;
       }
      };
      t1253 = t4380;	// set! t1253
      var t4399 = function (t2455) {
       return k2452(t1250);
      };
      return t1253(t4399, t2463, 0);
     };
     return ___string_2dindex(t4379, "CDEFGAB", t2464);
    };
    return ___string_2dref(t4378, t1248, 0);
   };
   return ___key_2d_3epitch(t4377, t1248);
  };
  var t4405 = t1249.length;
  return ___make_2dvector(t4376, t4405, false);
 };
 ___make_2dsharp_2dtable = t4375;	// set! make-sharp-table
 var t4407 = function (k2467, t1274) {	// string->mode
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1275 = undefined;
  t1275 = false;	// set! t1275
  var t4408 = function (t2468) {
   var t4409;
   if(t1275 !== false) {
    t4409 = false;
   }
   else {
    t4409 = true;
   }
   var t1279 = t4409;
   var t4410;
   if(t1279 !== false) {
    t4410 = t1279;
   }
   else {
    var t4411 = SPOCK.eqvp(0, t1275);
    t4410 = t4411;
   }
   var t1974 = t4410;
   var t4412;
   if(t1974 !== false) {
    return k2467(___major);
    t4412 = undefined;
   }
   else {
    var t4414 = function (t2469) {
     var t1283 = t2469;
     var t4415 = (t1275) < (0);
     var t1975 = t4415;
     var t4416 = function (t2471) {	// t2473
      var t1284 = t2471;
      var t4417 = t1284.car;
      var t1288 = t4417;
      var t4418 = function (t2470) {
       return ___list_2d_3evector(k2467, t2470);
      };
      var t4420 = function (k2472, t1291) {
       var r = SPOCK.count(arguments);
       if(r) return r;
       var t1293 = t1288;
       var t4421 = (t1291)  -  (t1293);
       return ___modulo(k2472, t4421, 12);
      };
      return ___map(t4418, t4420, t1284);
     };
     var t2473 = t4416;
     var t4424;
     if(t1975 !== false) {
      var t4425 = function (t2474) {
       var t4426 = function (t2475) {
        return ___append(t2473, t2474, t2475);
       };
       var t4428 =  - (t1275);
       return ___butlast(t4426, t1283, t4428);
      };
      var t4430 =  - (t1275);
      return ___last(t4425, t1283, t4430);
      t4424 = undefined;
     }
     else {
      var t4432 = function (t2476) {
       var t4433 = function (t2477) {
        return ___append(t2473, t2476, t2477);
       };
       return ___butnthcdr(t4433, t1275, t1283);
      };
      return ___nthcdr(t4432, t1275, t1283);
      t4424 = undefined;
     }
    };
    return ___vector_2d_3elist(t4414, ___major);
    t4412 = undefined;
   }
  };
  var t4438 = function (k2478, t1276, t1277) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t1278 = t1275;
   var t4439;
   if(t1278 !== false) {
    return k2478(t1278);
    t4439 = undefined;
   }
   else {
    var t4441 = function (t2479) {
     var t4442;
     if(t2479 !== false) {
      t1275 = t1277;	// set! t1275
      return k2478(undefined);
      t4442 = undefined;
     }
     else {
      return k2478(false);
      t4442 = undefined;
     }
    };
    return ___substring_2dci_3f(t4441, t1276, t1274);
    t4439 = undefined;
   }
  };
  var t4446 = new SPOCK.Pair("mix", new SPOCK.Pair("dor", new SPOCK.Pair("phr", new SPOCK.Pair("lyd", new SPOCK.Pair("loc", new SPOCK.Pair("maj", new SPOCK.Pair("ion", new SPOCK.Pair("aeo", new SPOCK.Pair("min", new SPOCK.Pair("m", null))))))))));
  var t4447 = new SPOCK.Pair(-1, new SPOCK.Pair(-1, new SPOCK.Pair(-2, new SPOCK.Pair(1, new SPOCK.Pair(-3, new SPOCK.Pair(0, new SPOCK.Pair(0, new SPOCK.Pair(-2, new SPOCK.Pair(-2, new SPOCK.Pair(-2, null))))))))));
  return ___for_2deach(t4408, t4438, t4446, t4447);
 };
 ___string_2d_3emode = t4407;	// set! string->mode
 var t4449 = function (k2480, t1294) {	// key->pitch
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t4450 = function (t2485) {
   var t4451 = function (t2483) {
    var t1297 = t2483;
    var t4452 = function (t2481) {	// t2484
     var t1295 = t2481;
     var t4453 = function (t2482) {
      var t1296 = t2482;
      var t4454 = (t1295)  +  (t1296);
      return k2480(t4454);
     };
     return ___key_2d_3eacc(t4453, t1294);
    };
    var t2484 = t4452;
    var t4457;
    if(t1297 !== false) {
     return t2484(t1297);
     t4457 = undefined;
    }
    else {
     return ___transpose_2derror(t2484, 406, "Strange key: ", t1294);
     t4457 = undefined;
    }
   };
   return ___string_2dindex(t4451, "CCDDEFFGGAAB", t2485);
  };
  return ___string_2dref(t4450, t1294, 0);
 };
 ___key_2d_3epitch = t4449;	// set! key->pitch
 var t4462 = function (k2486, t1298) {	// pitch->keys
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1299 = undefined;
  var t4463 = null;
  t1299 = t4463;	// set! t1299
  var t4464 = function (t2487) {
   return k2486(t1299);
  };
  var t4466 = function (k2488, t1300) {
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t4467 = function (k2489, t1301) {
    var r = SPOCK.count(arguments);
    if(r) return r;
    var t1302 = undefined;
    var t4468 = function (t2495) {	// t2496
     t1302 = t2495;	// set! t1302
     var t2490 = undefined;
     var t4469 = function (t2491) {
      var t1303 = t2491;
      var t4470 = function (t2494) {
       var t4471 = function (t2493) {
        var t1304 = t2493;
        var t4472 = SPOCK.eqvp(t1303, t1304);
        var t2492 = t4472;
        var t1976 = t2492;
        var t4473;
        if(t1976 !== false) {
         var t1306 = t1299;
         var t4474 = new SPOCK.Pair(t1302, t1306);
         t1299 = t4474;	// set! t1299
         t4473 = undefined;
        }
        else {
         t4473 = undefined;
        }
        return k2489(t4473);
       };
       return ___modulo(t4471, t2494, 12);
      };
      return ___key_2d_3epitch(t4470, t1302);
     };
     return ___modulo(t4469, t1298, 12);
    };
    var t2496 = t4468;
    var t4479;
    if(t1301 !== false) {
     return ___string(t2496, t1300, t1301);
     t4479 = undefined;
    }
    else {
     return ___string(t2496, t1300);
     t4479 = undefined;
    }
   };
   var t4482 = new SPOCK.Pair(new SPOCK.Char("#"), new SPOCK.Pair(false, new SPOCK.Pair(new SPOCK.Char("b"), null)));
   return ___for_2deach(k2488, t4467, t4482);
  };
  var t4484 = new SPOCK.Pair(new SPOCK.Char("A"), new SPOCK.Pair(new SPOCK.Char("B"), new SPOCK.Pair(new SPOCK.Char("C"), new SPOCK.Pair(new SPOCK.Char("D"), new SPOCK.Pair(new SPOCK.Char("E"), new SPOCK.Pair(new SPOCK.Char("F"), new SPOCK.Pair(new SPOCK.Char("G"), null)))))));
  return ___for_2deach(t4464, t4466, t4484);
 };
 ___pitch_2d_3ekeys = t4462;	// set! pitch->keys
 var t4486 = function (k2497, t1307) {	// transpose-measures
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1308 = undefined;
  var t4488 = SPOCK.jstring(t1307);
  var t4487 = t4488.length;
  t1308 = t4487;	// set! t1308
  var t1311 = undefined;
  var t4489 = function (k2498, t1312) {	// t1311
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t1314 = t1308;
   var t4490 = (t1312)  >=  (t1314);
   var t1977 = t4490;
   var t4491;
   if(t1977 !== false) {
    return k2498(false);
    t4491 = undefined;
   }
   else {
    var t4493 = function (t2500) {
     var t1315 = t2500;
     var t4494 = function (t2499) {	// t2501
      var t4495 = (1)  +  (t1312);
      return t1311(k2498, t4495);
     };
     var t2501 = t4494;
     var t4499 = new SPOCK.Char("%");
     var t4498 = SPOCK.eqvp(t1315, t4499);
     var t1978 = t4498;
     var t4500;
     if(t1978 !== false) {
      t4500 = true;
     }
     else {
      t4500 = false;
     }
     var t4497;
     if(t4500 !== false) {
      var t4501 = function (t2502) {
       t1312 = t1308;	// set! t1312
       return t2501(undefined);
      };
      var t1318 = t1307;
      var t1320 = t1308;
      var t1322 = t1318;
      var t4503 = SPOCK.jstring(t1322);
      var t1321 = t4503;
      var t1323 = t1320;
      var t4505 = t1323 === undefined;
      var t1979 = t4505;
      var t4506;
      if(t1979 !== false) {
       var t4507 = t1321.length;
       t4506 = t4507;
      }
      else {
       t4506 = t1320;
      }
      var t4504 = t1321.substring(t1312, t4506);
      return ___display(t4501, t4504, ____2aabc_2doutput_2dport_2a);
      t4497 = undefined;
     }
     else {
      var t4511 = new SPOCK.Char("[");
      var t4510 = SPOCK.eqvp(t1315, t4511);
      var t1980 = t4510;
      var t4512;
      if(t1980 !== false) {
       t4512 = true;
      }
      else {
       t4512 = false;
      }
      var t4509;
      if(t4512 !== false) {
       var t4513 = function (t2503) {
        var t4514 = new SPOCK.Char("|");
        var t1327 = t4514;
        var t4515 = function (t2515) {
         var t1328 = t2515;
         var t4516 = SPOCK.eqvp(t1327, t1328);
         var t2511 = t4516;
         var t1326 = t2511;
         var t4517;
         if(t1326 !== false) {
          t4517 = false;
         }
         else {
          t4517 = true;
         }
         var t1981 = t4517;
         var t4518 = function (t2504) {	// t2512
          var t4519;
          if(t2504 !== false) {
           var t4520 = function (t2505) {
            var t1339 = t2505;
            var t4521;
            if(t1339 !== false) {
             var t1348 = t1307;
             var t4522 = (1)  +  (t1312);
             var t1349 = t4522;
             var t4523 = function (t2510) {
              var t1350 = t2510;
              var t4524 = SPOCK.jstring(t1348);
              var t1353 = t4524;
              var t4526 = t1350 === undefined;
              var t1983 = t4526;
              var t4527;
              if(t1983 !== false) {
               var t4528 = t1353.length;
               t4527 = t4528;
              }
              else {
               t4527 = t1350;
              }
              var t4525 = t1353.substring(t1349, t4527);
              var t2509 = t4525;
              var t4529 = function (t2506) {
               var t4530 = function (t2507) {
                var t4531 = function (t2508) {
                 t1312 = t2508;	// set! t1312
                 return t2501(undefined);
                };
                return ____25_2b(t4531, 1, t1339, t1312);
               };
               var t4534 = new SPOCK.Char("]");
               return ___display(t4530, t4534, ____2aabc_2doutput_2dport_2a);
              };
              return ___transpose_2dline(t4529, t2509);
             };
             return ____25_2b(t4523, 1, t1339, t1312);
             t4521 = undefined;
            }
            else {
             return t2501(false);
             t4521 = undefined;
            }
           };
           var t1340 = t1307;
           var t4539 = (1)  +  (t1312);
           var t1341 = t4539;
           var t1342 = t1308;
           var t1346 = t1340;
           var t4540 = SPOCK.jstring(t1346);
           var t1345 = t4540;
           var t1347 = t1342;
           var t4542 = t1347 === undefined;
           var t1982 = t4542;
           var t4543;
           if(t1982 !== false) {
            var t4544 = t1345.length;
            t4543 = t4544;
           }
           else {
            t4543 = t1342;
           }
           var t4541 = t1345.substring(t1341, t4543);
           var t4545 = new SPOCK.Char("]");
           return ___string_2dindex(t4520, t4541, t4545);
           t4519 = undefined;
          }
          else {
           return t2501(undefined);
           t4519 = undefined;
          }
         };
         var t2512 = t4518;
         var t4548;
         if(t1981 !== false) {
          var t4549 = function (t2514) {
           var t1332 = t2514;
           var t4550 = (t1332) .character.match(/^\d$/) ;
           var t1336 = t4550;
           var t4552 = null;
           var t4551 = (t1336) === (t4552);
           var t1335 = t4551;
           var t4553;
           if(t1335 !== false) {
            t4553 = false;
           }
           else {
            t4553 = true;
           }
           var t2513 = t4553;
           var t1331 = t2513;
           var t4554;
           if(t1331 !== false) {
            t4554 = false;
           }
           else {
            t4554 = true;
           }
           return t2512(t4554);
          };
          var t4556 = (1)  +  (t1312);
          return ___string_2dref(t4549, t1307, t4556);
          t4548 = undefined;
         }
         else {
          return t2512(false);
          t4548 = undefined;
         }
        };
        var t4559 = (1)  +  (t1312);
        return ___string_2dref(t4515, t1307, t4559);
       };
       var t4561 = new SPOCK.Char("[");
       return ___display(t4513, t4561, ____2aabc_2doutput_2dport_2a);
       t4509 = undefined;
      }
      else {
       var t4565 = new SPOCK.Char("\"");
       var t4564 = SPOCK.eqvp(t1315, t4565);
       var t1984 = t4564;
       var t4566;
       if(t1984 !== false) {
        t4566 = true;
       }
       else {
        t4566 = false;
       }
       var t4563;
       if(t4566 !== false) {
        var t4567 = function (t2516) {
         var t1358 = t2516;
         var t4568;
         if(t1358 !== false) {
          var t1367 = t1307;
          var t4569 = (1)  +  (t1312);
          var t1368 = t4569;
          var t4570 = function (t2520) {
           var t1369 = t2520;
           var t4571 = SPOCK.jstring(t1367);
           var t1372 = t4571;
           var t4573 = t1369 === undefined;
           var t1986 = t4573;
           var t4574;
           if(t1986 !== false) {
            var t4575 = t1372.length;
            t4574 = t4575;
           }
           else {
            t4574 = t1369;
           }
           var t4572 = t1372.substring(t1368, t4574);
           var t2519 = t4572;
           var t4576 = function (t2517) {
            var t4577 = function (t2518) {
             t1312 = t2518;	// set! t1312
             return t2501(undefined);
            };
            return ____25_2b(t4577, 1, t1358, t1312);
           };
           return ___transpose_2dguitar_2dchord(t4576, t2519);
          };
          return ____25_2b(t4570, 1, t1358, t1312);
          t4568 = undefined;
         }
         else {
          return t2501(false);
          t4568 = undefined;
         }
        };
        var t1359 = t1307;
        var t4583 = (1)  +  (t1312);
        var t1360 = t4583;
        var t1361 = t1308;
        var t1365 = t1359;
        var t4584 = SPOCK.jstring(t1365);
        var t1364 = t4584;
        var t1366 = t1361;
        var t4586 = t1366 === undefined;
        var t1985 = t4586;
        var t4587;
        if(t1985 !== false) {
         var t4588 = t1364.length;
         t4587 = t4588;
        }
        else {
         t4587 = t1361;
        }
        var t4585 = t1364.substring(t1360, t4587);
        var t4589 = new SPOCK.Char("\"");
        return ___string_2dindex(t4567, t4585, t4589);
        t4563 = undefined;
       }
       else {
        var t4593 = new SPOCK.Char("^");
        var t4592 = SPOCK.eqvp(t1315, t4593);
        var t1987 = t4592;
        var t4594;
        if(t1987 !== false) {
         t4594 = true;
        }
        else {
         var t4596 = new SPOCK.Char("_");
         var t4595 = SPOCK.eqvp(t1315, t4596);
         var t1988 = t4595;
         var t4597;
         if(t1988 !== false) {
          t4597 = true;
         }
         else {
          var t4599 = new SPOCK.Char("=");
          var t4598 = SPOCK.eqvp(t1315, t4599);
          var t1989 = t4598;
          var t4600;
          if(t1989 !== false) {
           t4600 = true;
          }
          else {
           t4600 = false;
          }
          t4597 = t4600;
         }
         t4594 = t4597;
        }
        var t4591;
        if(t4594 !== false) {
         var t1382 = t1312;
         var t4601 = (1)  +  (t1312);
         var t1385 = t4601;
         var t1386 = t1308;
         var t4602 = (t1385)  <  (t1386);
         var t1990 = t4602;
         var t4603 = function (t2524) {	// t2530
          var t1384 = t2524;
          var t4604 = function (t2523) {	// t2525
           var t1383 = t2523;
           var t4605 = (t1382)  +  (t1383);
           var t2521 = t4605;
           var t1381 = t2521;
           var t4606 = function (t2522) {
            var t4607 = (-1)  +  (t1381);
            t1312 = t4607;	// set! t1312
            return t2501(undefined);
           };
           var t1417 = t1307;
           var t1421 = t1417;
           var t4609 = SPOCK.jstring(t1421);
           var t1420 = t4609;
           var t4611 = t1381 === undefined;
           var t1999 = t4611;
           var t4612;
           if(t1999 !== false) {
            var t4613 = t1420.length;
            t4612 = t4613;
           }
           else {
            t4612 = t1381;
           }
           var t4610 = t1420.substring(t1312, t4612);
           return ___transpose_2dnote(t4606, t4610);
          };
          var t2525 = t4604;
          var t4617 = new SPOCK.Char("^");
          var t4616 = SPOCK.eqvp(t1384, t4617);
          var t1991 = t4616;
          var t4618;
          if(t1991 !== false) {
           t4618 = true;
          }
          else {
           var t4620 = new SPOCK.Char("_");
           var t4619 = SPOCK.eqvp(t1384, t4620);
           var t1992 = t4619;
           var t4621;
           if(t1992 !== false) {
            t4621 = true;
           }
           else {
            t4621 = false;
           }
           t4618 = t4621;
          }
          var t4615;
          if(t4618 !== false) {
           var t4622 = (3)  +  (t1312);
           var t1396 = t4622;
           var t1397 = t1308;
           var t4623 = (t1396)  <  (t1397);
           var t1993 = t4623;
           var t4624 = function (t2526) {	// t2527
            var t1395 = t2526;
            var t4627 = new SPOCK.Char(",");
            var t4626 = SPOCK.eqvp(t1395, t4627);
            var t1994 = t4626;
            var t4628;
            if(t1994 !== false) {
             t4628 = true;
            }
            else {
             var t4630 = new SPOCK.Char("'");
             var t4629 = SPOCK.eqvp(t1395, t4630);
             var t1995 = t4629;
             var t4631;
             if(t1995 !== false) {
              t4631 = true;
             }
             else {
              t4631 = false;
             }
             t4628 = t4631;
            }
            var t4625;
            if(t4628 !== false) {
             t4625 = 4;
            }
            else {
             t4625 = 3;
            }
            return t2525(t4625);
           };
           var t2527 = t4624;
           var t4633;
           if(t1993 !== false) {
            var t4634 = (3)  +  (t1312);
            return ___string_2dref(t2527, t1307, t4634);
            t4633 = undefined;
           }
           else {
            return t2527(false);
            t4633 = undefined;
           }
           t4615 = t4633;
          }
          else {
           var t4637 = (2)  +  (t1312);
           var t1407 = t4637;
           var t1408 = t1308;
           var t4638 = (t1407)  <  (t1408);
           var t1996 = t4638;
           var t4639 = function (t2528) {	// t2529
            var t1406 = t2528;
            var t4642 = new SPOCK.Char(",");
            var t4641 = SPOCK.eqvp(t1406, t4642);
            var t1997 = t4641;
            var t4643;
            if(t1997 !== false) {
             t4643 = true;
            }
            else {
             var t4645 = new SPOCK.Char("'");
             var t4644 = SPOCK.eqvp(t1406, t4645);
             var t1998 = t4644;
             var t4646;
             if(t1998 !== false) {
              t4646 = true;
             }
             else {
              t4646 = false;
             }
             t4643 = t4646;
            }
            var t4640;
            if(t4643 !== false) {
             t4640 = 3;
            }
            else {
             t4640 = 2;
            }
            return t2525(t4640);
           };
           var t2529 = t4639;
           var t4648;
           if(t1996 !== false) {
            var t4649 = (2)  +  (t1312);
            return ___string_2dref(t2529, t1307, t4649);
            t4648 = undefined;
           }
           else {
            return t2529(false);
            t4648 = undefined;
           }
           t4615 = t4648;
          }
         };
         var t2530 = t4603;
         var t4652;
         if(t1990 !== false) {
          var t4653 = (1)  +  (t1312);
          return ___string_2dref(t2530, t1307, t4653);
          t4652 = undefined;
         }
         else {
          return t2530(false);
          t4652 = undefined;
         }
         t4591 = t4652;
        }
        else {
         var t4658 = new SPOCK.Char("A");
         var t4657 = SPOCK.eqvp(t1315, t4658);
         var t2000 = t4657;
         var t4659;
         if(t2000 !== false) {
          t4659 = true;
         }
         else {
          var t4661 = new SPOCK.Char("B");
          var t4660 = SPOCK.eqvp(t1315, t4661);
          var t2001 = t4660;
          var t4662;
          if(t2001 !== false) {
           t4662 = true;
          }
          else {
           var t4664 = new SPOCK.Char("C");
           var t4663 = SPOCK.eqvp(t1315, t4664);
           var t2002 = t4663;
           var t4665;
           if(t2002 !== false) {
            t4665 = true;
           }
           else {
            var t4667 = new SPOCK.Char("D");
            var t4666 = SPOCK.eqvp(t1315, t4667);
            var t2003 = t4666;
            var t4668;
            if(t2003 !== false) {
             t4668 = true;
            }
            else {
             var t4670 = new SPOCK.Char("E");
             var t4669 = SPOCK.eqvp(t1315, t4670);
             var t2004 = t4669;
             var t4671;
             if(t2004 !== false) {
              t4671 = true;
             }
             else {
              var t4673 = new SPOCK.Char("F");
              var t4672 = SPOCK.eqvp(t1315, t4673);
              var t2005 = t4672;
              var t4674;
              if(t2005 !== false) {
               t4674 = true;
              }
              else {
               var t4676 = new SPOCK.Char("G");
               var t4675 = SPOCK.eqvp(t1315, t4676);
               var t2006 = t4675;
               var t4677;
               if(t2006 !== false) {
                t4677 = true;
               }
               else {
                var t4679 = new SPOCK.Char("a");
                var t4678 = SPOCK.eqvp(t1315, t4679);
                var t2007 = t4678;
                var t4680;
                if(t2007 !== false) {
                 t4680 = true;
                }
                else {
                 var t4682 = new SPOCK.Char("b");
                 var t4681 = SPOCK.eqvp(t1315, t4682);
                 var t2008 = t4681;
                 var t4683;
                 if(t2008 !== false) {
                  t4683 = true;
                 }
                 else {
                  var t4685 = new SPOCK.Char("c");
                  var t4684 = SPOCK.eqvp(t1315, t4685);
                  var t2009 = t4684;
                  var t4686;
                  if(t2009 !== false) {
                   t4686 = true;
                  }
                  else {
                   var t4688 = new SPOCK.Char("d");
                   var t4687 = SPOCK.eqvp(t1315, t4688);
                   var t2010 = t4687;
                   var t4689;
                   if(t2010 !== false) {
                    t4689 = true;
                   }
                   else {
                    var t4691 = new SPOCK.Char("e");
                    var t4690 = SPOCK.eqvp(t1315, t4691);
                    var t2011 = t4690;
                    var t4692;
                    if(t2011 !== false) {
                     t4692 = true;
                    }
                    else {
                     var t4694 = new SPOCK.Char("f");
                     var t4693 = SPOCK.eqvp(t1315, t4694);
                     var t2012 = t4693;
                     var t4695;
                     if(t2012 !== false) {
                      t4695 = true;
                     }
                     else {
                      var t4697 = new SPOCK.Char("g");
                      var t4696 = SPOCK.eqvp(t1315, t4697);
                      var t2013 = t4696;
                      var t4698;
                      if(t2013 !== false) {
                       t4698 = true;
                      }
                      else {
                       t4698 = false;
                      }
                      t4695 = t4698;
                     }
                     t4692 = t4695;
                    }
                    t4689 = t4692;
                   }
                   t4686 = t4689;
                  }
                  t4683 = t4686;
                 }
                 t4680 = t4683;
                }
                t4677 = t4680;
               }
               t4674 = t4677;
              }
              t4671 = t4674;
             }
             t4668 = t4671;
            }
            t4665 = t4668;
           }
           t4662 = t4665;
          }
          t4659 = t4662;
         }
         var t4656;
         if(t4659 !== false) {
          var t1454 = t1312;
          var t4699 = (1)  +  (t1312);
          var t1457 = t4699;
          var t1458 = t1308;
          var t4700 = (t1457)  <  (t1458);
          var t2014 = t4700;
          var t4701 = function (t2534) {	// t2535
           var t1456 = t2534;
           var t4704 = new SPOCK.Char(",");
           var t4703 = SPOCK.eqvp(t1456, t4704);
           var t2015 = t4703;
           var t4705;
           if(t2015 !== false) {
            t4705 = true;
           }
           else {
            var t4707 = new SPOCK.Char("'");
            var t4706 = SPOCK.eqvp(t1456, t4707);
            var t2016 = t4706;
            var t4708;
            if(t2016 !== false) {
             t4708 = true;
            }
            else {
             t4708 = false;
            }
            t4705 = t4708;
           }
           var t4702;
           if(t4705 !== false) {
            t4702 = 2;
           }
           else {
            t4702 = 1;
           }
           var t2533 = t4702;
           var t1455 = t2533;
           var t4709 = (t1454)  +  (t1455);
           var t2531 = t4709;
           var t1453 = t2531;
           var t4710 = function (t2532) {
            var t4711 = (-1)  +  (t1453);
            t1312 = t4711;	// set! t1312
            return t2501(undefined);
           };
           var t1467 = t1307;
           var t1471 = t1467;
           var t4713 = SPOCK.jstring(t1471);
           var t1470 = t4713;
           var t4715 = t1453 === undefined;
           var t2017 = t4715;
           var t4716;
           if(t2017 !== false) {
            var t4717 = t1470.length;
            t4716 = t4717;
           }
           else {
            t4716 = t1453;
           }
           var t4714 = t1470.substring(t1312, t4716);
           return ___transpose_2dnote(t4710, t4714);
          };
          var t2535 = t4701;
          var t4719;
          if(t2014 !== false) {
           var t4720 = (1)  +  (t1312);
           return ___string_2dref(t2535, t1307, t4720);
           t4719 = undefined;
          }
          else {
           return t2535(false);
           t4719 = undefined;
          }
          t4656 = t4719;
         }
         else {
          var t4723 = function (t2536) {
           return ___display(t2501, t2536, ____2aabc_2doutput_2dport_2a);
          };
          return ___string_2dref(t4723, t1307, t1312);
          t4656 = undefined;
         }
         t4591 = t4656;
        }
        t4563 = t4591;
       }
       t4509 = t4563;
      }
      t4497 = t4509;
     }
    };
    return ___string_2dref(t4493, t1307, t1312);
    t4491 = undefined;
   }
  };
  t1311 = t4489;	// set! t1311
  return t1311(k2497, 0);
 };
 ___transpose_2dmeasures = t4486;	// set! transpose-measures
 var t4728 = function (k2537, t1477, t1478) {	// display-note-acc
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1479 = undefined;
  var t4729 = function (t2543) {
   var t4730 = function (t2542) {
    t1479 = t2542;	// set! t1479
    var t2538 = undefined;
    var t4731 = function (t2539) {
     var t4732 = function (t2540) {	// t2541
      return ___display(k2537, t2540, ____2aabc_2doutput_2dport_2a);
     };
     var t2541 = t4732;
     var t4735 = SPOCK.eqvp(t1478, -1);
     var t2018 = t4735;
     var t4736;
     if(t2018 !== false) {
      t4736 = true;
     }
     else {
      t4736 = false;
     }
     var t4734;
     if(t4736 !== false) {
      return t2541("b");
      t4734 = undefined;
     }
     else {
      var t4739 = SPOCK.eqvp(t1478, 0);
      var t2019 = t4739;
      var t4740;
      if(t2019 !== false) {
       t4740 = true;
      }
      else {
       t4740 = false;
      }
      var t4738;
      if(t4740 !== false) {
       return t2541("");
       t4738 = undefined;
      }
      else {
       var t4743 = SPOCK.eqvp(t1478, 1);
       var t2020 = t4743;
       var t4744;
       if(t2020 !== false) {
        t4744 = true;
       }
       else {
        t4744 = false;
       }
       var t4742;
       if(t4744 !== false) {
        return t2541("#");
        t4742 = undefined;
       }
       else {
        var t4748 = undefined === undefined;
        var t2021 = t4748;
        var t4749;
        if(t2021 !== false) {
         t4749 = 10;
        }
        else {
         t4749 = undefined;
        }
        var t4747 = t1478.toString(t4749);
        var t4746 = new SPOCK.String(t4747);
        return ___transpose_2derror(t2541, 406, "Strange chord accidental: ", t1479, " ", t4746);
        t4742 = undefined;
       }
       t4738 = t4742;
      }
      t4734 = t4738;
     }
    };
    return ___display(t4731, t1479, ____2aabc_2doutput_2dport_2a);
   };
   return ___string_2dref(t4730, "CDEFGAB", t2543);
  };
  return ___modulo(t4729, t1477, 7);
 };
 ___display_2dnote_2dacc = t4728;	// set! display-note-acc
 var t4754 = function (k2544, t1490) {	// transpose-guitar-chord
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1491 = undefined;
  var t4756 = SPOCK.jstring(t1490);
  var t4755 = t4756.length;
  t1491 = t4755;	// set! t1491
  var t1494 = ___transpose_2dshift;
  var t4757;
  if(t1494 !== false) {
   t4757 = false;
  }
  else {
   t4757 = true;
  }
  var t2022 = t4757;
  var t4758 = function (t2545) {	// t2563
   var t4759 = (t1491)  >  (0);
   var t2023 = t4759;
   var t4760 = function (t2546) {	// t2561
    var t1495 = t2546;
    var t4761;
    if(t1495 !== false) {
     var t1498 = t1495;
     var t1500 = ___preserve_2dguitar_3f;
     var t4762;
     if(t1500 !== false) {
      t4762 = false;
     }
     else {
      t4762 = true;
     }
     var t1499 = t4762;
     var t4763;
     if(t1499 !== false) {
      return k2544(t1499);
      t4763 = undefined;
     }
     else {
      var t4765 = function (t2547) {
       var t4766 = function (t2548) {	// t2549
        var t4767 = new SPOCK.Char("\"");
        return ___display(k2544, t4767, ____2aabc_2doutput_2dport_2a);
       };
       var t2549 = t4766;
       var t4769;
       if(___transpose_2dguitar_3f !== false) {
        var t4770 = (t1491)  >=  (2);
        var t2024 = t4770;
        var t4771 = function (t2557) {	// t2558
         var t1502 = t2557;
         var t4774 = new SPOCK.Char("#");
         var t4773 = SPOCK.eqvp(t1502, t4774);
         var t2025 = t4773;
         var t4775;
         if(t2025 !== false) {
          t4775 = true;
         }
         else {
          var t4777 = new SPOCK.Char("b");
          var t4776 = SPOCK.eqvp(t1502, t4777);
          var t2026 = t4776;
          var t4778;
          if(t2026 !== false) {
           t4778 = true;
          }
          else {
           t4778 = false;
          }
          t4775 = t4778;
         }
         var t4772;
         if(t4775 !== false) {
          t4772 = 2;
         }
         else {
          t4772 = 1;
         }
         var t2550 = t4772;
         var t1501 = t2550;
         var t4779 = SPOCK.jstring(t1490);
         var t1513 = t4779;
         var t4781 = t1501 === undefined;
         var t2027 = t4781;
         var t4782;
         if(t2027 !== false) {
          var t4783 = t1513.length;
          t4782 = t4783;
         }
         else {
          t4782 = t1501;
         }
         var t4780 = t1513.substring(0, t4782);
         var t1509 = t4780;
         var t4784 = function (t2556) {
          var t1520 = t2556;
          var t1522 = ___original_2dsharp_2dtable;
          var t4785 = (t1522) [ (t1498) ] ;
          var t1521 = t4785;
          var t4786 = (t1520)  -  (t1521);
          var t2553 = t4786;
          var t1518 = t2553;
          var t1524 = ___transposed_2dsharp_2dtable;
          var t4787 = function (t2555) {
           var t1525 = t2555;
           var t4788 = (t1524) [ (t1525) ] ;
           var t2554 = t4788;
           var t1519 = t2554;
           var t4789 = (t1518)  +  (t1519);
           var t2552 = t4789;
           var t4790 = function (t2551) {
            var t4791 = SPOCK.jstring(t1490);
            var t1531 = t4791;
            var t4793 = t1491 === undefined;
            var t2028 = t4793;
            var t4794;
            if(t2028 !== false) {
             var t4795 = t1531.length;
             t4794 = t4795;
            }
            else {
             t4794 = t1491;
            }
            var t4792 = t1531.substring(t1501, t4794);
            return ___display(t2549, t4792, ____2aabc_2doutput_2dport_2a);
           };
           var t1517 = ___transpose_2dshift;
           var t4797 = (t1498)  +  (t1517);
           return ___display_2dnote_2dacc(t4790, t4797, t2552);
          };
          var t1527 = ___transpose_2dshift;
          var t4799 = (t1498)  +  (t1527);
          return ___modulo(t4787, t4799, 7);
         };
         return ___key_2d_3eacc(t4784, t1509);
        };
        var t2558 = t4771;
        var t4802;
        if(t2024 !== false) {
         return ___string_2dref(t2558, t1490, 1);
         t4802 = undefined;
        }
        else {
         return t2558(false);
         t4802 = undefined;
        }
        t4769 = t4802;
       }
       else {
        return ___display(t2549, t1490, ____2aabc_2doutput_2dport_2a);
        t4769 = undefined;
       }
      };
      var t4806 = new SPOCK.Char("\"");
      return ___display(t4765, t4806, ____2aabc_2doutput_2dport_2a);
      t4763 = undefined;
     }
     t4761 = t4763;
    }
    else {
     var t4808 = function (t2559) {
      var t4809 = function (t2560) {
       var t4810 = new SPOCK.Char("\"");
       return ___display(k2544, t4810, ____2aabc_2doutput_2dport_2a);
      };
      return ___display(t4809, t1490, ____2aabc_2doutput_2dport_2a);
     };
     var t4813 = new SPOCK.Char("\"");
     return ___display(t4808, t4813, ____2aabc_2doutput_2dport_2a);
     t4761 = undefined;
    }
   };
   var t2561 = t4760;
   var t4815;
   if(t2023 !== false) {
    var t4816 = function (t2562) {
     return ___string_2dindex(t2561, "CDEFGAB", t2562);
    };
    return ___string_2dref(t4816, t1490, 0);
    t4815 = undefined;
   }
   else {
    return t2561(false);
    t4815 = undefined;
   }
  };
  var t2563 = t4758;
  var t4820;
  if(t2022 !== false) {
   return ___transpose_2derror(t2563, 406, "Key not set for chord: ", t1490);
   t4820 = undefined;
  }
  else {
   return t2563(undefined);
   t4820 = undefined;
  }
 };
 ___transpose_2dguitar_2dchord = t4754;	// set! transpose-guitar-chord
 var t4823 = function (k2564, t1534) {	// key->acc
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t4825 = SPOCK.jstring(t1534);
  var t4824 = t4825.length;
  var t1536 = t4824;
  var t4826 = (t1536)  >  (1);
  var t2029 = t4826;
  var t4827 = function (t2565) {	// t2566
   var t1535 = t2565;
   var t4830 = new SPOCK.Char("#");
   var t4829 = SPOCK.eqvp(t1535, t4830);
   var t2030 = t4829;
   var t4831;
   if(t2030 !== false) {
    t4831 = true;
   }
   else {
    t4831 = false;
   }
   var t4828;
   if(t4831 !== false) {
    t4828 = 1;
   }
   else {
    var t4834 = new SPOCK.Char("b");
    var t4833 = SPOCK.eqvp(t1535, t4834);
    var t2031 = t4833;
    var t4835;
    if(t2031 !== false) {
     t4835 = true;
    }
    else {
     t4835 = false;
    }
    var t4832;
    if(t4835 !== false) {
     t4832 = -1;
    }
    else {
     t4832 = 0;
    }
    t4828 = t4832;
   }
   return k2564(t4828);
  };
  var t2566 = t4827;
  var t4837;
  if(t2029 !== false) {
   return ___string_2dref(t2566, t1534, 1);
   t4837 = undefined;
  }
  else {
   return t2566(false);
   t4837 = undefined;
  }
 };
 ___key_2d_3eacc = t4823;	// set! key->acc
 var t4840 = function (k2567, t1544, t1545) {	// display-acc-note
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t4841 = function (t2568) {
   var t4842 = function (t2574) {
    var t4843 = function (t2573) {
     var t4844 = (t1545)  /  (7);
     var t1560 = t4844;
     var t4846 = (t1560)  < 0 ;
     var t4845;
     if(t4846 !== false) {
      var t4847 = Math.ceil(t1560);
      t4845 = t4847;
     }
     else {
      var t4848 = Math.floor(t1560);
      t4845 = t4848;
     }
     var t1557 = t4845;
     var t4850 = SPOCK.eqvp(t1557, 0);
     var t2037 = t4850;
     var t4851;
     if(t2037 !== false) {
      t4851 = true;
     }
     else {
      var t4852 = SPOCK.eqvp(t1557, 1);
      var t2038 = t4852;
      var t4853;
      if(t2038 !== false) {
       t4853 = true;
      }
      else {
       t4853 = false;
      }
      t4851 = t4853;
     }
     var t4849;
     if(t4851 !== false) {
      var t4854 = function (k2571, t1567) {	// t1557
       var r = SPOCK.count(arguments);
       if(r) return r;
       loop: while(true) {
        var t4857 = t1567.character;
        var t4856 = t4857.toUpperCase();
        var t4855 = new SPOCK.Char(t4856);
        return k2571(t4855);
       }
      };
      t4849 = t4854;
     }
     else {
      var t4860 = SPOCK.eqvp(t1557, 2);
      var t2039 = t4860;
      var t4861;
      if(t2039 !== false) {
       t4861 = true;
      }
      else {
       var t4862 = SPOCK.eqvp(t1557, 3);
       var t2040 = t4862;
       var t4863;
       if(t2040 !== false) {
        t4863 = true;
       }
       else {
        t4863 = false;
       }
       t4861 = t4863;
      }
      var t4859;
      if(t4861 !== false) {
       var t4864 = function (k2572, t1572) {	// t1557
        var r = SPOCK.count(arguments);
        if(r) return r;
        loop: while(true) {
         var t4867 = t1572.character;
         var t4866 = t4867.toLowerCase();
         var t4865 = new SPOCK.Char(t4866);
         return k2572(t4865);
        }
       };
       t4859 = t4864;
      }
      else {
       t4859 = ___identity;
      }
      t4849 = t4859;
     }
     var t4869 = function (t2570) {
      var t4870 = function (t2569) {
       var t4871 = (t1545)  /  (7);
       var t1576 = t4871;
       var t4873 = (t1576)  < 0 ;
       var t4872;
       if(t4873 !== false) {
        var t4874 = Math.ceil(t1576);
        t4872 = t4874;
       }
       else {
        var t4875 = Math.floor(t1576);
        t4872 = t4875;
       }
       var t1573 = t4872;
       var t4877 = SPOCK.eqvp(t1573, 0);
       var t2041 = t4877;
       var t4878;
       if(t2041 !== false) {
        t4878 = true;
       }
       else {
        var t4879 = SPOCK.eqvp(t1573, -1);
        var t2042 = t4879;
        var t4880;
        if(t2042 !== false) {
         t4880 = true;
        }
        else {
         t4880 = false;
        }
        t4878 = t4880;
       }
       var t4876;
       if(t4878 !== false) {
        t4876 = ",";
       }
       else {
        var t4882 = SPOCK.eqvp(t1573, 1);
        var t2043 = t4882;
        var t4883;
        if(t2043 !== false) {
         t4883 = true;
        }
        else {
         var t4884 = SPOCK.eqvp(t1573, 2);
         var t2044 = t4884;
         var t4885;
         if(t2044 !== false) {
          t4885 = true;
         }
         else {
          t4885 = false;
         }
         t4883 = t4885;
        }
        var t4881;
        if(t4883 !== false) {
         t4881 = "";
        }
        else {
         var t4887 = SPOCK.eqvp(t1573, 3);
         var t2045 = t4887;
         var t4888;
         if(t2045 !== false) {
          t4888 = true;
         }
         else {
          var t4889 = SPOCK.eqvp(t1573, 4);
          var t2046 = t4889;
          var t4890;
          if(t2046 !== false) {
           t4890 = true;
          }
          else {
           t4890 = false;
          }
          t4888 = t4890;
         }
         var t4886;
         if(t4888 !== false) {
          t4886 = "'";
         }
         else {
          t4886 = "";
         }
         t4881 = t4886;
        }
        t4876 = t4881;
       }
       return ___display(k2567, t4876, ____2aabc_2doutput_2dport_2a);
      };
      return ___display(t4870, t2570, ____2aabc_2doutput_2dport_2a);
     };
     return t4849(t4869, t2573);
    };
    return ___string_2dref(t4843, "CDEFGAB", t2574);
   };
   return ___modulo(t4842, t1545, 7);
  };
  var t4897 = SPOCK.eqvp(t1544, -2);
  var t2032 = t4897;
  var t4898;
  if(t2032 !== false) {
   t4898 = true;
  }
  else {
   t4898 = false;
  }
  var t4896;
  if(t4898 !== false) {
   t4896 = "__";
  }
  else {
   var t4900 = SPOCK.eqvp(t1544, -1);
   var t2033 = t4900;
   var t4901;
   if(t2033 !== false) {
    t4901 = true;
   }
   else {
    t4901 = false;
   }
   var t4899;
   if(t4901 !== false) {
    t4899 = "_";
   }
   else {
    var t4903 = SPOCK.eqvp(t1544, 0);
    var t2034 = t4903;
    var t4904;
    if(t2034 !== false) {
     t4904 = true;
    }
    else {
     t4904 = false;
    }
    var t4902;
    if(t4904 !== false) {
     t4902 = "=";
    }
    else {
     var t4906 = SPOCK.eqvp(t1544, 1);
     var t2035 = t4906;
     var t4907;
     if(t2035 !== false) {
      t4907 = true;
     }
     else {
      t4907 = false;
     }
     var t4905;
     if(t4907 !== false) {
      t4905 = "^";
     }
     else {
      var t4909 = SPOCK.eqvp(t1544, 2);
      var t2036 = t4909;
      var t4910;
      if(t2036 !== false) {
       t4910 = true;
      }
      else {
       t4910 = false;
      }
      var t4908;
      if(t4910 !== false) {
       t4908 = "^^";
      }
      else {
       t4908 = "";
      }
      t4905 = t4908;
     }
     t4902 = t4905;
    }
    t4899 = t4902;
   }
   t4896 = t4899;
  }
  return ___display(t4841, t4896, ____2aabc_2doutput_2dport_2a);
 };
 ___display_2dacc_2dnote = t4840;	// set! display-acc-note
 var t4912 = function (k2575, t1591) {	// transpose-note
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1592 = undefined;
  var t1593 = undefined;
  t1592 = false;	// set! t1592
  t1593 = false;	// set! t1593
  var t1594 = ___transpose_2dshift;
  var t4913;
  if(t1594 !== false) {
   t4913 = false;
  }
  else {
   t4913 = true;
  }
  var t2047 = t4913;
  var t4914 = function (t2576) {	// t2591
   var t4915 = function (t2590) {
    var t4916 = function (t2577) {
     var t4917;
     if(t1593 !== false) {
      t4917 = false;
     }
     else {
      t4917 = true;
     }
     var t2067 = t4917;
     var t4918 = function (t2578) {	// t2586
      var t4919 = function (t2579) {	// t2580
       var t1659 = ___transpose_2dshift;
       var t4920 = (t1593)  +  (t1659);
       return ___display_2dacc_2dnote(k2575, t2579, t4920);
      };
      var t2580 = t4919;
      var t4922;
      if(t1592 !== false) {
       var t1650 = t1592;
       var t1652 = ___original_2dsharp_2dtable;
       var t4923 = function (t2585) {
        var t1653 = t2585;
        var t4924 = (t1652) [ (t1653) ] ;
        var t2584 = t4924;
        var t1651 = t2584;
        var t4925 = (t1650)  -  (t1651);
        var t2581 = t4925;
        var t1648 = t2581;
        var t1654 = ___transposed_2dsharp_2dtable;
        var t4926 = function (t2583) {
         var t1655 = t2583;
         var t4927 = (t1654) [ (t1655) ] ;
         var t2582 = t4927;
         var t1649 = t2582;
         var t4928 = (t1648)  +  (t1649);
         return t2580(t4928);
        };
        var t1657 = ___transpose_2dshift;
        var t4930 = (t1593)  +  (t1657);
        return ___modulo(t4926, t4930, 7);
       };
       return ___modulo(t4923, t1593, 7);
       t4922 = undefined;
      }
      else {
       return t2580(false);
       t4922 = undefined;
      }
     };
     var t2586 = t4918;
     var t4934;
     if(t2067 !== false) {
      return ___transpose_2derror(t2586, 406, "Couldn't parse note: ", t1591);
      t4934 = undefined;
     }
     else {
      return t2586(undefined);
      t4934 = undefined;
     }
    };
    var t4937 = function (k2587, t1595) {
     var r = SPOCK.count(arguments);
     if(r) return r;
     var t1596 = t1595;
     var t4940 = new SPOCK.Char("^");
     var t4939 = SPOCK.eqvp(t1595, t4940);
     var t2048 = t4939;
     var t4941;
     if(t2048 !== false) {
      t4941 = true;
     }
     else {
      t4941 = false;
     }
     var t4938;
     if(t4941 !== false) {
      var t1601 = t1592;
      var t4942;
      if(t1601 !== false) {
       t4942 = t1601;
      }
      else {
       t4942 = 0;
      }
      var t1600 = t4942;
      var t4943 = (1)  +  (t1600);
      t1592 = t4943;	// set! t1592
      return k2587(undefined);
      t4938 = undefined;
     }
     else {
      var t4947 = new SPOCK.Char("_");
      var t4946 = SPOCK.eqvp(t1595, t4947);
      var t2049 = t4946;
      var t4948;
      if(t2049 !== false) {
       t4948 = true;
      }
      else {
       t4948 = false;
      }
      var t4945;
      if(t4948 !== false) {
       var t1606 = t1592;
       var t4949;
       if(t1606 !== false) {
        t4949 = t1606;
       }
       else {
        t4949 = 0;
       }
       var t1605 = t4949;
       var t4950 = (-1)  +  (t1605);
       t1592 = t4950;	// set! t1592
       return k2587(undefined);
       t4945 = undefined;
      }
      else {
       var t4954 = new SPOCK.Char("=");
       var t4953 = SPOCK.eqvp(t1595, t4954);
       var t2050 = t4953;
       var t4955;
       if(t2050 !== false) {
        t4955 = true;
       }
       else {
        t4955 = false;
       }
       var t4952;
       if(t4955 !== false) {
        t1592 = 0;	// set! t1592
        return k2587(undefined);
        t4952 = undefined;
       }
       else {
        var t4959 = new SPOCK.Char("C");
        var t4958 = SPOCK.eqvp(t1595, t4959);
        var t2051 = t4958;
        var t4960;
        if(t2051 !== false) {
         t4960 = true;
        }
        else {
         var t4962 = new SPOCK.Char("D");
         var t4961 = SPOCK.eqvp(t1595, t4962);
         var t2052 = t4961;
         var t4963;
         if(t2052 !== false) {
          t4963 = true;
         }
         else {
          var t4965 = new SPOCK.Char("E");
          var t4964 = SPOCK.eqvp(t1595, t4965);
          var t2053 = t4964;
          var t4966;
          if(t2053 !== false) {
           t4966 = true;
          }
          else {
           var t4968 = new SPOCK.Char("F");
           var t4967 = SPOCK.eqvp(t1595, t4968);
           var t2054 = t4967;
           var t4969;
           if(t2054 !== false) {
            t4969 = true;
           }
           else {
            var t4971 = new SPOCK.Char("G");
            var t4970 = SPOCK.eqvp(t1595, t4971);
            var t2055 = t4970;
            var t4972;
            if(t2055 !== false) {
             t4972 = true;
            }
            else {
             var t4974 = new SPOCK.Char("A");
             var t4973 = SPOCK.eqvp(t1595, t4974);
             var t2056 = t4973;
             var t4975;
             if(t2056 !== false) {
              t4975 = true;
             }
             else {
              var t4977 = new SPOCK.Char("B");
              var t4976 = SPOCK.eqvp(t1595, t4977);
              var t2057 = t4976;
              var t4978;
              if(t2057 !== false) {
               t4978 = true;
              }
              else {
               var t4980 = new SPOCK.Char("c");
               var t4979 = SPOCK.eqvp(t1595, t4980);
               var t2058 = t4979;
               var t4981;
               if(t2058 !== false) {
                t4981 = true;
               }
               else {
                var t4983 = new SPOCK.Char("d");
                var t4982 = SPOCK.eqvp(t1595, t4983);
                var t2059 = t4982;
                var t4984;
                if(t2059 !== false) {
                 t4984 = true;
                }
                else {
                 var t4986 = new SPOCK.Char("e");
                 var t4985 = SPOCK.eqvp(t1595, t4986);
                 var t2060 = t4985;
                 var t4987;
                 if(t2060 !== false) {
                  t4987 = true;
                 }
                 else {
                  var t4989 = new SPOCK.Char("f");
                  var t4988 = SPOCK.eqvp(t1595, t4989);
                  var t2061 = t4988;
                  var t4990;
                  if(t2061 !== false) {
                   t4990 = true;
                  }
                  else {
                   var t4992 = new SPOCK.Char("g");
                   var t4991 = SPOCK.eqvp(t1595, t4992);
                   var t2062 = t4991;
                   var t4993;
                   if(t2062 !== false) {
                    t4993 = true;
                   }
                   else {
                    var t4995 = new SPOCK.Char("a");
                    var t4994 = SPOCK.eqvp(t1595, t4995);
                    var t2063 = t4994;
                    var t4996;
                    if(t2063 !== false) {
                     t4996 = true;
                    }
                    else {
                     var t4998 = new SPOCK.Char("b");
                     var t4997 = SPOCK.eqvp(t1595, t4998);
                     var t2064 = t4997;
                     var t4999;
                     if(t2064 !== false) {
                      t4999 = true;
                     }
                     else {
                      t4999 = false;
                     }
                     t4996 = t4999;
                    }
                    t4993 = t4996;
                   }
                   t4990 = t4993;
                  }
                  t4987 = t4990;
                 }
                 t4984 = t4987;
                }
                t4981 = t4984;
               }
               t4978 = t4981;
              }
              t4975 = t4978;
             }
             t4972 = t4975;
            }
            t4969 = t4972;
           }
           t4966 = t4969;
          }
          t4963 = t4966;
         }
         t4960 = t4963;
        }
        var t4957;
        if(t4960 !== false) {
         var t1637 = 7;
         var t5000 = function (t2589) {
          var t1638 = t2589;
          var t5001 = (t1637)  +  (t1638);
          var t2588 = t5001;
          t1593 = t2588;	// set! t1593
          return k2587(undefined);
         };
         return ___string_2dindex(t5000, "CDEFGABcdefgab", t1595);
         t4957 = undefined;
        }
        else {
         var t5006 = new SPOCK.Char(",");
         var t5005 = SPOCK.eqvp(t1596, t5006);
         var t2065 = t5005;
         var t5007;
         if(t2065 !== false) {
          t5007 = true;
         }
         else {
          t5007 = false;
         }
         var t5004;
         if(t5007 !== false) {
          var t1642 = t1593;
          var t5008 = (-7)  +  (t1642);
          t1593 = t5008;	// set! t1593
          t5004 = undefined;
         }
         else {
          var t5011 = new SPOCK.Char("'");
          var t5010 = SPOCK.eqvp(t1596, t5011);
          var t2066 = t5010;
          var t5012;
          if(t2066 !== false) {
           t5012 = true;
          }
          else {
           t5012 = false;
          }
          var t5009;
          if(t5012 !== false) {
           var t1646 = t1593;
           var t5013 = (7)  +  (t1646);
           t1593 = t5013;	// set! t1593
           t5009 = undefined;
          }
          else {
           t5009 = false;
          }
          t5004 = t5009;
         }
         return k2587(t5004);
         t4957 = undefined;
        }
        t4952 = t4957;
       }
       t4945 = t4952;
      }
      t4938 = t4945;
     }
    };
    return ___for_2deach(t4916, t4937, t2590);
   };
   return ___string_2d_3elist(t4915, t1591);
  };
  var t2591 = t4914;
  var t5017;
  if(t2047 !== false) {
   return ___transpose_2derror(t2591, 406, "Key not set for note: ", t1591);
   t5017 = undefined;
  }
  else {
   return t2591(undefined);
   t5017 = undefined;
  }
 };
 ___transpose_2dnote = t4912;	// set! transpose-note
 var t5020 = function (k2592) {	// trtest
  var t1660 = undefined;
  var t5021 = function (k2611, t1661) {	// t1660
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t5022 = (t1661)  >  (12);
   var t2068 = t5022;
   var t5023;
   if(t2068 !== false) {
    return k2611(false);
    t5023 = undefined;
   }
   else {
    var t5025 = function (t2613) {
     var t5026 = function (t2612) {
      var t5027 = (t1661)  +  (1);
      return t1660(k2611, t5027);
     };
     var t5029 = SPOCK.intern("->");
     return ___print(t5026, t1661, t5029, t2613);
    };
    return ___interval_2d_3epitch_2ddelta(t5025, t1661);
    t5023 = undefined;
   }
  };
  t1660 = t5021;	// set! t1660
  var t5032 = function (t2593) {
   var t5033 = function (t2601) {
    var t1666 = t2601;
    var t5034 = typeof(t1666);
    var t1667 = t5034;
    var t5035 = (t1667) === ("number");
    var t2069 = t5035;
    var t5036 = function (t2594) {	// t2602
     var t1686 = undefined;
     var t5037 = function (k2595, t1687) {	// t1686
      var r = SPOCK.count(arguments);
      if(r) return r;
      var t5038 = (t1687)  >  (1);
      var t2073 = t5038;
      var t5039;
      if(t2073 !== false) {
       return k2595(false);
       t5039 = undefined;
      }
      else {
       var t5041 = function (t2597) {
        var t1690 = t2597;
        var t5042 = typeof(t1690);
        var t1693 = t5042;
        var t5043 = (t1693) === ("string");
        var t1692 = t5043;
        var t5044;
        if(t1692 !== false) {
         t5044 = t1692;
        }
        else {
         var t5045 = (t1690) instanceof SPOCK.String ;
         t5044 = t5045;
        }
        var t2074 = t5044;
        var t5046 = function (t2596) {	// t2598
         var t5047 = (t1687)  +  (1);
         return t1686(k2595, t5047);
        };
        var t2598 = t5046;
        var t5049;
        if(t2074 !== false) {
         var t5050 = function (t2600) {
          var t5051 = function (t2599) {
           return ___sleep(t2598, 2);
          };
          return ___system(t5051, t2600);
         };
         return ___string_2dappend(t5050, "abc ", t1690);
         t5049 = undefined;
        }
        else {
         return t2598(false);
         t5049 = undefined;
        }
       };
       return ___transpose_2dby(t5041, t1687, "SomogyiKarikazo", "tmp");
       t5039 = undefined;
      }
     };
     t1686 = t5037;	// set! t1686
     return t1686(k2592, -1);
    };
    var t2602 = t5036;
    var t5058;
    if(t2069 !== false) {
     var t1669 = undefined;
     var t5059 = function (k2608, t1670) {	// t1669
      var r = SPOCK.count(arguments);
      if(r) return r;
      var t5060 = (t1670)  >  (12);
      var t2070 = t5060;
      var t5061;
      if(t2070 !== false) {
       return k2608(false);
       t5061 = undefined;
      }
      else {
       var t5063 = function (t2610) {
        var t5064 = function (t2609) {
         var t5065 = (t1670)  +  (1);
         return t1669(k2608, t5065);
        };
        var t5067 = SPOCK.intern("->");
        return ___print(t5064, t1670, t5067, t2610);
       };
       return ___interval_2d_3epitch_2ddelta(t5063, t1670);
       t5061 = undefined;
      }
     };
     t1669 = t5059;	// set! t1669
     var t5070 = function (t2603) {
      var t1675 = undefined;
      var t5071 = function (k2604, t1676) {	// t1675
       var r = SPOCK.count(arguments);
       if(r) return r;
       var t5072 = (t1676)  >  (12);
       var t2071 = t5072;
       var t5073;
       if(t2071 !== false) {
        return k2604(false);
        t5073 = undefined;
       }
       else {
        var t5075 = (0) === (t1676);
        var t1679 = t5075;
        var t5076;
        if(t1679 !== false) {
         t5076 = false;
        }
        else {
         t5076 = true;
        }
        var t2072 = t5076;
        var t5077 = function (t2605) {	// t2606
         var t5078 = (t1676)  +  (1);
         return t1675(k2604, t5078);
        };
        var t2606 = t5077;
        var t5080;
        if(t2072 !== false) {
         var t5081 = function (t2607) {
          var t5082 = SPOCK.intern("/");
          var t5083 = SPOCK.intern("->");
          return ___print(t2606, 1, t5082, t1676, t5083, t2607);
         };
         var t5085 =  1 /  (t1676);
         return ___interval_2d_3epitch_2ddelta(t5081, t5085);
         t5080 = undefined;
        }
        else {
         return t2606(undefined);
         t5080 = undefined;
        }
        t5073 = t5080;
       }
      };
      t1675 = t5071;	// set! t1675
      return t1675(t2602, -12.0);
     };
     return t1669(t5070, -12.0);
     t5058 = undefined;
    }
    else {
     return t2602(false);
     t5058 = undefined;
    }
   };
   return ___string_2d_3enumber(t5033, "0.5");
  };
  return t1660(t5032, -12);
 };
 ___trtest = t5020;	// set! trtest
 var t5093 = function (k2614, t1697) {	// trim-whitespace
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1698 = undefined;
  var t5094 = function (k2615, t1699) {	// t1698
   var r = SPOCK.count(arguments);
   if(r) return r;
   var t5095 = (t1699) < (0);
   var t2075 = t5095;
   var t5096;
   if(t2075 !== false) {
    return k2615("");
    t5096 = undefined;
   }
   else {
    var t5098 = function (t2616) {
     var t1701 = t2616;
     var t5099 = (t1701) .character.match(/^\s$/) ;
     var t1703 = t5099;
     var t5101 = null;
     var t5100 = (t1703) === (t5101);
     var t1702 = t5100;
     var t5102;
     if(t1702 !== false) {
      t5102 = false;
     }
     else {
      t5102 = true;
     }
     var t2076 = t5102;
     var t5103;
     if(t2076 !== false) {
      var t5104 = (-1)  +  (t1699);
      return t1698(k2615, t5104);
      t5103 = undefined;
     }
     else {
      var t1708 = t1697;
      var t5106 = (1)  +  (t1699);
      var t1710 = t5106;
      var t1714 = t1708;
      var t5107 = SPOCK.jstring(t1714);
      var t1713 = t5107;
      var t5109 = t1710 === undefined;
      var t2077 = t5109;
      var t5110;
      if(t2077 !== false) {
       var t5111 = t1713.length;
       t5110 = t5111;
      }
      else {
       t5110 = t1710;
      }
      var t5108 = t1713.substring(0, t5110);
      return k2615(t5108);
      t5103 = undefined;
     }
    };
    return ___string_2dref(t5098, t1697, t1699);
    t5096 = undefined;
   }
  };
  t1698 = t5094;	// set! t1698
  var t5115 = SPOCK.jstring(t1697);
  var t5114 = t5115.length;
  var t1717 = t5114;
  var t5116 = (-1)  +  (t1717);
  return t1698(k2614, t5116);
 };
 ___trim_2dwhitespace = t5093;	// set! trim-whitespace
 var t5118 = function (k2617, t1720) {	// open-url-pipe
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1721 = 0;
  var t5119 = function (t2621) {
   var t1722 = t2621;
   var t5120 = SPOCK.eqvp(t1721, t1722);
   var t2618 = t5120;
   var t2078 = t2618;
   var t5121;
   if(t2078 !== false) {
    var t5122 = function (t2619) {
     var t1723 = t2619;
     var t5123;
     if(t1723 !== false) {
      t5123 = false;
     }
     else {
      t5123 = true;
     }
     var t2079 = t5123;
     var t5124;
     if(t2079 !== false) {
      var t5125 = function (t2620) {
       return ___open_2dinput_2dpipe(k2617, t2620);
      };
      return ___string_2dappend(t5125, "wget -q -O- ", t1720, "");
      t5124 = undefined;
     }
     else {
      return k2617(false);
      t5124 = undefined;
     }
    };
    var t5129 = new SPOCK.Char("\"");
    return ___string_2dindex(t5122, t1720, t5129);
    t5121 = undefined;
   }
   else {
    return k2617(false);
    t5121 = undefined;
   }
  };
  return ___substring_3f(t5119, "http://", t1720);
 };
 ___open_2durl_2dpipe = t5118;	// set! open-url-pipe
 var t5133 = function (k2622, t1724) {	// line-start
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t5135 = SPOCK.jstring(t1724);
  var t5134 = t5135.length;
  var t1725 = t5134;
  var t5136 = (t1725)  >  (50);
  var t2080 = t5136;
  var t5137;
  if(t2080 !== false) {
   var t5138 = SPOCK.jstring(t1724);
   var t1732 = t5138;
   var t5140 = 50 === undefined;
   var t2081 = t5140;
   var t5141;
   if(t2081 !== false) {
    var t5142 = t1732.length;
    t5141 = t5142;
   }
   else {
    t5141 = 50;
   }
   var t5139 = t1732.substring(0, t5141);
   return ___string_2dappend(k2622, t5139, "...");
   t5137 = undefined;
  }
  else {
   return k2622(t1724);
   t5137 = undefined;
  }
 };
 ___line_2dstart = t5133;	// set! line-start
 var t5145 = function (k2623, t1735) {	// quotize
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t5146 = function (t2624) {
   return ___string_2dappend(k2623, "\"", t2624, "\"");
  };
  return ___string_2dsubst(t5146, t1735, "\n", "<br>");
 };
 ___quotize = t5145;	// set! quotize
 var t5149 = function (k2625, t1736) {	// path->filename
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1737 = undefined;
  var t5150 = function (t2627) {
   t1737 = t2627;	// set! t1737
   var t2626 = undefined;
   var t5151;
   if(t1737 !== false) {
    var t5152 = (1)  +  (t1737);
    var t1739 = t5152;
    var t5154 = SPOCK.jstring(t1736);
    var t5153 = t5154.length;
    var t1740 = t5153;
    var t5155 = SPOCK.jstring(t1736);
    var t1745 = t5155;
    var t5157 = t1740 === undefined;
    var t2082 = t5157;
    var t5158;
    if(t2082 !== false) {
     var t5159 = t1745.length;
     t5158 = t5159;
    }
    else {
     t5158 = t1740;
    }
    var t5156 = t1745.substring(t1739, t5158);
    t5151 = t5156;
   }
   else {
    t5151 = false;
   }
   return k2625(t5151);
  };
  var t5161 = new SPOCK.Char("/");
  return ___string_2dreverse_2dindex(t5150, t1736, t5161);
 };
 ___path_2d_3efilename = t5149;	// set! path->filename
 var t5163 = function (k2628, t1748, t1749) {	// string-starts-with?
  var r = SPOCK.count(arguments);
  if(r) return r;
  loop: while(true) {
   var t1750 = undefined;
   var t5165 = SPOCK.jstring(t1749);
   var t5164 = t5165.length;
   t1750 = t5164;	// set! t1750
   var t5167 = SPOCK.jstring(t1748);
   var t5166 = t5167.length;
   var t1753 = t5166;
   var t5168 = (t1753)  <=  (t1750);
   var t2083 = t5168;
   var t5169;
   if(t2083 !== false) {
    t5169 = false;
   }
   else {
    var t5170 = SPOCK.jstring(t1748);
    var t1762 = t5170;
    var t5172 = t1750 === undefined;
    var t2084 = t5172;
    var t5173;
    if(t2084 !== false) {
     var t5174 = t1762.length;
     t5173 = t5174;
    }
    else {
     t5173 = t1750;
    }
    var t5171 = t1762.substring(0, t5173);
    var t1757 = t5171;
    var t5175 = SPOCK.jstring(t1757);
    var t1765 = t5175;
    var t5176 = SPOCK.jstring(t1749);
    var t1766 = t5176;
    var t5177 = (t1765) === (t1766);
    t5169 = t5177;
   }
   return k2628(t5169);
  }
 };
 ___string_2dstarts_2dwith_3f = t5163;	// set! string-starts-with?
 var t5179 = function (k2629, t1769, t1770, t1771) {	// trserve
  var r = SPOCK.count(arguments);
  if(r) return r;
  var t1772 = undefined;
  var t5180 = function (t2660) {	// t2661
   t1772 = t2660;	// set! t1772
   var t2630 = undefined;
   var t5181 = function (t2631) {
    var t1773 = t2631;
    var t5182 = function (t2632) {
     var t1774 = t2632;
     var t5183 = function (t2633) {
      var t1775 = t2633;
      var t5184;
      if(t1773 !== false) {
       t5184 = false;
      }
      else {
       t5184 = true;
      }
      var t2085 = t5184;
      var t5185;
      if(t2085 !== false) {
       var t5186 = function (t2634) {
        var t1777 = t2634;
        return k2629(t1777);
       };
       return ____25list(t5186, 400, "Missing key or interval");
       t5185 = undefined;
      }
      else {
       var t5189;
       if(t1774 !== false) {
        t5189 = false;
       }
       else {
        t5189 = true;
       }
       var t2086 = t5189;
       var t5190;
       if(t2086 !== false) {
        var t5191 = function (t2635) {
         var t1779 = t2635;
         return k2629(t1779);
        };
        return ____25list(t5191, 400, "Missing ABC or URL of file to transpose");
        t5190 = undefined;
       }
       else {
        var t5194 = t1773.cdr;
        var t1781 = t5194;
        var t5195 = t1781.car;
        t1773 = t5195;	// set! t1773
        var t5196 = t1774.cdr;
        var t1786 = t5196;
        var t5197 = t1786.car;
        t1774 = t5197;	// set! t1774
        var t1790 = undefined;
        var t5198 = function (k2636, t1791, t1792) {	// t1790
         var r = SPOCK.count(arguments);
         if(r) return r;
         var t5199 = function (k2637, t1793) {
          var r = SPOCK.count(arguments);
          if(r) return r;
          var t1794 = undefined;
          t1794 = false;	// set! t1794
          ___transpose_2descape = t1793;	// set! transpose-escape
          var t5200 = function (t2638) {
           var t1795 = t2638;
           var t5201 = function (t2639) {
            var t5202;
            if(t2639 !== false) {
             return k2637(t1794);
             t5202 = undefined;
            }
            else {
             var t5204 = SPOCK.equalp(t1795, "");
             var t2087 = t5204;
             var t5205;
             if(t2087 !== false) {
              var t5206 = function (t2640) {
               var t1799 = t2640;
               return k2637(t1799);
              };
              return ____25list(t5206, 411, "Empty tune?");
              t5205 = undefined;
             }
             else {
              var t5209 = typeof(t1795);
              var t1802 = t5209;
              var t5210 = (t1802) === ("string");
              var t1801 = t5210;
              var t5211;
              if(t1801 !== false) {
               t5211 = t1801;
              }
              else {
               var t5212 = (t1795) instanceof SPOCK.String ;
               t5211 = t5212;
              }
              var t2088 = t5211;
              var t5213;
              if(t2088 !== false) {
               var t1804 = t1792;
               var t5214;
               if(t1804 !== false) {
                t5214 = false;
               }
               else {
                t5214 = true;
               }
               var t2089 = t5214;
               var t5215 = function (t2641) {	// t2642
                var t5216;
                if(t1775 !== false) {
                 t5216 = "text/vnd.abc";
                }
                else {
                 t5216 = "text/plain";
                }
                return ___string_2dappend(k2637, "Content-Type: ", t5216, "\n", t2641, "\n\n", t1795);
               };
               var t2642 = t5215;
               var t5218;
               if(t2089 !== false) {
                return t2642("");
                t5218 = undefined;
               }
               else {
                var t5220;
                if(t1775 !== false) {
                 return ___string_2dappend(t2642, "Content-Disposition: attachment; filename=\"", t1792, "\"");
                 t5220 = undefined;
                }
                else {
                 return t2642("Content-Disposition: inline");
                 t5220 = undefined;
                }
                t5218 = t5220;
               }
               t5213 = t5218;
              }
              else {
               return k2637(t1794);
               t5213 = undefined;
              }
              t5205 = t5213;
             }
             t5202 = t5205;
            }
           };
           return ___list_3f(t5201, t1794);
          };
          var t5225 = function (k2643, t1796) {
           var r = SPOCK.count(arguments);
           if(r) return r;
           var t5226 = function (t2644) {
            t1794 = t2644;	// set! t1794
            return k2643(undefined);
           };
           return ___transpose(t5226, t1773, t1791, t1796);
          };
          return ___call_2dwith_2doutput_2dstring(t5200, t5225);
         };
         return ___call_2dwith_2dcurrent_2dcontinuation(k2636, t5199);
        };
        t1790 = t5198;	// set! t1790
        var t5231 = function (t2645) {
         var t5232;
         if(t2645 !== false) {
          var t5233 = function (t2658) {
           t1774 = t2658;	// set! t1774
           var t2646 = undefined;
           var t5234 = function (t2647) {
            var t1805 = t2647;
            var t5235;
            if(t1805 !== false) {
             t5235 = false;
            }
            else {
             t5235 = true;
            }
            var t2090 = t5235;
            var t5236;
            if(t2090 !== false) {
             var t5237 = function (t2648) {
              var t1807 = t2648;
              return k2629(t1807);
             };
             return ____25list(t5237, 404, "Could not fetch", t1774);
             t5236 = undefined;
            }
            else {
             var t5240 = function (t2649) {
              var t1808 = t2649;
              var t1810 = SPOCK.EOF;
              var t5241 = (t1808) === (t1810);
              var t2091 = t5241;
              var t5242;
              if(t2091 !== false) {
               var t5243 = function (t2651) {
                var t5244 = function (t2650) {
                 var t1811 = t2650;
                 return k2629(t1811);
                };
                return ____25list(t5244, 404, "Not Found", t2651);
               };
               return ___quotize(t5243, t1774);
               t5242 = undefined;
              }
              else {
               var t5248 = new SPOCK.Char("X");
               var t1813 = t5248;
               var t5249 = function (t2657) {
                var t1814 = t2657;
                var t5250 = SPOCK.eqvp(t1813, t1814);
                var t2652 = t5250;
                var t1812 = t2652;
                var t5251;
                if(t1812 !== false) {
                 t5251 = false;
                }
                else {
                 t5251 = true;
                }
                var t2092 = t5251;
                var t5252;
                if(t2092 !== false) {
                 var t5253 = function (t2655) {
                  var t5254 = function (t2654) {
                   var t5255 = function (t2653) {
                    var t1815 = t2653;
                    return k2629(t1815);
                   };
                   return ____25list(t5255, 415, "Not an ABC file: ", t1774, " First line is: ", t2654);
                  };
                  return ___line_2dstart(t5254, t2655);
                 };
                 return ___read_2dline(t5253, t1805);
                 t5252 = undefined;
                }
                else {
                 var t5260 = function (t2656) {
                  return t1790(k2629, t1805, t2656);
                 };
                 return ___path_2d_3efilename(t5260, t1774);
                 t5252 = undefined;
                }
               };
               return ___peek_2dchar(t5249, t1805);
               t5242 = undefined;
              }
             };
             return ___peek_2dchar(t5240, t1805);
             t5236 = undefined;
            }
           };
           return ___open_2durl_2dpipe(t5234, t1774);
          };
          return ___trim_2dwhitespace(t5233, t1774);
          t5232 = undefined;
         }
         else {
          var t5267 = function (k2659, t1816) {
           var r = SPOCK.count(arguments);
           if(r) return r;
           return t1790(k2659, t1816, false);
          };
          return ___call_2dwith_2dinput_2dstring(k2629, t1774, t5267);
          t5232 = undefined;
         }
        };
        return ___string_2dstarts_2dwith_3f(t5231, t1774, "http");
        t5190 = undefined;
       }
       t5185 = t5190;
      }
     };
     var t5271 = SPOCK.intern("mime");
     return ___assq(t5183, t5271, t1772);
    };
    var t5273 = SPOCK.intern("abc");
    return ___assq(t5182, t5273, t1772);
   };
   var t5275 = SPOCK.intern("interval");
   return ___assq(t5181, t5275, t1772);
  };
  var t2661 = t5180;
  var t5277;
  if(t1770 !== false) {
   return ___uri_3adecode_2dquery(t2661, t1770);
   t5277 = undefined;
  }
  else {
   return t2661(false);
   t5277 = undefined;
  }
 };
 ___trserve = t5179;	// set! trserve
 var t5280;
 if(____2ascript_2a !== false) {
  var t5281 = function (t2663) {
   var t5282 = function (t2662) {
    return ___exit(k2348, t2662);
   };
   return transpose.script(t5282, t2663);
  };
  return ___list_2dtail(t5281, ____2aargv_2a, ____2aoptind_2a);
  t5280 = undefined;
 }
 else {
  return k2348(undefined);
  t5280 = undefined;
 }
};
SPOCK.run(t3976);
SPOCK.flush();
/* END OF GENERATED CODE */
